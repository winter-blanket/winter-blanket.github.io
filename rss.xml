<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>겨울이불의 아카이브 Blog</title>
        <link>https://winter-blanket.github.io/</link>
        <description>겨울이불의 아카이브 Blog</description>
        <lastBuildDate>Mon, 16 Oct 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>ko</language>
        <item>
            <title><![CDATA[여행 준비와 입국 - 항공권 예약과 eTA, 입국 수속]]></title>
            <link>https://winter-blanket.github.io/travel-to-vancouver-2</link>
            <guid>https://winter-blanket.github.io/travel-to-vancouver-2</guid>
            <pubDate>Mon, 16 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[캐나다 항공권 예약, 무비자 입국 신청과 입국 수속 요령]]></description>
            <content:encoded><![CDATA[<series-bookmark><p><a href="https://winter-blanket.github.io/travel-to-vancouver-1">1. 캐나다 밴쿠버 뚜벅이 여행기</a></p><current-post><p><a href="https://winter-blanket.github.io/travel-to-vancouver-2">2. 여행 준비와 입국 - 항공권 예약과 eTA, 입국 수속</a></p></current-post></series-bookmark>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="항공권-예약하기">항공권 예약하기<a href="https://winter-blanket.github.io/travel-to-vancouver-2#%ED%95%AD%EA%B3%B5%EA%B6%8C-%EC%98%88%EC%95%BD%ED%95%98%EA%B8%B0" class="hash-link" aria-label="항공권 예약하기에 대한 직접 링크" title="항공권 예약하기에 대한 직접 링크">​</a></h2>
<p>여행을 떠나는 걸 자꾸 망설이고 있다면 일단 교통편과 숙박을 큰 고민하지 말고 일단 예약하는 방법을 추천한다. 특히 여행 날짜까지 최소 몇 주에서 몇 달 정도 텀을 두면 좋다. 실제 여행을 가는 시기는 한참 나중이니 당장 여행 준비를 할 부담을 덜 수 있고, 환불하기는 번거로우니 어떻게든 여행을 가게 된다. 이번 밴쿠버 여행의 경우 캐나다에 이민 간 지인의 집에서 머물 예정이었기 때문에 일단 항공권부터 예약했다. 퇴사 후 쉬는 기간이다보니 일정의 제약도 없었고 가장 비행기 값이 쌀 때 가면 되겠다 싶었다.</p>
<p><strong>내가 예약한 항공권은 캐나다 밴쿠버 국제 공항 직항이었고, 항공사는 Air Canada였다. 가격은 엄마와 나 합쳐서 2명에 왕복 275만원이었는데, 이 정도면 꽤 싼 가격이라고 한다.</strong> 경유해서 타기엔 체력적 한계가 있는 엄마를 모시고 가는 여행이라, 무조건 직항으로 예약해야 했다. 캐나다 밴쿠버 직항은 거진 국내 항공사(대한항공, 아시아나항공) 아니면 캐나다 항공사 Air Canada를 타야 했다. 국내 항공사 가격이 Air Canada에 비하면 몇십만원에서 백만원 정도 더 비싼 편이었다. 캐나다 정도 되는 나라의 메인 항공사면 크게 서비스 질이 부족할 리도 없어서 가격이 싼 Air Canada를 택했다.</p>
<p>항공권 검색은 <a href="https://m-flight.naver.com/" target="_blank" rel="noopener noreferrer">네이버 항공권 예약</a>, <a href="https://www.skyscanner.co.kr/" target="_blank" rel="noopener noreferrer">Skyscanner</a> 등 몇 개의 항공권 예약 서비스를 살펴봤다. 사실 이런 가격 비교 사이트 중에서 특정 사이트가 유독 싼 가격을 제공하기는 어렵기 때문에, 대충 2-3개 정도의 사이트만 둘러보고 가장 싼 가격으로 예매하는 것이 속 편하다고 생각한다. 내가 유독 싼 가격으로 예매할 수 있었던 것은 그냥 충분히 일찍 예매했기 때문이었다. 9월 중순에 출발하는 비행기였는데 5월 말 쯤 예매했기 때문에 얼추 4개월 정도 미리 예약한 셈이다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="eta-신청하기">eTA 신청하기<a href="https://winter-blanket.github.io/travel-to-vancouver-2#eta-%EC%8B%A0%EC%B2%AD%ED%95%98%EA%B8%B0" class="hash-link" aria-label="eTA 신청하기에 대한 직접 링크" title="eTA 신청하기에 대한 직접 링크">​</a></h2>
<p>해외 여행을 자주 다닌다면 한국이 무비자 입국이 가능한 나라가 많아서 편리하다는 점을 느낄 것이다. <a href="https://www.canada.ca/en/immigration-refugees-citizenship/services/visit-canada/eta/facts-ko.html" target="_blank" rel="noopener noreferrer">캐나다도 무비자 입국이 가능하며 최대 6개월간 비자 없이 체류할 수 있다. 다만 전자 여행 허가(eTA)를 받아야 한다.</a> 신청은 <a href="https://www.canada.ca/en/immigration-refugees-citizenship/services/visit-canada/eta/apply-ko.html" target="_blank" rel="noopener noreferrer">온라인 신청 페이지</a>에서 아무때나 가능하다. 한국어 PDF 가이드 파일을 제공하지만 신청 페이지 자체는 영어로 되어 있다. 하지만 간단한 질문들이기 때문에 브라우저 번역 기능을 켜두면 영어를 몰라도 신청하는 데 큰 지장은 없을 것 같다. 남을 대신해서 신청하는 것도 가능해서 영어가 가능한 사람에게 부탁하는 것도 방법이다.</p>
<p>내 여권 번호나 여행의 목적 등 간단한 정보를 물어보기 때문에 크게 어려움 없이 신청 절차를 진행할 수 있다. 마지막에 수수료 결제 화면이 나오는데, 해외 결제가 가능한 카드(VISA, Mastercard 등)가 필요하고 캐나다 달러로 7달러가 결제된다. <em>23년 9월 기준 환율은 약 1,000원이어서 대충 1인당 7천원이 필요하다.</em> 결제까지 완료하면 즉시 내 이메일로 승인 안내 메일이 온다. <strong>이렇게 승인된 eTA는 내 여권 정보에 알아서 연결되기 때문에, 캐나다 입국 심사시 eTA 관련 서류를 보여준다거나 할 필요는 없다.</strong> 혹시 몰라서 승인 번호를 메모해두기는 했지만 쓸 일은 없었다.</p>
<full-image><img loading="lazy" alt="eTA 승인 결과 안내 이메일" src="https://winter-blanket.github.io/assets/images/eta-email-screenshot-de23979ce2125fe98bc0841878356fd5.png" width="1297" height="758" class="img_ev3q"></full-image>
<full-caption>eTA를 신청하고 수수료 결제까지 끝내면 그 즉시 받게 되는 이메일 화면.</full-caption>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="인천-공항에서-비행기-탑승-처음-타-보는-air-canada">인천 공항에서 비행기 탑승, 처음 타 보는 Air Canada<a href="https://winter-blanket.github.io/travel-to-vancouver-2#%EC%9D%B8%EC%B2%9C-%EA%B3%B5%ED%95%AD%EC%97%90%EC%84%9C-%EB%B9%84%ED%96%89%EA%B8%B0-%ED%83%91%EC%8A%B9-%EC%B2%98%EC%9D%8C-%ED%83%80-%EB%B3%B4%EB%8A%94-air-canada" class="hash-link" aria-label="인천 �공항에서 비행기 탑승, 처음 타 보는 Air Canada에 대한 직접 링크" title="인천 공항에서 비행기 탑승, 처음 타 보는 Air Canada에 대한 직접 링크">​</a></h2>
<p>eTA 신청이 끝났다면 행정적인 입국 준비는 바로 끝난다. 이제 비행기만 타면 되는데 [Air Canada 앱]을 깔아두면 은근 도움이 된다. 비행기 출발 시간 24시간 전에 모바일 체크인 푸시 알림이 오는데, 미리 해두면 공항에서 짐 부치기만 진행하면 된다. <strong>Air Canada는 무료 수하물이 1인당 23kg 캐리어 1개였다.</strong> 가는 길에 모바일 체크인을 끝내 두고, 인천 공항 Air Canada 카운터에서 짐 부치기만 진행했다.</p>
<p>한국 직항편이어서 그런지 기내 서비스 언어는 캐나다 공용어인 영어, 프랑스어, 그리고 한국어로 진행된다. 승무원 분들 중에서 동양인이 여럿 있었고, 아마 한국인인 것 같은 분들도 있었다. 좌석 모니터에서 볼 수 있는 무료 콘텐츠가 꽤 많았다. 다만 한국어 자막이 모두 붙어있지는 않고, 일부 콘텐츠에만, 그것도 자막이 아니라 더빙만 지원하는 경우도 꽤 있었다. 모든 좌석에는 충전용 USB 포트가 붙어있지만 내가 앉았던 자리는 포트가 헐거워져서인지 제대로 충전이 되질 않았다. 미리 보조 배터리를 들고 가서 별로 문제되진 않았지만 전자기기를 오래 쓸 생각이라면 <em>특히 나처럼 시간 때우려고 닌텐도 스위치를 들고 간다면</em> 보조 배터리를 따로 챙겨가는 게 좋을 것 같다.</p>
<p>가는 비행기는 9시간, 오는 비행기는 11시간 정도 걸렸는데 기내식은 2번 나왔다. 오는 비행기의 경우 2시간이 더 걸려서인지 중간에 조그만 참치 샌드위치가 간식으로 나왔다. 기내식은 거의 돼지고기 아니면 소고기인데 그 중 하나가 한식이고 다른 하나가 양식이었다. 외국 음식 못 먹는 편이라 매번 한식을 골랐는데 대한항공, 아시아나 항공에서 먹던 것에 비하면 아무래도 맛은 좀 아쉬웠다.</p>
<full-image><img loading="lazy" alt="에어 캐나다 좌석 모니터 화면" src="https://winter-blanket.github.io/assets/images/air-canada-airport-screen-b708e12ded54c71b30fa2848b52a625c.JPG" width="4032" height="3024" class="img_ev3q"></full-image>
<full-caption>좌석에서 볼 수 있는 모니터 첫 화면. &lt;식사 및 쇼핑&gt; 메뉴에 있는 식사, 음료 버튼을 누르면 기내식에 제공되는 메뉴와 음료 종류를 미리 알 수 있다.</full-caption>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="입국-수속">입국 수속<a href="https://winter-blanket.github.io/travel-to-vancouver-2#%EC%9E%85%EA%B5%AD-%EC%88%98%EC%86%8D" class="hash-link" aria-label="입국 수속에 대한 직접 링크" title="입국 수속에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3분이면-끝나는-입국-수속-때문에-줄-서기만-1시간">3분이면 끝나는 입국 수속 때문에 줄 서기만 1시간<a href="https://winter-blanket.github.io/travel-to-vancouver-2#3%EB%B6%84%EC%9D%B4%EB%A9%B4-%EB%81%9D%EB%82%98%EB%8A%94-%EC%9E%85%EA%B5%AD-%EC%88%98%EC%86%8D-%EB%95%8C%EB%AC%B8%EC%97%90-%EC%A4%84-%EC%84%9C%EA%B8%B0%EB%A7%8C-1%EC%8B%9C%EA%B0%84" class="hash-link" aria-label="3분이면 끝나는 입국 수속 때문에 줄 서기만 1시간에 대한 직접 링크" title="3분이면 끝나는 입국 수속 때문에 줄 서기만 1시간에 대한 직접 링크">​</a></h3>
<p>해외 여행을 워낙 오랜만에 가는 거라 은근히 입국 수속이 신경쓰였는데, 특히 영어를 모르시는 엄마가 입국 수속에서 무언가 질문을 받을 상황이 걱정이었다. 그래서 다이어리 종이 한 장을 뜯어다가, 보통 입국 수속에서 물어보는 질문을 영어로 적어서 뭐라 물어보면 이걸 보여주면 된다고 드렸는데, 그럴 필요가 없었다. <strong>입국 수속 절차가 키오스크로 내가 직접 하는 식이어서 막상 사람 심사자가 하는 일은 키오스크 결과지랑 여권을 보고 확인하는 것이 전부였다.</strong></p>
<full-image><img loading="lazy" alt="밴쿠버 공항 입국 수속장" src="https://winter-blanket.github.io/assets/images/vancouver-passport-control-adc7d0b475310fd719c3a020f1e545f3.png" width="1363" height="1058" class="img_ev3q"></full-image>
<full-caption>밴쿠버 공항 입국 수속장. 배배 꼬인 줄을 따라 한참을 기다리면 사진 중앙 아래쪽에 보이는 사람 키 만한 키오스크에 도달하게 된다.</full-caption>
<p>비행기에서 내리면 대충 다른 사람들이 가는 방향 따라서 쭉 걸어가면 된다. 꽤 긴 거리를 걷고 나면, 적어도 수백명은 되보이는 사람들이 꼬불꼬불하게 만들어져있는 가이드라인을 따라 줄 서있는 것을 볼 수 있다. 한참 동안 줄을 따라 걷다보면 사람 키 만한 키오스크에 순서대로 배치된다. 이 과정이 꽤나 스트레스였는데 한정된 공간 안에 최대한 많은 사람이 줄을 서도록 만들어둔 것은 알겠는데 정작 키오스크에 사람이 한 명씩 배치되도록 하는 줄의 배치가 영 이상했다. 구석에 멀쩡해보이는데 사람이 배치되지 않는 키오스크가 한 10개는 있었다. 이미 키오스크 입국 수속을 끝낸 사람들이 사람 심사자를 만나러 이동하는 줄의 방향에 있는 키오스크다보니 쓰이지 않고 방치된 것 같았다. 키오스크를 한 곳에 모아두고 줄의 방향을 더 직관적으로 만들 수도 있었을 것 같은데, 줄을 따라 가면서도 왠지 한 번 왔던 곳 또 온 거 같다던지, 중간에 갑자기 줄이 두 방향으로 갈라지는 데 안내해주는 사람이 없어서 알아서 가야 한다던지, 기계가 비어있는데 가라고 안내하는 사람이 없어서 마냥 기다린다던지, 빨리빨리의 화신인 한국인 눈에는 답답한 구석이 많이 보였다.</p>
<iframe src="https://www.youtube.com/embed/FtRisI0HtQc?si=Ef6b6HJuaeTqJF4U" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe>
<full-caption><p>위 영상 첫 도입부부터 바로 입국심사 키오스크 사용법이 나온다.<!-- --> </p></full-caption>
<br>
<p>그래도 키오스크가 있다는 사실 자체는 좋았는데 한국어 메뉴를 지원해서 입국 심사자와 영어로 어렵게 대화할 일이 없었다. 키오스크 첫 화면에 바로 언어를 선택하는 화면이 있고, 화면에 나오는 지시에 따라 진행하면 된다. 여권을 스캔하고, 여행 목적과 가져온 물품에 대한 주의사항 등 흔히 입국 심사에서 확인하는 점들을 입력한다. 하나의 기계로 여러 명을 진행할 수 있어서 일행이 있다면 한 기계로 같이 진행하면 된다. 모든 정보를 입력하면 기계 아래 쪽에 종이가 하나 출력되는데, 그걸 들고 다시 줄을 서면 또 꼬불꼬불한 길을 따라 한참을 기다리게 된다. 해외에서 한국에 들어올 때는 입국 심사대에 1명씩 서야 하는 데, 여기는 기계 1개당 일행 모두가 입국 심사를 진행해서인지, 사람 심사자에게도 1명씩 가지 않고 일행과 같이 가는 식이었다. 키오스크에서 출력된 종이와 내 여권, 일행의 여권을 모두 건네주면 심사자가 간단히 확인하고 절차는 끝난다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="캐리어-배송을-대체-어떻게-하는-걸까">캐리어 배송을 대체 어떻게 하는 걸까<a href="https://winter-blanket.github.io/travel-to-vancouver-2#%EC%BA%90%EB%A6%AC%EC%96%B4-%EB%B0%B0%EC%86%A1%EC%9D%84-%EB%8C%80%EC%B2%B4-%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%95%98%EB%8A%94-%EA%B1%B8%EA%B9%8C" class="hash-link" aria-label="캐리어 배송을 대체 어떻게 하는 걸까에 대한 직접 링크" title="캐리어 배송을 대체 어떻게 하는 걸까에 대한 직접 링크">​</a></h3>
<p>그러면 이제는 짐만 찾으면 되는데 갈 때도 올 때도 Air Canada였고, 두 번 모두 짐이 망가져서 도착했다. 캐나다 도착할 때는 캐리어 2개 중 1개의 천 덮개가 아얘 사라져있었고, 네임택은 고리가 뜯어진채로 사라져있었다. 천 덮개가 찍찍이로 고정되는 식이라 아마 네임택과 함께 어딘가에 걸려서 그대로 뜯겨져 나간 게 아닐까 싶었다. 캐리어 1개라도 살아남아 다행이었지만, 그 캐리어도 한국에 돌아올 때 덮개의 옆면 한쪽이 뜯겨져있었다. 특히나 밴쿠버 도착했을 때 몇 몇 캐리어는 레일에서 나오지 않고 엉뚱한 곳 바닥에 쌓여있기도 했다. 겨우 두 번 탄 거라지만 갈 때도 올 때도 이렇다보니 Air Canada의 캐리어 배송에는 조금 문제가 있는 것 같았다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="우여곡절-끝에-캐나다-도착">우여곡절 끝에 캐나다 도착!<a href="https://winter-blanket.github.io/travel-to-vancouver-2#%EC%9A%B0%EC%97%AC%EA%B3%A1%EC%A0%88-%EB%81%9D%EC%97%90-%EC%BA%90%EB%82%98%EB%8B%A4-%EB%8F%84%EC%B0%A9" class="hash-link" aria-label="우여곡절 끝에 캐나다 도착!에 대한 직접 링크" title="우여곡절 끝에 캐나다 도착!에 대한 직접 링크">​</a></h2>
<p>9시간 비행보다 입국 수속 기다리는 게 어째선지 더 힘들었지만 어쨌든 도착했다. 초대해주신 지인께서 데리러 와주셔서 집까지는 편하게 차로 이동했다. 처음 하루 이틀 정도는 집 근처 정도만 구경하고 시차 적응을 하며 쉬었다. 이제 슬슬 돌아다닐 때가 되었다 싶을 때쯤 대중 교통 이용 방법을 찾아보기 시작했다.</p>
<series-bookmark><p><a href="https://winter-blanket.github.io/travel-to-vancouver-1">1. 캐나다 밴쿠버 뚜벅이 여행기</a></p><current-post><p><a href="https://winter-blanket.github.io/travel-to-vancouver-2">2. 여행 준비와 입국 - 항공권 예약과 eTA, 입국 수속</a></p></current-post></series-bookmark>]]></content:encoded>
            <category>캐나다 밴쿠버 여행기 #2</category>
            <category>캐나다 여행</category>
            <category>밴쿠버 여행</category>
            <category>자유여행</category>
            <category>빅토리아 섬 여행</category>
        </item>
        <item>
            <title><![CDATA[캐나다 밴쿠버 뚜벅이 여행기]]></title>
            <link>https://winter-blanket.github.io/travel-to-vancouver-1</link>
            <guid>https://winter-blanket.github.io/travel-to-vancouver-1</guid>
            <pubDate>Thu, 12 Oct 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[자동차 없이 캐나다 밴쿠버 자유여행 다녀오기]]></description>
            <content:encoded><![CDATA[<series-bookmark><current-post><p><a href="https://winter-blanket.github.io/travel-to-vancouver-1">1. 캐나다 밴쿠버 뚜벅이 여행기</a></p></current-post><p><a href="https://winter-blanket.github.io/travel-to-vancouver-2">2. 여행 준비와 입국 - 항공권 예약과 eTA, 입국 수속</a></p></series-bookmark>
<p>마주치는 사람마다 미소가 예쁘다. 밴쿠버 여행에서 가장 기억에 남는 점이다. 물론 탁 트인 하늘도, 나무 사이로 보는 햇살도 아름답다. 그래도 자연 경관 보다는 길 가는 사람들의 행복한 모습이 한국에서 조금 더 보기 어려운 풍경이라 더 기억에 남은 듯 하다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="서울-같은-밴쿠버-제주도-같은-빅토리아-섬">서울 같은 밴쿠버, 제주도 같은 빅토리아 섬<a href="https://winter-blanket.github.io/travel-to-vancouver-1#%EC%84%9C%EC%9A%B8-%EA%B0%99%EC%9D%80-%EB%B0%B4%EC%BF%A0%EB%B2%84-%EC%A0%9C%EC%A3%BC%EB%8F%84-%EA%B0%99%EC%9D%80-%EB%B9%85%ED%86%A0%EB%A6%AC%EC%95%84-%EC%84%AC" class="hash-link" aria-label="서울 같은 밴쿠버, 제주도 같은 빅토리아 섬에 대한 직접 링크" title="서울 같은 밴쿠버, 제주도 같은 빅토리아 섬에 대한 직접 링크">​</a></h3>
<p>우연한 기회로 밴쿠버에서 약 3주 간의 시간을 보냈다. 버나비에 사는 지인의 집에서 지내며 밴쿠버 시내를 돌아다니고, 5일 간은 빅토리아 섬에 있었다. 뚜벅이라서 로키 산맥이라던가 다른 지역은 가지 못했다. 대신 밴쿠버에서 유명하다 싶은 장소는 대부분 가봤다. 애초에 외국에서 한 달 살아보기를 살짝 겸한 여행이어서 이만하면 휴식과 관광 두 마리 토끼를 그럭저럭 잡아낸 것 같다.</p>
<iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d166715.3431689392!2d-123.1229740337492!3d49.239868735159874!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x548677a8219c8373%3A0xdd0a72738752b169!2z7LqQ64KY64ukIOu4jOumrO2LsOyLnOy7rOufvOu5hOyVhCDrsoTrhIjruYQ!5e0!3m2!1sko!2skr!4v1697078596299!5m2!1sko!2skr"></iframe>
<full-caption><p>버나비는 밴쿠버시에서 약간 동쪽에 위치해 있는 지역으로, 한인이 많이 거주하는
것으로 알려져있다. 주요 관광지가 있는 밴쿠버 시내 서쪽과는 버스로 약 30분이면
갈 수 있다.</p></full-caption>
<br>
<br>
<p>3주의 시간을 돌아보면 밴쿠버는 서울 같고 빅토리아는 제주도 같았다. <strong>밴쿠버 시내는 대중교통이 잘 되어 있어서 차가 없어도 돌아다니는 데 큰 지장은 없었다. 반면 빅토리아는 시내가 훨씬 조그마해서 버스도 필요없고 도보로 주요 장소를 가볼 수 있었다.</strong> 그리고 밴쿠버에 비해 좀 더 관광지 역할로 도시를 발전시킨 것 같았다.</p>
<p>여행사 패키지 상품이 아니라 자유 여행으로 해외를 나가본 첫 경험은 일본 유후인 료칸 여행이었다. 다만 이 때는 료칸 여행이 대개 그렇듯이, 온천을 즐기는 것이 주 목적이었고 주위 관광지를 둘러볼 일은 없었다. 하물며 거의 유사 한국인가 싶을 정도로 근처 관광지의 가게들이 모두 한국어 안내판을 붙여 놓고 있었다. 특별히 외국어와 싸워가며 스마트폰을 뒤질 일이 없었다. 밴쿠버는 유후인에 비할 수 없이 큰 대도시고, 온갖 관광지를 직접 찾아가야 했다. 서툰 영어에 외국어 울렁증을 안고, 자유 여행의 지난함을 제대로 겪을 것이 뻔했다. 그래서 여행 전부터 수시로 유튜브에 여행 책자를 뒤져 가며 걱정을 가득 안고 입국했다. 그러나 막상 와보니 밴쿠버는 자유 여행 초보자에게도 난이도 매우 쉬움 정도의 여행지였다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="뚜벅이여도-걱정-없는-밴쿠버의-대중-교통">뚜벅이여도 걱정 없는 밴쿠버의 대중 교통<a href="https://winter-blanket.github.io/travel-to-vancouver-1#%EB%9A%9C%EB%B2%85%EC%9D%B4%EC%97%AC%EB%8F%84-%EA%B1%B1%EC%A0%95-%EC%97%86%EB%8A%94-%EB%B0%B4%EC%BF%A0%EB%B2%84%EC%9D%98-%EB%8C%80%EC%A4%91-%EA%B5%90%ED%86%B5" class="hash-link" aria-label="뚜벅이여도 걱정 없는 밴쿠버의 대중 교통에 대한 직접 링크" title="뚜벅이여도 걱정 없는 밴쿠버의 대중 교통에 대한 직접 링크">​</a></h3>
<p>밴쿠버에서 관광객이 모이는 유명 장소는 대중 교통으로 갈 수 있고, 배차 간격도 짧은 편이다. 우리는 보통 11시 전후에 집을 나서서 6시 전후에 다시 집으로 가는 버스를 탔다. 어느 타이밍에 버스나 지하철을 타도 20분 이상 기다려 본 적이 없었다. 대중 교통 노선이 준비돼 있어도 결제가 복잡하면 불편했겠지만, 우리로 치면 티머니 카드 같은 Compass Card 하나로 버스와 지하철을 모두 쓸 수 있다. 환승도 알아서 처리된다. 교통 요금이 한국에 비해 조금 비싸다는 것 정도가 단점이다. <em>다만 빅토리아 섬에서는 Compass Card를 쓸 수 없어서 현금을 들고 다녀야 한다.</em></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="보는-사람이-기분-좋아지는-사람들의-미소">보는 사람이 기분 좋아지는 사람들의 미소<a href="https://winter-blanket.github.io/travel-to-vancouver-1#%EB%B3%B4%EB%8A%94-%EC%82%AC%EB%9E%8C%EC%9D%B4-%EA%B8%B0%EB%B6%84-%EC%A2%8B%EC%95%84%EC%A7%80%EB%8A%94-%EC%82%AC%EB%9E%8C%EB%93%A4%EC%9D%98-%EB%AF%B8%EC%86%8C" class="hash-link" aria-label="보는 사람이 기분 좋아지는 사람들의 미소에 대한 직접 링크" title="보는 사람이 기분 좋아지는 사람들의 미소에 대한 직접 링크">​</a></h3>
<p>그리고 어딜 가나 사람들이 친절했다. 한국에서 카페에 들어가면 보통은 직원 얼굴에 피곤함이 묻어난다. 딱히 그 분들이 불친절하다는 의미가 아니다. 카페 아르바이트가 그럴만한 일이니 당연히 그럴 수밖에 없을 것이다. 그런데 여기는 어느 가게에 들어가도 대부분의 직원이 보는 사람도 기분이 좋아지는 미소를 짓는다. 어르신들을 많이 볼 수 있다는 것도 신기했다. 어떤 업종의 가게인지와 상관없이 다양한 연령대의 손님을 볼 수 있었다. 캐나다 오는 길에 탔던 Air Canada 비행기 승무원 분들도 연령대가 40대 이상인 것 같은 분들이 꽤 있었다. 길에서 마주치는 사람들도 Thank you와 Excuse me가 입에 붙어있는 것 마냥 다른 사람을 배려하는 마음이 몸에 베어 있었다.</p>
<p>광활한 자연과 화려한 볼 거리를 원한다면 밴쿠버는 적절한 관광지가 아니라고 생각한다. 반면 깨끗한 자연 환경 안에서, 완전한 휴식 여행과 완전한 관광 여행 그 중간 지점을 원한다면 만족할만한 곳이다. 이 곳을 돌아다니는 데 알아두면 좋은 정보는 대부분 인터넷에서 쉽게 찾을 수 있다. 그래도 추억을 기록할 겸, 그리고 나와 비슷한 여행을 계획하고 있을 누군가가 정보르 한 데 모아 얻을 수 있도록, 지난 3주 간의 여정을 순서대로 기록할 생각이다.</p>
<series-bookmark><current-post><p><a href="https://winter-blanket.github.io/travel-to-vancouver-1">1. 캐나다 밴쿠버 뚜벅이 여행기</a></p></current-post><p><a href="https://winter-blanket.github.io/travel-to-vancouver-2">2. 여행 준비와 입국 - 항공권 예약과 eTA, 입국 수속</a></p></series-bookmark>]]></content:encoded>
            <category>캐나다 밴쿠버 여행기 #1</category>
            <category>캐나다 여행</category>
            <category>밴쿠버 여행</category>
            <category>자유여행</category>
            <category>빅토리아 섬 여행</category>
        </item>
        <item>
            <title><![CDATA[구글 서치 콘솔 등록하고 사용자 인사이트 얻기]]></title>
            <link>https://winter-blanket.github.io/collect-user-insight</link>
            <guid>https://winter-blanket.github.io/collect-user-insight</guid>
            <pubDate>Wed, 26 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[검색 유입을 늘리기 위해 구글/네이버에 사이트를 등록하고, 사용자 유입 통계 데이터 보는 방법]]></description>
            <content:encoded><![CDATA[<series-bookmark><p><a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus">1. 웅덩이 파는 데 포크레인 써보기</a>
<a href="https://winter-blanket.github.io/understand-design-system-and-figma">2. Design System 흉내를 위해 Figma 힐끗
보기</a> <a href="https://winter-blanket.github.io/react-101-and-install-docusaurus">3. React 기초 훑어보고 Docusaurus
설치하기</a> <a href="https://winter-blanket.github.io/docusaurus-configuration-1">4. Docusaurus config 톺아보기
(1)</a> <a href="https://winter-blanket.github.io/docusaurus-configuration-2">5. Docusaurus config 톺아보기
(2)</a> <a href="https://winter-blanket.github.io/customize-style-of-docusaurus">6. Swizzle로 디자인
커스터마이징하기</a> <a href="https://winter-blanket.github.io/deploy-website-with-github-pages">7. Github Pages로
Docusaurus 웹사이트 호스팅하기</a></p><current-post><p><a href="https://winter-blanket.github.io/collect-user-insight">8. 구글 서치 콘솔 등록하고 사용자 인사이트 얻기</a></p></current-post></series-bookmark>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="google-analytics-플러그인-활용하기">Google Analytics 플러그인 활용하기<a href="https://winter-blanket.github.io/collect-user-insight#google-analytics-%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0" class="hash-link" aria-label="Google Analytics 플러그인 활용하기에 대한 직접 링크" title="Google Analytics 플러그인 활용하기에 대한 직접 링크">​</a></h2>
<p>Docusaurus에 Google Analytics를 붙이려면 <a href="https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-google-gtag" target="_blank" rel="noopener noreferrer">gtag 플러그인</a>을 사용해야 한다. trackingID라는 값을 확인해서 <a href="http://localhost:3000/blog/docusaurus-configuration-1#plugin-google-gtag" target="_blank" rel="noopener noreferrer">config 파일에 추가만 하면</a> 연결은 끝난다.</p>
<p><img loading="lazy" alt="구글 애널리틱스에서 trackingID 만들기 1" src="https://winter-blanket.github.io/assets/images/google-analytics-1-002e26beae3536661af8f7da4fc74bfe.png" width="2369" height="1286" class="img_ev3q"></p>
<p><a href="https://analytics.google.com/" target="_blank" rel="noopener noreferrer">Google Analytics 사이트</a>에 접속해서 측정 시작 버튼을 누른다.</p>
<p><img loading="lazy" alt="구글 애널리틱스에서 trackingID 만들기 2" src="https://winter-blanket.github.io/assets/images/google-analytics-2-8bafc7278b42dad534acb6d2594c0f11.png" width="2369" height="1251" class="img_ev3q"></p>
<p>가입하기 과정을 시작하면 여러 종류의 이름을 입력해야 하는데, trackingID만 얻을 수 있으면 되므로 적당한 이름으로 지으면 된다. 계정 이름을 입력하고 다음으로 넘어간다.</p>
<p><img loading="lazy" alt="구글 애널리틱스에서 trackingID 만들기 3" src="https://winter-blanket.github.io/assets/images/google-analytics-3-b161d2668e15eb905d4dd12040b551f5.png" width="2369" height="1251" class="img_ev3q"></p>
<p>마찬가지로 적당한 이름을 속성 이름에 입력한다. 그 다음 2단계는 내 사이트의 분야와 사업 규모 등을 물어보는 질문이기 때문에 적당히 해당하는 값으로 선택하면 된다.</p>
<p><img loading="lazy" alt="구글 애널리틱스에서 trackingID 만들기 4" src="https://winter-blanket.github.io/assets/images/google-analytics-4-ed8cdc158349972ba834f5a62e7c3639.png" width="2369" height="1251" class="img_ev3q"></p>
<p>마지막 단계에서 어떤 플랫폼을 추적할지 선택지가 나오는데 웹을 선택한다.</p>
<p><img loading="lazy" alt="구글 애널리틱스에서 trackingID 만들기 5" src="https://winter-blanket.github.io/assets/images/google-analytics-5-841089990bc4d1c8f5c10dff6ad8b2de.png" width="2369" height="1251" class="img_ev3q"></p>
<p>그럼 사이트 도메인을 입력하는 곳과 스트림 이름을 적는 곳이 나온다. 여기까지 모든 과정을 끝내면 본격적인 관리 화면에 진입한다.</p>
<p><img loading="lazy" alt="구글 애널리틱스에서 trackingID 만들기 6" src="https://winter-blanket.github.io/assets/images/google-analytics-6-e1346e21dd6cdbf1bc2cd2d36e1d9920.png" width="2369" height="1251" class="img_ev3q"></p>
<p>메뉴 개수가 매우 많고 Docusaurus에서 요구하는 ID 외에도 다양한 속성값이 있어서 헷갈리기 쉽다. Docusaurus 플러그인에서 사용하는 ID는 데이터 스트림의 ID이므로 데이터 스트림 메뉴를 클릭한다.</p>
<p><img loading="lazy" alt="구글 애널리틱스에서 trackingID 만들기 7" src="https://winter-blanket.github.io/assets/images/google-analytics-7-05e728f482ea0b9991d1db46d9abdca5.png" width="2369" height="1251" class="img_ev3q"></p>
<p>그러면 앞서 생성 과정에서 맨 마지막 단계에 설정한 도메인 주소와 스트림 이름을 볼 수 있다. 여기서 우측에 있는 측정 ID를 복사해 Docusaurus config 파일에 입력하면 된다.</p>
<p>이번 포스트를 쓰면서 계정, 속성, 데이터 스트림의 관계를 찾아봤는데 Google Analytics에서 데이터를 관리하는 레벨 차이라고 보면 되는 것 같다. <a href="https://support.google.com/analytics/answer/9303323?hl=ko&amp;ref_topic=9303569&amp;sjid=14281575778111787760-AP#zippy=%2C%EC%9D%B4-%EB%8F%84%EC%9B%80%EB%A7%90%EC%97%90%EC%84%9C%EB%8A%94-%EB%8B%A4%EC%9D%8C-%EB%82%B4%EC%9A%A9%EC%9D%84-%EB%8B%A4%EB%A3%B9%EB%8B%88%EB%8B%A4" target="_blank" rel="noopener noreferrer">가이드 페이지</a> 맨 아래에 보면 계정/속성/스트림 간의 레벨 차이를 알기 쉬운 비교로 표현하고 있다. 사용자의 터치 포인트이자, 웹 혹은 앱 플랫폼 1개가 데이터 스트림 1개에 대응한다. 1개의 속성은 최대 50개의 데이터 스트림을 가질 수 있는데, 속성은 일종의 프로젝트 단위로 볼 수 있다고 한다. 하나의 기업이 여러개의 사업군을 가질 수 있고, 각 사업에서 앱/웹 서비스를 여러개 가지고 있는 경우가 있으니, 대충 계정은 기업, 속성은 사업군 혹은 프로젝트, 데이터 스트림은 서비스 1개 단위라고 보면 될 것 같다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="google-search-console에-사이트-등록하기">Google Search Console에 사이트 등록하기<a href="https://winter-blanket.github.io/collect-user-insight#google-search-console%EC%97%90-%EC%82%AC%EC%9D%B4%ED%8A%B8-%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0" class="hash-link" aria-label="Google Search Console에 사이트 등록하기에 대한 직접 링크" title="Google Search Console에 사이트 등록하기에 대한 직접 링크">​</a></h2>
<p>원래는 위의 Google Analytics 등록으로 끝내려다가, 생각해보니 마냥 기다린다고 유입이 되는 것도 아닌데 좀 더 검색 유입을 높일 수 있는 방법이 있는지 찾아봤다. 국내의 대표적인 검색 엔진인 Google과 네이버에 사이트 등록을 해두면 검색 엔진 봇이 내 사이트를 살펴보게 할 수 있고, 유입 통계 데이터도 같이 볼 수 있다. 특히 네이버에서도 유입이 되게 하려면 사이트 등록을 같이 해주는게 좋다고 판단했다.</p>
<p><img loading="lazy" alt="Google Search Console에 사이트 등록하기 1" src="https://winter-blanket.github.io/assets/images/google-search-console-1-cf67a30f0687f6d22028c01a472f02f1.png" width="2369" height="1289" class="img_ev3q"></p>
<p><a href="https://search.google.com/search-console/about" target="_blank" rel="noopener noreferrer">Google Search Console</a>에 들어가서 시작하기 버튼을 누른다. 그러면 위와 같이 도메인을 입력하는 화면이 나오는데 여기서 오른쪽 칸에 <code>https://</code>를 포함한 도메인을 입력한다.</p>
<p><img loading="lazy" alt="Google Search Console에 사이트 등록하기 2" src="https://winter-blanket.github.io/assets/images/google-search-console-2-463c65c24699b85040199a4a56ae75a1.png" width="2369" height="1289" class="img_ev3q"></p>
<p>그러면 앞서 Google Analytics를 이미 등록했기 때문에 사이트 소유권이 바로 인증되었다는 메시지를 볼 수 있다.</p>
<p><img loading="lazy" alt="Google Search Console에 사이트 등록하기 3" src="https://winter-blanket.github.io/assets/images/google-search-console-3-fe7993cf6eeda7c39508853ed4a13b80.png" width="2369" height="1289" class="img_ev3q"></p>
<p>관리 페이지로 들어오면 유입 통계를 볼 수 있는 메뉴와 구글 검색 봇이 사이트에 더 효율적으로 접근할 수 있도록 설정하는 기능들(페이지 색인, sitemap 등)이 보인다. 여기서 Sitemap 버튼을 누른 후, 도메인 주소 입력 칸에 sitemap.xml을 제출해주면 된다. Sitemap은 내 웹사이트 안을 구성하는 콘텐츠의 지도 역할을 하는데, Sitemap 정보가 정확할 수록 검색 봇이 웹사이트 내용을 더 정확하게 파악할 수 있어서 검색 유입에 도움이 된다. Docusaurus는 build할 때마다 알아서 sitemap을 생성하고 그걸 내 도메인/sitemap.xml 주소에 넣어준다. 따라서 sitemap이 어디있는지 주소를 처음 한 번 설정해주는 것만으로 상시 업데이트된 상태로 관리할 수 있다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="페이지-색인이-느릴-때-대처-방법">페이지 색인이 느릴 때 대처 방법<a href="https://winter-blanket.github.io/collect-user-insight#%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%83%89%EC%9D%B8%EC%9D%B4-%EB%8A%90%EB%A6%B4-%EB%95%8C-%EB%8C%80%EC%B2%98-%EB%B0%A9%EB%B2%95" class="hash-link" aria-label="페이지 색인이 느릴 때 대처 방법에 대한 직접 링크" title="페이지 색인이 느릴 때 대처 방법에 대한 직접 링크">​</a></h3>
<p><img loading="lazy" alt="Google Search Console에 사이트 등록하기 4" src="https://winter-blanket.github.io/assets/images/google-search-console-4-7e6292856642e5021580f17e6c02e95b.png" width="2369" height="1289" class="img_ev3q"></p>
<p>사이트 등록을 한 지 2-3주는 지났지만 아직 색인이 생성되지 않은 페이지가 꽤 많은 것으로 나온다. 찾아보니 비슷한 증상을 겪는 경우가 자주 있었고 대충 해결방법도 비슷했다.</p>
<ol>
<li>별다른 문제가 있는 건 아니고 아직 검색 봇이 일을 안 한 거니까 시간이 해결해준다.</li>
<li>웹상에 이미 존재하는 콘텐츠는 색인이 느리다. 찾아보기 힘든 독창적인 콘텐츠를 써야 한다.</li>
<li>페이지 안에 내용이 너무 많으면 과부하가 걸려서 색인이 느려질 수 있다.</li>
</ol>
<p>이 중에서 3번을 보고 나서 포스트에 truncate를 넣지 않았다가 전부 넣어주는 것으로 수정했다. 모든 페이지가 색인이 되지 않다가 5페이지 정도가 색인에 성공했기 때문에 효과가 있었던 것 같다. 다만 비슷한 시기에 URL 검사 등 다른 해결책도 시도해봤기 때문에 정확히 어느 정도 효과가 있었는지는 알 수 없다. truncate는 블로그 포스트가 목록에 나열될 때 포스트의 내용을 얼마나 미리 보여줄지를 지정하는 기능이다.</p>
<full-image><img loading="lazy" alt="Truncate 사용 예시" src="https://winter-blanket.github.io/assets/images/truncate-a7d7c8f6b6ac2a119babadfa0370b1ba.png" width="1706" height="1098" class="img_ev3q"></full-image>
<full-caption>지금 이 포스팅을 VS Code로 봤을 때의 스크린샷. 가운데 라고 적힌 부분을 볼 수 있다.</full-caption>
<p>내 블로그의 포스트 목록 페이지는 각 포스트의 세로 길이가 지정되어 있고, 삐져나오는 텍스트는 알아서 숨겨지도록 해놨다. 그래서 굳이 truncate로 일일이 미리볼 내용을 줄여줄 필요가 없기 때문에 모든 포스트에 사용하지 않았다. 이러면 화면에 보이지 않을 뿐, /blog 경로에는 모든 포스트의 모든 텍스트와 사진, 동영상 등이 모두 포함되어 있기 때문에 검색 봇이 페이지 내용을 읽어들이는 데 과부하가 올 수 있겠다 싶었다. 그래서 현재는 모든 포스트에 적당한 위치에 truncate를 넣어주고 있다. 사용법은 간단하다. 미리 보기를 줄이고 싶은 부분에 <code>&lt;!-- truncate --&gt;</code> 라는 문구를 넣어주기만 하면 된다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="google-search-console과-google-analytics의-용도-차이">Google Search Console과 Google Analytics의 용도 차이<a href="https://winter-blanket.github.io/collect-user-insight#google-search-console%EA%B3%BC-google-analytics%EC%9D%98-%EC%9A%A9%EB%8F%84-%EC%B0%A8%EC%9D%B4" class="hash-link" aria-label="Google Search Console과 Google Analytics의 용도 차이에 대한 직접 링크" title="Google Search Console과 Google Analytics의 용도 차이에 대한 직접 링크">​</a></h3>
<left-image><img loading="lazy" alt="Google Search Console과 Google Analytics의 통계 비교" src="https://winter-blanket.github.io/assets/images/google-search-console-and-analytics-1-c4452bcc3875b244ad760c9922d431b7.png" width="2369" height="1289" class="img_ev3q"></left-image>
<right-image><img loading="lazy" alt="Google Search Console과 Google Analytics의 통계 비교" src="https://winter-blanket.github.io/assets/images/google-search-console-and-analytics-2-dc6838fd1d26cf2504283306d454a789.png" width="2369" height="1289" class="img_ev3q"></right-image>
<left-caption>Google Search Console의 통계 페이지</left-caption>
<right-caption>Google Analytics의 통계 페이지</right-caption>
<p>데이터 수가 워낙 적어서 비교하는데 제약이 있긴 하지만 한 눈에 보기에도 양측이 수치 차이가 있고, 보는 데이터도 다르다. Search Console은 말 그대로 구글 검색 결과를 위한 도구다 보니, 실제 검색 결과에 얼마나 노출되었는지, 그리고 그 상태에서 클릭 이벤트가 발생했는지만을 보여주는 것 같았다. 사용자가 검색하다가 알아서 유입되는 경우다 보니, 현재 내 블로그 정도로는 매우 수치가 적다.</p>
<full-image><img loading="lazy" alt="Google Analytics 사용자 획득 통계 페이지" src="https://winter-blanket.github.io/assets/images/google-search-console-and-analytics-3-faa4094314eb34093ca9731ca214aeca.png" width="2369" height="1289" class="img_ev3q"></full-image>
<full-caption>사용자 획득 통계 페이지 스크린샷. Referral은 다른 페이지에서 링크를 타고 들어온 경우, Direct는 브라우저에 링크를 직접 입력해서 들어온 경우, Organic Search는 구글 검색으로 유입된 경우를 뜻한다. </full-caption>
<p>반면 Google Analytics 쪽은 사이트에 발생한 모든 이벤트를 추적하다보니, 페이지뷰 이벤트가 나름 몇십번 발생한 것을 볼 수 있었다. 내 IP는 제외해놨기 때문에 다른 사람이 들어오긴 한 건데, 개인 SNS에 사이트 링크를 걸어놓은 걸 타고 들어온 게 아닐까 추측중이다. 실제로 유입된 사용자 데이터를 보니 Referral 수치가 가장 많았다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="네이버-서치-어드바이저에-사이트-등록하기">네이버 서치 어드바이저에 사이트 등록하기<a href="https://winter-blanket.github.io/collect-user-insight#%EB%84%A4%EC%9D%B4%EB%B2%84-%EC%84%9C%EC%B9%98-%EC%96%B4%EB%93%9C%EB%B0%94%EC%9D%B4%EC%A0%80%EC%97%90-%EC%82%AC%EC%9D%B4%ED%8A%B8-%EB%93%B1%EB%A1%9D%ED%95%98%EA%B8%B0" class="hash-link" aria-label="네이버 서치 어드바이저에 사이트 등록하기에 대한 직접 링크" title="네이버 서치 어드바이저에 사이트 등록하기에 대한 직접 링크">​</a></h2>
<p>네이버 사이트 등록을 검색하면 흔히 네이버 웹마스터 도구라는 곳으로 가야 한다고 나오는데, 여길 들어가려면 먼저 <a href="https://searchadvisor.naver.com/" target="_blank" rel="noopener noreferrer">네이버 서치 어드바이저</a> 페이지에 들어가야 한다.</p>
<p><img loading="lazy" alt="네이버 서치 어드바이저에 사이트 등록하기 1" src="https://winter-blanket.github.io/assets/images/naver-search-advisor-1-6af5ad50decd0b2c3e1066746dd1dacc.png" width="2369" height="1289" class="img_ev3q"></p>
<p>사이트 상단에 보이는 웹마스터 도구 버튼을 클릭한다.</p>
<p><img loading="lazy" alt="네이버 서치 어드바이저에 사이트 등록하기 2" src="https://winter-blanket.github.io/assets/images/naver-search-advisor-2-0ffdab1ab22b606149a7c67e9a5206f1.png" width="2369" height="1289" class="img_ev3q"></p>
<p>사이트를 등록하는 화면에서 <a href="https://xn--bx2b/" target="_blank" rel="noopener noreferrer">https://를</a> 포함한 도메인 전체를 입력한다.</p>
<p><img loading="lazy" alt="네이버 서치 어드바이저에 사이트 등록하기 3" src="https://winter-blanket.github.io/assets/images/naver-search-advisor-3-e7f904f9b672e091483e3042cc36c93c.png" width="2369" height="1289" class="img_ev3q"></p>
<p>그럼 위와 같은 소유권 인증 화면이 나오는데, Google Search Console 때와 달리 따로 등록한 내용이 없으니 인증을 직접 처리해야 한다. HTML 태그를 head에 넣기에는 <a href="https://winter-blanket.github.io/blog/customize-style-of-docusaurus#script-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%93%B0%EB%A0%A4%EA%B3%A0-%ED%96%88%EC%A7%80%EB%A7%8C" target="_blank" rel="noopener noreferrer">head를 편집하는 방법을 찾지 못했기 때문에</a> HTML 파일을 업로드하는 방법으로 인증해야 한다. 업로드해야 하는 파일을 다운로드하고, 이 파일을 내 Docusaurus 프로젝트 폴더에서 <code>src/static</code> 경로 안에 넣어두면 된다. static 폴더는 React가 사이트를 build할 때 포함하고 싶은 데이터를 넣어두는 폴더기 때문이다.</p>
<center-image><img loading="lazy" alt="네이버 서치 어드바이저에 사이트 등록하기 4" src="https://winter-blanket.github.io/assets/images/naver-search-advisor-4-a8614e7b06a904a7df70a3dbf98f611a.png" width="352" height="198" class="img_ev3q"></center-image>
<center-caption>내 웹사이트의 static 폴더 하위 파일들. 네이버 웹마스터 도구에서 다운로드받은 파일이 들어있다.</center-caption>
<p>물론 파일을 프로젝트 폴더에 넣는 것 만으로는 아직 도메인에 반영되기 전이기 때문에 <a href="https://winter-blanket.github.io/blog/deploy-website-with-github-pages#%EB%B0%B0%ED%8F%AC-%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0" target="_blank" rel="noopener noreferrer">배포 명령어를 한 번 실행</a>해주어야 한다.</p>
<p><img loading="lazy" alt="네이버 서치 어드바이저에 사이트 등록하기 5" src="https://winter-blanket.github.io/assets/images/naver-search-advisor-5-41238b5127b43e7d5834264be10d60db.png" width="2369" height="1289" class="img_ev3q"></p>
<p>배포 후 소유 확인 버튼을 누르면 사이트 소유권이 확인되고, 위와 같이 내 사이트가 목록에 나오는 걸 볼 수 있다. 여기서 사이트 주소를 클릭하면 관리 페이지로 이동한다.</p>
<p><img loading="lazy" alt="네이버 서치 어드바이저에 사이트 등록하기 6" src="https://winter-blanket.github.io/assets/images/naver-search-advisor-6-49778b56189b5e735165d6c07ff8f954.png" width="2369" height="1289" class="img_ev3q"></p>
<p>관리 페이지에서 마찬가지로 사이트맵을 등록할 수 있다. 왼쪽 메뉴에서 <code>요청</code> &gt; <code>사이트맵 제출</code> 버튼을 누른 후, 사이트맵 파일이 위치한 주소를 입력하면 된다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="네이버-사이트-간단-체크-기능-사용해보기">네이버 사이트 간단 체크 기능 사용해보기<a href="https://winter-blanket.github.io/collect-user-insight#%EB%84%A4%EC%9D%B4%EB%B2%84-%EC%82%AC%EC%9D%B4%ED%8A%B8-%EA%B0%84%EB%8B%A8-%EC%B2%B4%ED%81%AC-%EA%B8%B0%EB%8A%A5-%EC%82%AC%EC%9A%A9%ED%95%B4%EB%B3%B4%EA%B8%B0" class="hash-link" aria-label="네이버 사이트 간단 체크 기능 사용해보기에 대한 직접 링크" title="네이버 사이트 간단 체크 기능 사용해보기에 대한 직접 링크">​</a></h3>
<p><img loading="lazy" alt="네이버 서치 어드바이저에 사이트 등록하기 " src="https://winter-blanket.github.io/assets/images/naver-search-advisor--248b35bbedf4aa606febbed0f2295a3b.png" width="2371" height="1253" class="img_ev3q"></p>
<p>네이버에서는 사이트 메타 데이터가 잘 들어가있는지 간단히 체크할 수 있는 기능을 제공한다. 앞서 봤던 관리 페이지가 <code>사이트 관리</code> 메뉴인데, 바로 옆에 있는 <code>간단 체크</code> 메뉴에 들어가서 도메인 주소를 입력하면 기본적인 사항을 체크할 수 있다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="robotstxt-추가하기">robots.txt 추가하기<a href="https://winter-blanket.github.io/collect-user-insight#robotstxt-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0" class="hash-link" aria-label="robots.txt 추가하기에 대한 직접 링크" title="robots.txt 추가하기에 대한 직접 링크">​</a></h2>
<p>네이버 웹마스터 도구 관리 페이지에 robots.txt가 있는 걸 보고 생각나서 robots.txt 파일도 만들었다. robots.txt는 검색 엔진의 봇이 사이트에 들어왔을 때 어디까지 사이트 내용을 확인할 수 있도록 허용할지를 규정하는 역할을 한다. 웹크롤링을 해본 사람이라면 익숙할 것이다. 사이트마다 데이터 유출을 막기 위해 robots.txt에 일체의 크롤링을 허용하지 않는다고 적어놓는 경우가 있기 때문이다.</p>
<div class="language-plain_text codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockTitle_Ktv7">src/static/robots.txt</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-plain_text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">User-agent: *</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">Allow:/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>나는 특별히 데이터 노출을 막을 이유가 없기 때문에 위와 같이 robots.txt 파일을 만들었다. 앞서 네이버 사이트 소유권 인증과 동일하게 static 폴더에 넣어두면 간편히 사이트에 배포할 수 있다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="시리즈를-마치며">시리즈를 마치며<a href="https://winter-blanket.github.io/collect-user-insight#%EC%8B%9C%EB%A6%AC%EC%A6%88%EB%A5%BC-%EB%A7%88%EC%B9%98%EB%A9%B0" class="hash-link" aria-label="시리즈를 마치며에 대한 직접 링크" title="시리즈를 마치며에 대한 직접 링크">​</a></h2>
<p>이제 웹사이트를 만들면서 겪었던 거의 대부분의 일에 대한 기록이 끝났다. 예상보다 포스팅 개수도 길이도 길어졌다. 고생했던 과정을 다시 복기하면서 부가적인 정보를 더 찾아보기도 하고, 여러모로 새로운 사실을 많이 배울 수 있었다. 완벽함보다 꾸준함이 더 중요한 법이다. 이번 블로그에는 꾸준히 글을 올릴 수 있게 되면 좋겠다.</p>
<series-bookmark><p><a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus">1. 웅덩이 파는 데 포크레인 써보기</a>
<a href="https://winter-blanket.github.io/understand-design-system-and-figma">2. Design System 흉내를 위해 Figma 힐끗
보기</a> <a href="https://winter-blanket.github.io/react-101-and-install-docusaurus">3. React 기초 훑어보고 Docusaurus
설치하기</a> <a href="https://winter-blanket.github.io/docusaurus-configuration-1">4. Docusaurus config 톺아보기
(1)</a> <a href="https://winter-blanket.github.io/docusaurus-configuration-2">5. Docusaurus config 톺아보기
(2)</a> <a href="https://winter-blanket.github.io/customize-style-of-docusaurus">6. Swizzle로 디자인
커스터마이징하기</a> <a href="https://winter-blanket.github.io/deploy-website-with-github-pages">7. Github Pages로
Docusaurus 웹사이트 호스팅하기</a></p><current-post><p><a href="https://winter-blanket.github.io/collect-user-insight">8. 구글 서치 콘솔 등록하고 사용자 인사이트 얻기</a></p></current-post></series-bookmark>]]></content:encoded>
            <category>Docusaurus로 개인 홈페이지 만들기 #8</category>
            <category>프로그래밍 공부 기록</category>
            <category>Figma</category>
            <category>Design System</category>
            <category>React</category>
            <category>Docusaurus</category>
            <category>Github Pages</category>
        </item>
        <item>
            <title><![CDATA[Github Pages로 Docusaurus 웹사이트 호스팅하기]]></title>
            <link>https://winter-blanket.github.io/deploy-website-with-github-pages</link>
            <guid>https://winter-blanket.github.io/deploy-website-with-github-pages</guid>
            <pubDate>Tue, 25 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Docusaurus로 만든 웹사이트의 호스팅으로 Github Pages를 사용하는 경우의 사용법]]></description>
            <content:encoded><![CDATA[<series-bookmark><p><a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus">1. 웅덩이 파는 데 포크레인 써보기</a>
<a href="https://winter-blanket.github.io/understand-design-system-and-figma">2. Design System 흉내를 위해 Figma 힐끗
보기</a> <a href="https://winter-blanket.github.io/react-101-and-install-docusaurus">3. React 기초 훑어보고 Docusaurus
설치하기</a> <a href="https://winter-blanket.github.io/docusaurus-configuration-1">4. Docusaurus config 톺아보기
(1)</a> <a href="https://winter-blanket.github.io/docusaurus-configuration-2">5. Docusaurus config 톺아보기
(2)</a> <a href="https://winter-blanket.github.io/customize-style-of-docusaurus">6. Swizzle로 디자인
커스터마이징하기</a></p><current-post><p><a href="https://winter-blanket.github.io/deploy-website-with-github-pages">7. Github Pages로 Docusaurus 웹사이트
호스팅하기</a></p></current-post><p><a href="https://winter-blanket.github.io/collect-user-insight">8. 구글 서치 콘솔 등록하고 사용자 인사이트 얻기</a></p></series-bookmark>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="docusaurus의-호스팅-방법">Docusaurus의 호스팅 방법<a href="https://winter-blanket.github.io/deploy-website-with-github-pages#docusaurus%EC%9D%98-%ED%98%B8%EC%8A%A4%ED%8C%85-%EB%B0%A9%EB%B2%95" class="hash-link" aria-label="Docusaurus의 호스팅 방법에 대한 직접 링크" title="Docusaurus의 호스팅 방법에 대한 직접 링크">​</a></h2>
<p><a href="https://docusaurus.io/docs/deployment#deploying-to-netlify" target="_blank" rel="noopener noreferrer">Docusaurus 가이드</a>에서는 다양한 호스팅사를 기준으로 호스팅 방법을 설명하고 있다. 대부분이 국내에서 흔히 들어보기 어려운 서비스이고, 그나마 친숙한 서비스가 <a href="https://pages.github.com/" target="_blank" rel="noopener noreferrer">Github Pages</a>이다. 일반적인 블로그 서비스를 쓰지 않고 직접 개인 홈페이지를 구축할 때 가장 큰 단점 중 하나가 어떻게든 서빙 비용이 든다는 점이다. Github Pages는 내 Github 계정 1개당 1개의 repository를 무료 웹사이트 호스팅 용도로 쓸 수 있게 하는 서비스다. 어차피 버전 관리에 Git을 쓴다면 호스팅 비용도 아낄 겸 Github Pages는 굉장히 편리한 선택이다. Github.io로 도메인이 고정되지만 개인 사이트에서 커스텀 도메인 연결은 필수가 아니라서 큰 단점은 아니고, <a href="https://docs.github.com/ko/pages/configuring-a-custom-domain-for-your-github-pages-site" target="_blank" rel="noopener noreferrer">꼭 필요하다면 연결하는 것도 가능하다.</a> 물론 나는 서빙 비용도 아끼는 마당에 굳이 도메인 연간 유지비를 쓰고 싶지 않았기 때문에 연결하지 않았다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="github-pages-사용법">Github Pages 사용법<a href="https://winter-blanket.github.io/deploy-website-with-github-pages#github-pages-%EC%82%AC%EC%9A%A9%EB%B2%95" class="hash-link" aria-label="Github Pages 사용법에 대한 직접 링크" title="Github Pages 사용법에 대한 직접 링크">​</a></h2>
<p><a href="https://pages.github.com/" target="_blank" rel="noopener noreferrer">Github Pages 가이드</a>에 간편한 튜토리얼이 설명되어 있어서 첫 세팅 자체는 어렵지 않다. 오히려 어려운 점은 Docusaurus의 Github Pages 호스팅 설정과 Github Pages 설정을 제대로 못한 것인지, Docusaurus의 배포가 제대로 되지 않는 경우가 있었다는 점이다. 아주 예전에 Docusaurus로 처음 개인 홈페이지 개발을 시도했을 때 배포 단계에서 자꾸 문제가 생겨서 포기했었는데, 다행히 이번에는 원활히 배포가 되었다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-1-github-pages-초기-세팅을-마친다">Step 1. Github Pages 초기 세팅을 마친다.<a href="https://winter-blanket.github.io/deploy-website-with-github-pages#step-1-github-pages-%EC%B4%88%EA%B8%B0-%EC%84%B8%ED%8C%85%EC%9D%84-%EB%A7%88%EC%B9%9C%EB%8B%A4" class="hash-link" aria-label="Step 1. Github Pages 초기 세팅을 마친다.에 대한 직접 링크" title="Step 1. Github Pages 초기 세팅을 마친다.에 대한 직접 링크">​</a></h3>
<ul>
<li>respository 이름이 자신의 Github 계정 Owner 이름 뒤에 .github.io를 붙인 이름이어야 한다.</li>
<li>respository 공개 여부는 Public이어야 한다.</li>
</ul>
<p>Github Pages 전용 repository를 만드는 방법은 간단하다. 일반적인 repository를 만드는 경로 그대로 들어가서 위의 2개 조건을 지키기만 하면 된다. 무료로 제공되는 github.io 도메인 앞 부분은 자신이 원하는 문구로 지정할 수 있는 셈이기 때문에 도메인에 살리고 싶은 아이덴티티를 넣고 싶다면 Owner 이름을 바꾸면 된다. Github 자체를 이미 자신의 포트폴리오 용도로 쓰고 있다면 Github Pages 개설용 Github 계정을 하나 새로 만드는 것도 방법일 것이다.</p>
<full-image><img loading="lazy" alt="Github repository를 생성하는 화면 스크린샷" src="https://winter-blanket.github.io/assets/images/create-github-repository-b94eada4699c4b0bba5bbab15d047695.png" width="2122" height="734" class="img_ev3q"></full-image>
<full-caption>이미 세팅을 마친 후 스크린샷을 떠서 주의 문구가 나오지만 실제로는 정상적으로 repository를 만들 수 있다.</full-caption>
<p>웹상에 공개된 페이지의 호스팅 역할이기 때문에 repository가 public인 셈이라서, 당연히 문제가 될만한 파일은 repository에 올라가지 않게 주의해햐 한다. Docusaurus의 경우 react 기반이라 어차피 전체 소스 코드가 올라가지 않고, build 결과만 올라가기 때문에 이 점은 걱정하지 않아도 된다. 정상적으로 생성됐다면 빈 respository가 만들어져있을 것이다. 이제 Github는 잠깐 내려두고, 다시 Docusaurus로 돌아와야 한다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-2-docusaurus-config-파일에서-호스팅-정보를-설정한다">Step 2. Docusaurus config 파일에서 호스팅 정보를 설정한다.<a href="https://winter-blanket.github.io/deploy-website-with-github-pages#step-2-docusaurus-config-%ED%8C%8C%EC%9D%BC%EC%97%90%EC%84%9C-%ED%98%B8%EC%8A%A4%ED%8C%85-%EC%A0%95%EB%B3%B4%EB%A5%BC-%EC%84%A4%EC%A0%95%ED%95%9C%EB%8B%A4" class="hash-link" aria-label="Step 2. Docusaurus config 파일에서 호스팅 정보를 설정한다.에 대한 직접 링크" title="Step 2. Docusaurus config 파일에서 호스팅 정보를 설정한다.에 대한 직접 링크">​</a></h3>
<p><a href="https://winter-blanket.github.io/blog/docusaurus-configuration-1#%EB%B0%B0%ED%8F%AC-%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0" target="_blank" rel="noopener noreferrer">앞선 포스팅에서 잠깐 언급한 적 있듯이</a> config 파일에는 배포 환경 설정 항목이 포함되어 있다.</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockTitle_Ktv7">docusaurus.config.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// Set the production url of your site here</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">url</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'https://winter-blanket.github.io'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// Set the /&lt;baseUrl&gt;/ pathname under which your site is served</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// For GitHub pages deployment, it is often '/&lt;projectName&gt;/'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">baseUrl</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'/'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// GitHub pages deployment config.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// If you aren't using GitHub pages, you don't need these.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">organizationName</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'winter-blanket'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// Usually your GitHub org/user name.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">projectName</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'winter-blanket.github.io'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// Usually your repo name.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><code>url, organizationName, projectName</code> 이렇게 3개 항목이 Github Pages 배포를 위해 필요한 설정 항목이다. 다양한 호스팅 수단 중 Github Pages가 가장 자주 쓰이는 편인지, Docusaurus 설치 직후에 기본 셋팅되어 있는 config 파일에서 바로 항목을 찾아볼 수 있고 관련 안내 주석도 포함되어 있다. <code>url</code>은 도메인 주소 그 자체를 의미하기 때문에 <code>https://</code>를 포함해서 적어야 하지만, <code>projectName</code>은 repository 이름을 의미해서 <code>https://</code>를 빼고 적으면 된다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-3-deploy-명령어로-github-pages에-build-파일을-배포한다">Step 3. deploy 명령어로 Github Pages에 build 파일을 배포한다.<a href="https://winter-blanket.github.io/deploy-website-with-github-pages#step-3-deploy-%EB%AA%85%EB%A0%B9%EC%96%B4%EB%A1%9C-github-pages%EC%97%90-build-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EB%B0%B0%ED%8F%AC%ED%95%9C%EB%8B%A4" class="hash-link" aria-label="Step 3. deploy 명령어로 Github Pages에 build 파일을 배포한다.에 대한 직접 링크" title="Step 3. deploy 명령어로 Github Pages에 build 파일을 배포한다.에 대한 직접 링크">​</a></h3>
<p>보통 Github repository에 파일을 올리는 과정은 로컬에 git init을 하고, remote 저장소를 연결해준 후, 저장소로 push하는 식이다. Docusaurus에서 제공하는 명령어를 실행하면 config에 설정된 repository로 push 되는데, 로컬에 .git이 만들어져있지 않아도 정상 push가 되었다. Push할 때 commit 메시지도 알아서 생성된다. 따라서 설정 세팅만 잘 해놓았다면 Docusaurus 명령어 한 번으로 배포를 끝낼 수 있다.</p>
<full-image>![](Github Pages repository 스크린샷)</full-image>
<full-caption>Docusaurus가 자동 생성한 문구가 commit 메시지에 들어가있는 것을 볼 수 있다.</full-caption>
<p>배포하는 명령어는 다음과 같이 구성된다.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">GIT_USER</span><span class="token operator">=</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">내 Github 계정 Owner 이름</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">GIT_PASS</span><span class="token operator">=</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">내 Github 계정 </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">CURRENT_BRANCH</span><span class="token operator">=</span><span class="token plain">main </span><span class="token assign-left variable" style="color:rgb(189, 147, 249);font-style:italic">DEPLOYMENT_BRANCH</span><span class="token operator">=</span><span class="token plain">main </span><span class="token function" style="color:rgb(80, 250, 123)">yarn</span><span class="token plain"> deploy</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>배포 명령어 자체는 <code>yarn deploy</code> 이 부분이고, 앞의 항목은 배포할 때 같이 실어보낼 설정들이다. <code>GIT_USER</code>와 <code>GIT_PASS</code>는 로컬에서 터미널로 Github repository에 접근할 때 소유권을 가진 repository라는 걸 인증하는 역할이다. GIT_USER는 계정 Owner 이름을 적으면 된다. GIT_PASS는 Github 계정 설정에서 만들 수 있는 <a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens#creating-a-personal-access-token-classic" target="_blank" rel="noopener noreferrer">Personal Access Token</a>을 말한다. <code>CURRENT_BRANCH</code>와 <code>DEPLOYMENT_BRANCH</code>는 배포할 브랜치명을 지정해주는 역할이다. 개인적인 웹사이트 수준에서 굳이 브랜치를 나눠가며 쓸 일은 없어서 main 1개만 쓰고 있다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="git_pass-생성법">GIT_PASS 생성법<a href="https://winter-blanket.github.io/deploy-website-with-github-pages#git_pass-%EC%83%9D%EC%84%B1%EB%B2%95" class="hash-link" aria-label="GIT_PASS 생성법에 대한 직접 링크" title="GIT_PASS 생성법에 대한 직접 링크">​</a></h3>
<three-image><img loading="lazy" alt="Github Access Token 만드는 메뉴 위치 1" src="https://winter-blanket.github.io/assets/images/create-access-token-1-5fbf290e3a3ca296e136affe5da12a86.png" width="728" height="856" class="img_ev3q"></three-image>
<three-image><img loading="lazy" alt="Github Access Token 만드는 메뉴 위치 2" src="https://winter-blanket.github.io/assets/images/create-access-token-2-45bd5a02d243c7fc312ffd6380c2fa52.png" width="728" height="442" class="img_ev3q"></three-image>
<three-image><img loading="lazy" alt="Github Access Token 만드는 메뉴 위치 3" src="https://winter-blanket.github.io/assets/images/create-access-token-3-b6031b36fd3352140e70d9c125c7f4b0.png" width="734" height="388" class="img_ev3q"></three-image>
<three-caption>Github 계정 설정에 들어갔을 때</three-caption>
<three-caption>Developer Settings 메뉴 목록</three-caption>
<three-caption>Access Token 만들기</three-caption>
<p>Github 프로필 아이콘을 누르면 볼 수 있는 다양한 계정 설정 메뉴 중에서 맨 아래에 <code>Developer Settings</code>라는 메뉴가 있다. 이걸 클릭하면 <code>Personal Access Token</code>이라는 이름의 메뉴를 볼 수 있는데 여기서 <code>Tokens (classic)</code>을 클릭하면 된다. 여기서 <code>Generate new token</code> 버튼을 클릭하면 한 번 더 선택지가 나오는데 <code>Beta</code>가 표시된 버튼이 아니라 <code>classic</code> 쪽을 선택하면 된다. 이렇게 생성한 Token을 <code>GIT_PASS</code> 뒤에 붙여주면 별도의 로그인 절차 없이 터미널에서 바로 repository에 접근할 수 있게 된다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="배포-명령어-실행하기">배포 명령어 실행하기<a href="https://winter-blanket.github.io/deploy-website-with-github-pages#%EB%B0%B0%ED%8F%AC-%EB%AA%85%EB%A0%B9%EC%96%B4-%EC%8B%A4%ED%96%89%ED%95%98%EA%B8%B0" class="hash-link" aria-label="배포 명령어 실행하기에 대한 직접 링크" title="배포 명령어 실행하기에 대한 직접 링크">​</a></h3>
<p>명령어가 꽤 길기 때문에 적당한 메모장에 저장해뒀다가 복붙으로 터미널에 입력하는 쪽이 편하다. 내 경우는 zsh를 쓰기 때문에 <code>docuDeploy</code>라는 이름으로 alias를 생성해서 간편하게 쓰고 있다. 명령어를 실행하면 꽤 장문의 로그 메시지를 볼 수 있다. 메시지를 살펴보면 배포 명령어 한 번으로 (1) build 생성하기 (2) Git Commit 하기 (3) remote repository에 push하기 이렇게 3개의 과정이 한 번에 진행된다는 점을 알 수 있다.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">❯ docuDeploy</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token function" style="color:rgb(80, 250, 123)">yarn</span><span class="token plain"> run v1.22.19</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">$ docusaurus deploy</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">INFO</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> Deploy </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">command</span><span class="token plain"> invoked</span><span class="token punctuation" style="color:rgb(248, 248, 242)">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">INFO</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> organizationName: winter-blanket</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">INFO</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> projectName: winter-blanket.github.io</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">INFO</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> deploymentBranch: main</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">..</span><span class="token plain">. </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">SUCCESS</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> Generated static files </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"build"</span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">INFO</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> Use </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">`</span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">npm</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> run serve</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">`</span><span class="token plain"> </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">command</span><span class="token plain"> to </span><span class="token builtin class-name" style="color:rgb(189, 147, 249)">test</span><span class="token plain"> your build locally.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">..</span><span class="token plain">. </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">..</span><span class="token plain">.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">INFO</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">`</span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">git</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">rm</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">-rf</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable builtin class-name" style="color:rgb(189, 147, 249);font-style:italic">.</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">`</span><span class="token plain"> code: </span><span class="token number">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">INFO</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">`</span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">git</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable function" style="color:rgb(80, 250, 123);font-style:italic">add</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic"> </span><span class="token variable parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--all</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">`</span><span class="token plain"> code: </span><span class="token number">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">main 61042b5</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> Deploy website - based on 8d5c8852cedf30647b1be6cb7905ecbe3d75d88f</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"> </span><span class="token number">71</span><span class="token plain"> files changed, </span><span class="token number">257</span><span class="token plain"> insertions</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">+</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">, </span><span class="token number">155</span><span class="token plain"> deletions</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">-</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="마치며">마치며<a href="https://winter-blanket.github.io/deploy-website-with-github-pages#%EB%A7%88%EC%B9%98%EB%A9%B0" class="hash-link" aria-label="마치며에 대한 직접 링크" title="마치며에 대한 직접 링크">​</a></h2>
<p>이제 내 Github Pages 도메인에 접속했을 때 웹페이지가 잘 보인다면 성공이다. 시중 서비스를 쓰지 않고 거의 직접 만들다시피 한 웹사이트를 비용 없이 편리하게 호스팅할 수 있다는 점은 Github Pages의 정말 큰 장점이라고 생각한다. Github Pages 자체에 대해서는 비용 부과가 없지만 Github respository를 사용하므로 Github 유료 기능이 필요할 때 비용이 발생할 것이다. 이제 마지막으로 다음 포스팅에서는 검색 유입이 늘어나도록 구글과 네이버에 사이트를 등록하고 사용자 인사이트를 살펴보는 방법을 기록할 생각이다.</p>
<series-bookmark><p><a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus">1. 웅덩이 파는 데 포크레인 써보기</a>
<a href="https://winter-blanket.github.io/understand-design-system-and-figma">2. Design System 흉내를 위해 Figma 힐끗
보기</a> <a href="https://winter-blanket.github.io/react-101-and-install-docusaurus">3. React 기초 훑어보고 Docusaurus
설치하기</a> <a href="https://winter-blanket.github.io/docusaurus-configuration-1">4. Docusaurus config 톺아보기
(1)</a> <a href="https://winter-blanket.github.io/docusaurus-configuration-2">5. Docusaurus config 톺아보기
(2)</a> <a href="https://winter-blanket.github.io/customize-style-of-docusaurus">6. Swizzle로 디자인
커스터마이징하기</a></p><current-post><p><a href="https://winter-blanket.github.io/deploy-website-with-github-pages">7. Github Pages로 Docusaurus 웹사이트호스팅하기</a></p></current-post><p><a href="https://winter-blanket.github.io/collect-user-insight">8. 구글 서치 콘솔 등록하고 사용자 인사이트 얻기</a></p></series-bookmark>]]></content:encoded>
            <category>Docusaurus로 개인 홈페이지 만들기 #7</category>
            <category>프로그래밍 공부 기록</category>
            <category>Figma</category>
            <category>Design System</category>
            <category>React</category>
            <category>Docusaurus</category>
            <category>Github Pages</category>
        </item>
        <item>
            <title><![CDATA[Swizzle로 디자인 커스터마이징하기]]></title>
            <link>https://winter-blanket.github.io/customize-style-of-docusaurus</link>
            <guid>https://winter-blanket.github.io/customize-style-of-docusaurus</guid>
            <pubDate>Tue, 11 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[custom.css와 swizzle로 Docusaurus 기본 디자인을 내가 원하는대로 커스터마이징하기]]></description>
            <content:encoded><![CDATA[<series-bookmark><p><a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus">1. 웅덩이 파는 데 포크레인 써보기</a>
<a href="https://winter-blanket.github.io/understand-design-system-and-figma">2. Design System 흉내를 위해 Figma 힐끗
보기</a> <a href="https://winter-blanket.github.io/react-101-and-install-docusaurus">3. React 기초 훑어보고 Docusaurus
설치하기</a> <a href="https://winter-blanket.github.io/docusaurus-configuration-1">4. Docusaurus config 톺아보기
(1)</a> <a href="https://winter-blanket.github.io/docusaurus-configuration-2">5. Docusaurus config 톺아보기
(2)</a></p><current-post><p><a href="https://winter-blanket.github.io/customize-style-of-docusaurus">6. Swizzle로 디자인 커스터마이징하기</a></p></current-post><p><a href="https://winter-blanket.github.io/deploy-website-with-github-pages">7. Github Pages로 Docusaurus 웹사이트
호스팅하기</a> <a href="https://winter-blanket.github.io/collect-user-insight">8. 구글 서치 콘솔 등록하고
사용자 인사이트 얻기</a></p></series-bookmark>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="customcss-활용하기">custom.css 활용하기<a href="https://winter-blanket.github.io/customize-style-of-docusaurus#customcss-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0" class="hash-link" aria-label="custom.css 활용하기에 대한 직접 링크" title="custom.css 활용하기에 대한 직접 링크">​</a></h2>
<p>설치 직후에 /src/css/custom.css 경로에 가면 기본 생성되어 있는 CSS 파일을 찾을 수 있다. 이 곳에 작성된 CSS는 Docusaurus에서 이미 만들어놓은 스타일보다 우선순위가 더 높은 것으로 적용되기 때문에 내가 원하는 스타일로 덮어쓰기 할 수 있다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="색상-스타일-바꾸기">색상 스타일 바꾸기<a href="https://winter-blanket.github.io/customize-style-of-docusaurus#%EC%83%89%EC%83%81-%EC%8A%A4%ED%83%80%EC%9D%BC-%EB%B0%94%EA%BE%B8%EA%B8%B0" class="hash-link" aria-label="색상 스타일 바꾸기에 대한 직접 링크" title="색상 스타일 바꾸기에 대한 직접 링크">​</a></h3>
<div class="language-css codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockTitle_Ktv7">/src/css/custom.css</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-css codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)">/**</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> * Any CSS included here will be global. The classic template</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> * bundles Infima by default. Infima is a CSS framework designed to</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> * work well for content-centric websites.</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">/* You can override the default Infima variables here. */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token selector pseudo-class" style="color:rgb(255, 121, 198)">:root</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--ifm-color-primary</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token hexcode color">#2e8555</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--ifm-color-primary-dark</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token hexcode color">#29784c</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--ifm-color-primary-darker</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token hexcode color">#277148</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--ifm-color-primary-darkest</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token hexcode color">#205d3b</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--ifm-color-primary-light</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token hexcode color">#33925d</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--ifm-color-primary-lighter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token hexcode color">#359962</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--ifm-color-primary-lightest</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token hexcode color">#3cad6e</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--ifm-code-font-size</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">95</span><span class="token unit">%</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--docusaurus-highlighted-code-line-bg</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token color function" style="color:rgb(80, 250, 123)">rgba</span><span class="token color punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token color number">0</span><span class="token color punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token color"> </span><span class="token color number">0</span><span class="token color punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token color"> </span><span class="token color number">0</span><span class="token color punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token color"> </span><span class="token color number">0.1</span><span class="token color punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">/* For readability concerns, you should choose a lighter palette in dark mode. */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token selector attribute punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token selector attribute attr-name" style="color:rgb(241, 250, 140)">data-theme</span><span class="token selector attribute operator" style="color:rgb(255, 121, 198)">=</span><span class="token selector attribute attr-value" style="color:rgb(255, 121, 198)">'dark'</span><span class="token selector attribute punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--ifm-color-primary</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token hexcode color">#25c2a0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--ifm-color-primary-dark</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token hexcode color">#21af90</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--ifm-color-primary-darker</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token hexcode color">#1fa588</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--ifm-color-primary-darkest</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token hexcode color">#1a8870</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--ifm-color-primary-light</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token hexcode color">#29d5b0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--ifm-color-primary-lighter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token hexcode color">#32d8b4</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--ifm-color-primary-lightest</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token hexcode color">#4fddbf</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--docusaurus-highlighted-code-line-bg</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token color function" style="color:rgb(80, 250, 123)">rgba</span><span class="token color punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token color number">0</span><span class="token color punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token color"> </span><span class="token color number">0</span><span class="token color punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token color"> </span><span class="token color number">0</span><span class="token color punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token color"> </span><span class="token color number">0.3</span><span class="token color punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>설치 직후의 custom.css에서 미리 설정된 색상 코드를 볼 수 있다. 여기서 내가 원하는 팔레트로 색상 코드값만 바꾸면 간편하게 색상 스타일을 바꿀 수 있다. 모든 색상을 직접 지정하려면 어디에 어느 색상 변수값이 사용됐는지를 확인해야 하기 때문에 색상 코드만 바꾸는 쪽이 더 편리하다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="레이아웃-잡기">레이아웃 잡기<a href="https://winter-blanket.github.io/customize-style-of-docusaurus#%EB%A0%88%EC%9D%B4%EC%95%84%EC%9B%83-%EC%9E%A1%EA%B8%B0" class="hash-link" aria-label="레이아웃 잡기에 대한 직접 링크" title="레이아웃 잡기에 대한 직�접 링크">​</a></h3>
<p>Docusaurus는 <a href="https://infima.dev/" target="_blank" rel="noopener noreferrer">Infima</a>라는 프레임워크로 만들어져있다. <a href="https://getbootstrap.com/" target="_blank" rel="noopener noreferrer">Bootstrap</a>을 써봤다면 금방 익숙해질 수 있다. <code>div</code>의 폭을 다루는 방법이 Bootstrap과 같기 때문에 index 페이지에 내 포트폴리오 내용을 구성할 때 Infima에서 제공하는 class명을 사용해서 쉽게 간격을 잡을 수 있었다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="클릭-이벤트-처리하기">클릭 이벤트 처리하기<a href="https://winter-blanket.github.io/customize-style-of-docusaurus#%ED%81%B4%EB%A6%AD-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0" class="hash-link" aria-label="클릭 이벤트 처리하기에 대한 직접 링크" title="클릭 이벤트 처리하기에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="script-파일을-쓰려고-했지만">script 파일(을 쓰려고 했지만)<a href="https://winter-blanket.github.io/customize-style-of-docusaurus#script-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%93%B0%EB%A0%A4%EA%B3%A0-%ED%96%88%EC%A7%80%EB%A7%8C" class="hash-link" aria-label="script 파일(을 쓰려고 했지만)에 대한 직접 링크" title="script 파일(을 쓰려고 했지만)에 대한 직접 링크">​</a></h3>
<p><img loading="lazy" alt="index 페이지에 만든 애니메이션" src="https://winter-blanket.github.io/assets/images/animation-in-index-6a80705561e14bd27a8aa88ca73c031c.gif" width="1182" height="762" class="img_ev3q">
<full-caption>버튼을 클릭하면 상세 내용이 나오고 다시 클릭하면 닫히게 만들었다.</full-caption></p>
<p>포트폴리오를 넣어놓은 인덱스 페이지에 애니메이션이 필요했다. 상시 노출하자니 스크롤이 너무 길어져서 위 이미지처럼 버튼 클릭으로 숨겼다 보이게 하고 싶었다. 평소 이런 작업은 jquery 스크립 파일을 head에 붙여서 해결했기 때문에 head를 편집할 수 있는 방법을 찾아보았다. 결론을 먼저 말하자면 실패했는데, 가장 많은 삽질 시간을 보냈음에도 결국 해결책을 찾지 못했다.</p>
<p>우선 Docusaurus 가이드 페이지에서 <a href="https://docusaurus.io/docs/api/docusaurus-config#scripts" target="_blank" rel="noopener noreferrer">script 파일을 붙이는 방법</a>을 찾을 수 있다. docusaurus.config.js 파일을 편집하면 되는데, themeConfig가 아니라 config에 추가해야 한다. 처음엔 동작하는 것 같았는데 몇 번 새로고침을 하면 동작하질 않아서 꽤 오래 삽질해봤지만 해결되지 않았다.</p>
<p>또다른 방법으론 <a href="https://www.npmjs.com/package/react-helmet" target="_blank" rel="noopener noreferrer">react-helmet</a>을 쓰는 방법이 있다. head 정보를 바꾸도록 도와주는 라이브러리인데, 이 방법도 마찬가지로 처음엔 동작하지만 새로고침을 하고 나면 스크립트가 동작하질 않았다. 정확히는 head에 잘 들어가있던, 스크립트를 연결하는 한 줄의 코드가 새로고침하고 나면 사라졌다. react는 코드를 화면에 그리는 방식이 단순한 html + js 구조와는 다른데, 그래서 새로고침하면서 코드가 사라지는게 아닐까 싶었다. 더구나 index.js에 react-helmet으로 작성한 코드를 넣어서 그런지 index를 제외한 다른 서브 페이지에서는 head가 편집되지 않았다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="indexjs에-클릭-이벤트-함수-바로-넣기">index.js에 클릭 이벤트 함수 바로 넣기<a href="https://winter-blanket.github.io/customize-style-of-docusaurus#indexjs%EC%97%90-%ED%81%B4%EB%A6%AD-%EC%9D%B4%EB%B2%A4%ED%8A%B8-%ED%95%A8%EC%88%98-%EB%B0%94%EB%A1%9C-%EB%84%A3%EA%B8%B0" class="hash-link" aria-label="index.js에 클릭 이벤트 함수 바로 넣기에 대한 직접 링크" title="index.js에 클릭 이벤트 함수 바로 넣기에 대한 직접 링크">​</a></h3>
<p>index.js도 하나의 js 파일이기 때문에 여기에 바로 클릭 이벤트 함수를 넣는 방법으로 해결했다. 아래는 내 index.js 파일의 일부이다.</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockTitle_Ktv7">src/pages/index.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token imports"> </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token imports">useState</span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'react'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:rgb(80, 250, 123)">SectionProduct</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token parameter punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token parameter"> product_desc</span><span class="token parameter punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token parameter"> product_desc_img</span><span class="token parameter punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token parameter"> feature_desc </span><span class="token parameter punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain">isActive</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> setIsActive</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">useState</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token boolean">false</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:rgb(80, 250, 123)">handleProductBtnClick</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token function" style="color:rgb(80, 250, 123)">setIsActive</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token operator">!</span><span class="token plain">isActive</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> btnCustomClassName </span><span class="token operator">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'btn-product-title bg-color-empty has-icn-true has-label-false'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> stateClassName </span><span class="token operator">=</span><span class="token plain"> isActive </span><span class="token operator">?</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'clicked'</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">''</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> btnClassName </span><span class="token operator">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">${</span><span class="token template-string interpolation">btnCustomClassName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token template-string string" style="color:rgb(255, 121, 198)"> </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">${</span><span class="token template-string interpolation">stateClassName</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword control-flow" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">div</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">className</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">'</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">SectionProduct</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">'</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">div</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">className</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">'</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">product-title-wrapper</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">'</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">a</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">className</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(248, 248, 242)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 121, 198)">btnClassName</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">onClick</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(248, 248, 242)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 121, 198)">handleProductBtnClick</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">div</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">className</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">'</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">icn icn-arrow</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">'</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">div</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">a</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">div</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">        ... (중략) ...</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">div</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>버튼이 위치한 Component를 그리는 함수인데, 버튼에 <code>onClick</code> 속성을 넣고 클릭할 때마다 class 이름에 <code>clicked</code>를 넣었다 삭제했다 하는 함수를 추가했다. React state를 사용하므로 맨 상단 import 목록에 useState를 추가해주어야 한다. <etc>간단한 코드는 ChatGPT에게 물어보면 공부할 필요도 없다.</etc> 다만 이 방법도 약간의 한계는 있는 게, index.js에 클릭 이벤트 처리가 들어가므로 당연히 index 페이지가 아닌 다른 페이지는 관여할 수 없다. 이미 있는 UI는 CSS로 꾸밀 수 있어도, 내가 원하는 새로운 element를 추가하려면 js를 써야 하기 때문에 blog에서 필요한 편집을 어떻게 할 지가 고민이었다. 그래서 blog와 관련해서 index.js와 같은 역할을 하는 파일을 찾아야 했다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="swizzle-활용하기">Swizzle 활용하기<a href="https://winter-blanket.github.io/customize-style-of-docusaurus#swizzle-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0" class="hash-link" aria-label="Swizzle 활용하기에 대한 직접 링크" title="Swizzle 활용하기에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="swizzle-사용법">Swizzle 사용법<a href="https://winter-blanket.github.io/customize-style-of-docusaurus#swizzle-%EC%82%AC%EC%9A%A9%EB%B2%95" class="hash-link" aria-label="Swizzle 사용법에 대한 직접 링크" title="Swizzle 사용법에 대한 직접 링크">​</a></h3>
<p>index 페이지는 직접 내용을 구성할 수 있도록 index.js 파일을 바로 주기 때문에 쉽게 커스터마이징할 수 있지만, 그 외 페이지는 js 파일을 바로 찾아볼 수 없도록 되어 있다. 그래서 다른 서브 페이지 UI를 Docusaurus 기본값을 쓰지 않고 내 마음대로 바꾸려면 <a href="https://docusaurus.io/docs/swizzling" target="_blank" rel="noopener noreferrer">Swizzle</a>이라는 방법을 써야 한다. 쉽게 설명하면 Swizzle은 Docusaurus에서 이미 만들어놓은 Component를 내 코드로 덮어씌울 수 있도록 하는 기능을 말한다.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">npm</span><span class="token plain"> run swizzle</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>프로젝트 폴더 위치에서 위 명령어를 실행하면 아래와 같은 화면을 볼 수 있다.</p>
<p><img loading="lazy" alt="Swizzle 쓰는 과정 (1)" src="https://winter-blanket.github.io/assets/images/swizzle-1-0a8ee6aa39165c6ee623d8570bb3dc04.png" width="1672" height="742" class="img_ev3q"></p>
<p>여기서 theme-classic을 선택하고 엔터를 누르면 아래와 같이 Docusaurus에 있는 Component 목록이 나타난다.</p>
<p><img loading="lazy" alt="Swizzle 쓰는 과정 (2)" src="https://winter-blanket.github.io/assets/images/swizzle-2-f551f69f2de02246c8ef96afa6fb3cf9.png" width="1672" height="464" class="img_ev3q"></p>
<p>화살표로 쭉 내려가면 꽤 스크롤이 긴데, 여기서 볼 수 있는 Component 리스트는 <a href="https://github.com/facebook/docusaurus/tree/main/packages/docusaurus-theme-classic/src/theme" target="_blank" rel="noopener noreferrer">Docusaurus Github</a>에서도 볼 수 있다. 여기서는 내부 코드도 다 볼 수 있기 때문에 내가 원하는 UI 요소가 위치한 Component 이름이 무엇인지 Github에서 미리 찾아보고 Swizzle을 시작해야 한다. 코드를 하나씩 읽어보며 Component 구조를 파악하는 게 꽤 오래 걸리는 일이었다. Github에서는 검색을 파일명 단위로만 지원해서 로컬에 다운로드받은 후, 적당한 에디터에서 불러와서 검색해가며 Component를 파악했다.</p>
<p>터미널에서 Swizzle을 실행하면 각 Component 이름 옆에 <code>Safe</code> 혹은 <code>Unsafe</code>가 표시된다. <a href="https://docusaurus.io/docs/swizzling#what-is-safe-to-swizzle" target="_blank" rel="noopener noreferrer">Docusaurus</a> 가이드에 따르면, 사용자가 Docusaurus component를 직접 편집하는 경우 추후에 Docusaurus 라이브러리 업데이트가 있을 때 업데이트 내용과 충돌할 수 있다고 한다. 이런 불편함이 있다는 걸 사용자가 감수해야 하고, 그래서 편하게 건드려도 되는 Component와 아닌 것을 구분해놓은 것이다. 물론 나중에 문제가 생기더라도 가장 중요한 사이트 콘텐츠에 문제가 생기는건 아니고 UI만 깨지는 셈이니, 너무 부담가질 필요는 없다.</p>
<p><img loading="lazy" alt="Swizzle 쓰는 과정 (3)" src="https://winter-blanket.github.io/assets/images/swizzle-3-4da53fedca96bf1c622e135628099da5.png" width="1672" height="156" class="img_ev3q"></p>
<p>앞의 단계에서 편집할 Component를 선택하고 엔터키를 누르면 <code>Wrap</code>과 <code>Eject</code> 중 어느 방법을 택할지를 묻는다. Wrap은 Docusaurus component를 사실상 건드리지 않으면서 내가 필요한 요소만 추가할 때 쓰는 방법이다. 본래의 Component에는 wrapper를 씌우고 그 wrapper 바깥에 내 코드를 넣는 식이기 때문에 내가 원하는 위치가 어디냐에 따라서 Wrap으로는 문제 해결이 되지 않을 수 있다.</p>
<p>그렇다면 Eject를 써야 하는데, Eject를 선택하면 Docusaurus component의 내용을 직접 편집할 수 있다. 당연히 Wrap에 비하면 추후 업데이트에 따른 충돌 가능성은 좀 더 있는 편이다.</p>
<p><img loading="lazy" alt="Swizzle 쓰는 과정 (4)" src="https://winter-blanket.github.io/assets/images/swizzle-4-44779e7c531a8d8be1ea71f00a9485b3.png" width="1672" height="364" class="img_ev3q"></p>
<p>Wrap과 Eject 중 한 가지를 선택하면 Unsafe component를 골랐을 경우에 한해서 경고 메시지가 나온다. 여기서 Yes를 택하면 아래와 같이 Swizzle이 완료되고, 내 프로젝트 폴더 아래 <code>/src/</code> 경로에 <code>theme</code> 폴더가 생성된 것을 볼 수 있다. theme 폴더 안에는 내가 Swizzle한 component 파일들이 쌓인다.</p>
<p><img loading="lazy" alt="Swizzle 쓰는 과정 (5)" src="https://winter-blanket.github.io/assets/images/swizzle-5-2a652600458e797e89927fa467dce6a8.png" width="1672" height="160" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="블로그-포스트-목록에-포스트-번호-표시하기">블로그 포스트 목록에 포스트 번호 표시하기<a href="https://winter-blanket.github.io/customize-style-of-docusaurus#%EB%B8%94%EB%A1%9C%EA%B7%B8-%ED%8F%AC%EC%8A%A4%ED%8A%B8-%EB%AA%A9%EB%A1%9D%EC%97%90-%ED%8F%AC%EC%8A%A4%ED%8A%B8-%EB%B2%88%ED%98%B8-%ED%91%9C%EC%8B%9C%ED%95%98%EA%B8%B0" class="hash-link" aria-label="블로그 포스트 목록에 포스트 번호 표시하기에 대한 직접 링크" title="블로그 포스트 목록에 포스트 번호 표시하기에 대한 직접 링크">​</a></h3>
<p>블로그 목록에 포스트가 나열될 때 몇 번째 포스트인지 표시됐으면 좋겠다는 생각을 했다. 이런 동적 요소는 CSS로는 불가능하기 때문에 필요한 Component를 Swizzle로 Eject 했다. 먼저 전체 글 번호를 알아내기 위해 <code>BlogPostItems</code>를, 글 번호를 표시하기 위해 <code>BlogPostItem</code>을 가져왔다. <code>BlogPostItems</code>는 주어진 포스트 묶음을 화면에 순서대로 그리는 역할을 하고, <code>BlogPostItem</code>은 그렇게 그려진 각 포스트가 어떻게 구성되는지를 다루고 있다.</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockTitle_Ktv7">/src/theme/BlogPostItems/index.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'react'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">BlogPostProvider</span><span class="token imports"> </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'@docusaurus/theme-common/internal'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">BlogPostItem</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'@theme/BlogPostItem'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">export</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:rgb(80, 250, 123)">BlogPostItems</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token parameter punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token parameter"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token parameter">  items</span><span class="token parameter punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token parameter"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token parameter">  </span><span class="token parameter literal-property property">component</span><span class="token parameter operator">:</span><span class="token parameter"> </span><span class="token parameter maybe-class-name">BlogPostItemComponent</span><span class="token parameter"> </span><span class="token parameter operator">=</span><span class="token parameter"> </span><span class="token parameter maybe-class-name">BlogPostItem</span><span class="token parameter"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token parameter"></span><span class="token parameter punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword control-flow" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">items</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token method function property-access" style="color:rgb(80, 250, 123)">map</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token parameter punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token parameter"> </span><span class="token parameter literal-property property">content</span><span class="token parameter operator">:</span><span class="token parameter"> </span><span class="token parameter maybe-class-name">BlogPostContent</span><span class="token parameter"> </span><span class="token parameter punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token parameter punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token parameter"> index</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token arrow operator">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag class-name" style="color:rgb(255, 121, 198)">BlogPostProvider</span><span class="token tag" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token tag" style="color:rgb(255, 121, 198)">          </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">key</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(248, 248, 242)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token tag script language-javascript maybe-class-name" style="color:rgb(255, 121, 198)">BlogPostContent</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token tag script language-javascript property-access" style="color:rgb(255, 121, 198)">metadata</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token tag script language-javascript property-access" style="color:rgb(255, 121, 198)">permalink</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token tag" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token tag" style="color:rgb(255, 121, 198)">          </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">content</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(248, 248, 242)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token tag script language-javascript maybe-class-name" style="color:rgb(255, 121, 198)">BlogPostContent</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token tag" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token tag" style="color:rgb(255, 121, 198)">        </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag class-name" style="color:rgb(255, 121, 198)">BlogPostItemComponent</span><span class="token tag" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token tag" style="color:rgb(255, 121, 198)">            </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">customIndex</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(248, 248, 242)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 121, 198)">index</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token tag" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token tag" style="color:rgb(255, 121, 198)">            </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">customIndexLength</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(248, 248, 242)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token tag script language-javascript" style="color:rgb(255, 121, 198)">items</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token tag script language-javascript property-access" style="color:rgb(255, 121, 198)">length</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token tag" style="color:rgb(255, 121, 198)"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token tag" style="color:rgb(255, 121, 198)">          </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag class-name" style="color:rgb(255, 121, 198)">BlogPostContent</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag class-name" style="color:rgb(255, 121, 198)">BlogPostItemComponent</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag class-name" style="color:rgb(255, 121, 198)">BlogPostProvider</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>위 코드는 Swizzle로 생성된 <code>BlogPostItems</code>의 <code>index.js</code> 파일이다. <code>BlogPostItemComponent</code>에서 <code>customIndex</code>와 <code>customIndexLength</code>가 내가 추가한 속성이다. 여기서 각 포스트의 <code>index</code> 값을 알기 위해 <code>map</code> 함수에 <code>index</code> 변수를 추가했다. 여기서 보낸 값은 <code>BlogPostItem</code> Component에서 전달받아 사용한다.</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockTitle_Ktv7">/src/theme/BlogPostItem/index.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'react'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports">clsx</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'clsx'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token imports"> useBlogPost </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'@docusaurus/theme-common/internal'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">BlogPostItemContainer</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'@theme/BlogPostItem/Container'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">BlogPostItemHeader</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'@theme/BlogPostItem/Header'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">BlogPostItemContent</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'@theme/BlogPostItem/Content'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">BlogPostItemFooter</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'@theme/BlogPostItem/Footer'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)">// apply a bottom margin in list view</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">useContainerClassName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"> isBlogPostPage </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">useBlogPost</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword control-flow" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token operator">!</span><span class="token plain">isBlogPostPage </span><span class="token operator">?</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'margin-bottom--xl'</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token keyword nil" style="color:rgb(189, 147, 249);font-style:italic">undefined</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">export</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:rgb(80, 250, 123)">BlogPostItem</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token parameter punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token parameter"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token parameter">  children</span><span class="token parameter punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token parameter"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token parameter">  className</span><span class="token parameter punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token parameter"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token parameter">  customIndex</span><span class="token parameter punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token parameter"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token parameter">  customIndexLength</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token parameter"></span><span class="token parameter punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> containerClassName </span><span class="token operator">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">useContainerClassName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token keyword control-flow" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag class-name" style="color:rgb(255, 121, 198)">BlogPostItemContainer</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">className</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:rgb(248, 248, 242)">=</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token tag script language-javascript function" style="color:rgb(80, 250, 123)">clsx</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token tag script language-javascript" style="color:rgb(255, 121, 198)">containerClassName</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token tag script language-javascript" style="color:rgb(255, 121, 198)"> className</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token tag script language-javascript punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">div</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">className</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">'</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">blog-post-index-wrapper</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">'</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">div</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">className</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">'</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">blog-post-index</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">'</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag" style="color:rgb(255, 121, 198)">h5</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag attr-name" style="color:rgb(241, 250, 140)">alt</span><span class="token tag attr-value punctuation attr-equals" style="color:rgb(248, 248, 242)">=</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">'</span><span class="token tag attr-value" style="color:rgb(255, 121, 198)">게시글 번호</span><span class="token tag attr-value punctuation" style="color:rgb(248, 248, 242)">'</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text">#</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">customIndexLength </span><span class="token operator">-</span><span class="token plain"> customIndex</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">h5</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">div</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag" style="color:rgb(255, 121, 198)">div</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag class-name" style="color:rgb(255, 121, 198)">BlogPostItemHeader</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag class-name" style="color:rgb(255, 121, 198)">BlogPostItemContent</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">children</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag class-name" style="color:rgb(255, 121, 198)">BlogPostItemContent</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;</span><span class="token tag class-name" style="color:rgb(255, 121, 198)">BlogPostItemFooter</span><span class="token tag" style="color:rgb(255, 121, 198)"> </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&lt;/</span><span class="token tag class-name" style="color:rgb(255, 121, 198)">BlogPostItemContainer</span><span class="token tag punctuation" style="color:rgb(248, 248, 242)">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>앞서 보낸 <code>customIndex</code>와 <code>customIndexLength</code>를 받을 수 있도록 <code>BlogPostItem</code> 함수에 변수를 추가했다. 그리고 <code>BlogPostItemHeader</code> 바로 위에 게시글 번호를 표시하도록 div를 추가했다. 바로 <code>customIndex</code>를 표시하면 글이 내림차순으로 정렬되어서 그런지 숫자가 반대로 나와서 전체 글 개수에서 index를 빼준 값을 사용했다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="꾸미기는-이제-끝">꾸미기는 이제 끝!<a href="https://winter-blanket.github.io/customize-style-of-docusaurus#%EA%BE%B8%EB%AF%B8%EA%B8%B0%EB%8A%94-%EC%9D%B4%EC%A0%9C-%EB%81%9D" class="hash-link" aria-label="꾸미기는 이제 끝!에 대한 직접 링크" title="꾸미기는 이제 끝!에 대한 직접 링크">​</a></h2>
<p>이제 모든 커스터마이징도 끝났으니 서버에 배포할 차례다. 다음 포스트에서는 Github pages 사용법과 배포 과정을 다룰 예정이다.</p>
<series-bookmark><p><a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus">1. 웅덩이 파는 데 포크레인 써보기</a>
<a href="https://winter-blanket.github.io/understand-design-system-and-figma">2. Design System 흉내를 위해 Figma 힐끗
보기</a> <a href="https://winter-blanket.github.io/react-101-and-install-docusaurus">3. React 기초 훑어보고 Docusaurus
설치하기</a> <a href="https://winter-blanket.github.io/docusaurus-configuration-1">4. Docusaurus config 톺아보기
(1)</a> <a href="https://winter-blanket.github.io/docusaurus-configuration-2">5. Docusaurus config 톺아보기
(2)</a></p><current-post><p><a href="https://winter-blanket.github.io/customize-style-of-docusaurus">6. Swizzle로 디자인 커스터마이징하기</a></p></current-post><p><a href="https://winter-blanket.github.io/deploy-website-with-github-pages">7. Github Pages로 Docusaurus 웹사이트
호스팅하기</a> <a href="https://winter-blanket.github.io/collect-user-insight">8. 구글 서치 콘솔 등록하고
사용자 인사이트 얻기</a></p></series-bookmark>]]></content:encoded>
            <category>Docusaurus로 개인 홈페이지 만들기 #6</category>
            <category>프로그래밍 공부 기록</category>
            <category>Figma</category>
            <category>Design System</category>
            <category>React</category>
            <category>Docusaurus</category>
            <category>Github Pages</category>
        </item>
        <item>
            <title><![CDATA[Docusaurus config 톺아보기 (2)]]></title>
            <link>https://winter-blanket.github.io/docusaurus-configuration-2</link>
            <guid>https://winter-blanket.github.io/docusaurus-configuration-2</guid>
            <pubDate>Mon, 10 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[docusaurus.config.js에서 설정할 수 있는 부가 기능을 전체적으로 살펴보기]]></description>
            <content:encoded><![CDATA[<series-bookmark><p><a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus">1. 웅덩이 파는 데 포크레인 써보기</a>
<a href="https://winter-blanket.github.io/understand-design-system-and-figma">2. Design System 흉내를 위해 Figma 힐끗
보기</a> <a href="https://winter-blanket.github.io/react-101-and-install-docusaurus">3. React 기초 훑어보고 Docusaurus
설치하기</a> <a href="https://winter-blanket.github.io/docusaurus-configuration-1">4. Docusaurus config 톺아보기
(1)</a></p><current-post><p><a href="https://winter-blanket.github.io/docusaurus-configuration-2">5. Docusaurus config 톺아보기 (2)</a></p></current-post><p><a href="https://winter-blanket.github.io/customize-style-of-docusaurus">6. Swizzle로 디자인 커스터마이징하기</a> <a href="https://winter-blanket.github.io/deploy-website-with-github-pages">7.
Github Pages로 Docusaurus 웹사이트
호스팅하기</a> <a href="https://winter-blanket.github.io/collect-user-insight">8. 구글 서치 콘솔 등록하고
사용자 인사이트 얻기</a></p></series-bookmark>
<p>이번 포스트에서는 docusaurus.config.js에서 설정할 수 있는 내용 중 디자인적 요소에 영향을 미치는 부분만 따로 모아두었다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="gnb-설정">GNB 설정<a href="https://winter-blanket.github.io/docusaurus-configuration-2#gnb-%EC%84%A4%EC%A0%95" class="hash-link" aria-label="GNB 설정에 대한 직접 링크" title="GNB 설정에 대한 직접 링크">​</a></h2>
<full-image><img loading="lazy" alt="Docusaurus 가이드 페이지의 GNB 메뉴 스크린샷" src="https://winter-blanket.github.io/assets/images/screenshot-docusaurus-sample-gnb-17f827a412048460d3bf0cc630742e65.png" width="2958" height="148" class="img_ev3q"></full-image>
<full-caption>Docusaurus 가이드 페이지의 GNB 메뉴 스크린샷</full-caption>
<p>Docusaurus 가이드 페이지의 GNB를 보면 사이트 로고와 몇 개의 버튼으로 구성되어 있다. 이를 config 파일로 보면 아래와 같다.</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token literal-property property">themeConfig</span><span class="token operator">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">/** @type {import('@docusaurus/preset-classic').ThemeConfig} */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token literal-property property">navbar</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'My Site'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">logo</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token literal-property property">alt</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'My Site Logo'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token literal-property property">src</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'img/logo.svg'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">items</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'docSidebar'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">sidebarId</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'tutorialSidebar'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">position</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'left'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">label</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Tutorial'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">to</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'/blog'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">label</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Blog'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">position</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'left'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">href</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'https://github.com/facebook/docusaurus'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">label</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'GitHub'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">position</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'right'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="사이트-로고와-이름">사이트 로고와 이름<a href="https://winter-blanket.github.io/docusaurus-configuration-2#%EC%82%AC%EC%9D%B4%ED%8A%B8-%EB%A1%9C%EA%B3%A0%EC%99%80-%EC%9D%B4%EB%A6%84" class="hash-link" aria-label="사이트 로고와 이름에 대한 직접 링크" title="사이트 로고와 이름에 대한 직접 링크">​</a></h3>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'My Site'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token literal-property property">logo</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token literal-property property">alt</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'My Site Logo'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token literal-property property">src</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'img/logo.svg'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>앞서 메타 데이터에 설정한 사이트 제목과는 별개로, GNB에 표시될 제목을 따로 설정할 수 있다. 로고 이미지 파일도 이미 기본값이 들어있으므로 같은 경로에 같은 파일명으로 덮어쓰기하면 쉽게 교체할 수 있다.
로고 이미지의 크기 등, 추가로 설정할 수 있는 옵션은 <a href="https://docusaurus.io/docs/api/themes/configuration#navbar-logo" target="_blank" rel="noopener noreferrer">가이드 페이지</a>에서 확인할 수 있다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="docs로-가는-버튼">Docs로 가는 버튼<a href="https://winter-blanket.github.io/docusaurus-configuration-2#docs%EB%A1%9C-%EA%B0%80%EB%8A%94-%EB%B2%84%ED%8A%BC" class="hash-link" aria-label="Docs로 가는 버튼에 대한 직접 링크" title="Docs로 가는 버튼에 대한 직접 링크">​</a></h3>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token literal-property property">items</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'docSidebar'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">sidebarId</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'tutorialSidebar'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">position</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'left'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">label</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Tutorial'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token spread operator">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>docs로 구성한 콘텐츠를 가지고 있고, 목차의 첫번째 위치로 가는 버튼을 만들고 싶다면 <code>items</code>에 <code>type</code>이 <code>docSidebar</code>인 항목을 추가하면 된다. 여기서 <code>sidebarId</code>는 <code>sidebars.js</code>에 적은 사이드바 아이디를 말한다. docs의 왼편 사이드바 목차에 어떤 제목을 나열할지는 <code>sidebars.js</code>에 적어야 하는데, 이 때 사이드바를 구분짓는 적당한 이름을 하나 지어서 아이디값으로 설정해야 한다. 여기서 사용한 아이디값을 가지고 와서 해당 사이드바, 즉 해당 docs 콘텐츠로 보내주는 버튼을 만드는 셈이다. 이런 구조를 취하는 이유는 하나의 사이트에 docs가 여러개일 수 있기 때문에 docs들을 구분짓기 위함이다.</p>
<p>docs 문서 전체를 보기 바란다면 목차의 첫번째 위치로 이동시키는 게 맞지만, docs 안에서 특정 doc 페이지로 바로 이동하도록 만들고 싶을 수 있다. 해당 페이지를 목차의 첫번째 페이지로 할 수 없다면 <a href="https://docusaurus.io/docs/api/themes/configuration#navbar-doc-link" target="_blank" rel="noopener noreferrer">type 속성을 바꿔서 해결할 수 있다.</a></p>
<p><code>position</code>은 GNB의 왼편 혹은 오른편에 쏠리게 버튼을 위치시킬지를 정하는 속성이다. <code>left</code> 혹은 <code>right</code> 중에 선택할 수 있다. 버튼이 나열되는 순서는 items 필드 안에 나열되는 순서와 같다. 즉 docs 정보를 먼저 적었다면 docs 버튼이 더 왼쪽에 배치된다.</p>
<p>마지막으로 <code>label</code>은 버튼에 표기할 텍스트(버튼명)를 뜻한다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="blog로-가는-버튼">Blog로 가는 버튼<a href="https://winter-blanket.github.io/docusaurus-configuration-2#blog%EB%A1%9C-%EA%B0%80%EB%8A%94-%EB%B2%84%ED%8A%BC" class="hash-link" aria-label="Blog로 가는 버튼에 대한 직접 링크" title="Blog로 가는 버튼에 대한 직접 링크">​</a></h3>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token literal-property property">items</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">to</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'/blog'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">label</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Blog'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">position</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'left'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token spread operator">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>blog로 가는 버튼은 <code>to</code> 속성을 쓴다는 점에서 차이가 있다. 사실 <code>to</code> 속성은 blog 전용 속성은 아니고, 내 사이트의 특정 하위 경로로 보내고 싶을 때 쓰는 속성이다. blog의 메인 페이지는 <code>/blog</code> 경로에 위치한다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="하이퍼링크-버튼">하이퍼링크 버튼<a href="https://winter-blanket.github.io/docusaurus-configuration-2#%ED%95%98%EC%9D%B4%ED%8D%BC%EB%A7%81%ED%81%AC-%EB%B2%84%ED%8A%BC" class="hash-link" aria-label="하이퍼링크 버튼에 대한 직접 링크" title="하이퍼링크 버튼에 대한 직접 링크">​</a></h3>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token literal-property property">items</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">href</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'https://github.com/facebook/docusaurus'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">label</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'GitHub'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">position</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'right'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token spread operator">...</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>내 사이트의 하위 경로가 아니라 외부 페이지 링크로 가는 버튼을 만드려면 <code>href</code> 속성을 쓰면 된다. 당연히 버튼은 여러개 만들 수 있기 때문에 여러 링크로 가는 버튼을 GNB에 배치할 수 있다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="테마-변경-버튼">테마 변경 버튼<a href="https://winter-blanket.github.io/docusaurus-configuration-2#%ED%85%8C%EB%A7%88-%EB%B3%80%EA%B2%BD-%EB%B2%84%ED%8A%BC" class="hash-link" aria-label="테마 변경 버튼에 대한 직접 링크" title="테마 변경 버튼에 대한 직접 링크">​</a></h3>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token literal-property property">themeConfig</span><span class="token operator">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token comment" style="color:rgb(98, 114, 164)">/** @type {import('@docusaurus/preset-classic').ThemeConfig} */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token literal-property property">colorMode</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">defaultMode</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'dark'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">disableSwitch</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>앞서 설명한 docs, blog, 하이퍼링크 버튼은 themeConfig &gt; navBar 속성 아래에 설정했다. Dark 테마와 Light 테마를 사용자가 선택할 수 있는 버튼은 navbar와 형제 위치에 별도의 속성으로 설정해야 한다. 자세한 가이드는 <a href="https://docusaurus.io/docs/api/themes/configuration#color-mode---dark-mode" target="_blank" rel="noopener noreferrer">이 곳</a>에서 볼 수 있다. 나는 dark 테마 1개만 사용할 생각이었기 때문에 default를 dark로 설정하고 테마 변경 버튼을 숨김 처리했다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="footer-설정">Footer 설정<a href="https://winter-blanket.github.io/docusaurus-configuration-2#footer-%EC%84%A4%EC%A0%95" class="hash-link" aria-label="Footer 설정에 대한 직접 링크" title="Footer 설정에 대한 직접 링크">​</a></h2>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token doc-comment comment" style="color:rgb(98, 114, 164)">/** </span><span class="token doc-comment comment keyword" style="color:rgb(189, 147, 249);font-style:italic">@type</span><span class="token doc-comment comment" style="color:rgb(98, 114, 164)"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token doc-comment comment class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token doc-comment comment class-name string" style="color:rgb(255, 121, 198)">'@docusaurus/preset-classic'</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token doc-comment comment class-name" style="color:rgb(98, 114, 164)">ThemeConfig</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token doc-comment comment" style="color:rgb(98, 114, 164)"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token literal-property property">themeConfig</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">footer</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token literal-property property">style</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'dark'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token literal-property property">links</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Docs'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">items</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">label</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Tutorial'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">to</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'/docs/intro'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Community'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">items</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">label</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Stack Overflow'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">href</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'https://stackoverflow.com/questions/tagged/docusaurus'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">label</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Discord'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">href</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'https://discordapp.com/invite/docusaurus'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">label</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Twitter'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">href</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'https://twitter.com/docusaurus'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'More'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">items</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">label</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Blog'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">to</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'/blog'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">label</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'GitHub'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token literal-property property">href</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'https://github.com/facebook/docusaurus'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token literal-property property">copyright</span><span class="token operator">:</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token template-string string" style="color:rgb(255, 121, 198)">Copyright © </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">${</span><span class="token template-string interpolation keyword" style="color:rgb(189, 147, 249);font-style:italic">new</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation class-name">Date</span><span class="token template-string interpolation punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token template-string interpolation punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token template-string interpolation punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token template-string interpolation method function property-access" style="color:rgb(80, 250, 123)">getFullYear</span><span class="token template-string interpolation punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token template-string interpolation punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token template-string string" style="color:rgb(255, 121, 198)"> My Project, Inc. Built with Docusaurus.</span><span class="token template-string template-punctuation string" style="color:rgb(255, 121, 198)">`</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Footer에 들어가는 내용도 GNB에 메뉴를 배치하듯이 config에서 설정할 수 있다. Footer에는 보통 고정 안내 멘트나 기타 링크 버튼을 넣어놓는 경우가 대부분이기 때문에 위의 샘플에서 필요한 만큼을 복붙해가며 편집하는 것으로도 충분하다. 나중에 설명하게 될 <a href="https://docusaurus.io/docs/swizzling" target="_blank" rel="noopener noreferrer">Swizzle</a>을 이용하면 좀 더 자유도 높은 커스터마이징도 가능하다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="table-of-contents">Table of Contents<a href="https://winter-blanket.github.io/docusaurus-configuration-2#table-of-contents" class="hash-link" aria-label="Table of Contents에 대한 직접 링크" title="Table of Contents에 대한 직접 링크">​</a></h2>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token doc-comment comment" style="color:rgb(98, 114, 164)">/** </span><span class="token doc-comment comment keyword" style="color:rgb(189, 147, 249);font-style:italic">@type</span><span class="token doc-comment comment" style="color:rgb(98, 114, 164)"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token doc-comment comment class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token doc-comment comment class-name string" style="color:rgb(255, 121, 198)">'@docusaurus/preset-classic'</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token doc-comment comment class-name" style="color:rgb(98, 114, 164)">ThemeConfig</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token doc-comment comment" style="color:rgb(98, 114, 164)"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token literal-property property">themeConfig</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">tableOfContents</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token literal-property property">minHeadingLevel</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">2</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token literal-property property">maxHeadingLevel</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">5</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>지금 이 포스트에서도 볼 수 있듯이 화면 오른편에 목차를 오고 갈 수 있는 사이드바를 고정 노출시킬 수 있다. <a href="https://docusaurus.io/docs/markdown-features/toc#table-of-contents-heading-level" target="_blank" rel="noopener noreferrer">tableOfContents 속성</a>을 사용하면 몇 레벨의 Heading을 목차에 포함시킬지를 지정할 수 있다. 나는 주로 포스트 내용 안에서는 H1을 쓰지 않고 H2부터 사용하기 때문에 min을 2로 설정했다. 다소 스크롤은 길어지더라도 Heading을 더 잘게 쪼개는 것을 좋아하기 때문에 max를 5로 지정했다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="codeblock">Codeblock<a href="https://winter-blanket.github.io/docusaurus-configuration-2#codeblock" class="hash-link" aria-label="Codeblock에 대한 직접 링크" title="Codeblock에 대한 직접 링크">​</a></h2>
<p>Markdown의 codeblock을 사용하면 Docusaurus에서 알아서 코드 에디터 느낌이 나도록 스타일을 넣어준다. 코드 에디터 색상 설정을 하듯이 색상 조합을 바꾸고 싶거나, 지원하는 언어의 종류를 늘리려면 config에 설정을 추가해야 한다.</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token doc-comment comment" style="color:rgb(98, 114, 164)">/** </span><span class="token doc-comment comment keyword" style="color:rgb(189, 147, 249);font-style:italic">@type</span><span class="token doc-comment comment" style="color:rgb(98, 114, 164)"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token doc-comment comment class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token doc-comment comment class-name string" style="color:rgb(255, 121, 198)">'@docusaurus/preset-classic'</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token doc-comment comment class-name" style="color:rgb(98, 114, 164)">ThemeConfig</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token doc-comment comment" style="color:rgb(98, 114, 164)"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token literal-property property">themeConfig</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">prism</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token literal-property property">theme</span><span class="token operator">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">require</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'prism-react-renderer/themes/dracula'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token literal-property property">additionalLanguages</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">'bash'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'json'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'jsx'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Docusaurus의 기본 Codeblock 색상이 별로 눈에 띄지 않는 거 같아서 <a href="https://docusaurus.io/docs/markdown-features/code-blocks#theming" target="_blank" rel="noopener noreferrer">가이드</a>를 참고해서 Dracula로 색상을 변경했다.</p>
<p>그리고 언어 설정을 넣어도 인식이 잘 안되는 것 같아서 가이드에 링크된 <a href="https://github.com/FormidableLabs/prism-react-renderer/blob/master/src/vendor/prism/includeLangs.js" target="_blank" rel="noopener noreferrer">기본 언어 목록</a>을 살펴봤는데 업데이트가 덜 됐는지 page not found가 떴다. 그래서 <a href="https://prismjs.com/#supported-languages" target="_blank" rel="noopener noreferrer">지원 언어 목록</a>을 확인하고 필요하겠다 싶은 언어를 모두 config에 포함시켰다.</p>
<series-bookmark><p><a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus">1. 웅덩이 파는 데 포크레인 써보기</a>
<a href="https://winter-blanket.github.io/understand-design-system-and-figma">2. Design System 흉내를 위해 Figma 힐끗
보기</a> <a href="https://winter-blanket.github.io/react-101-and-install-docusaurus">3. React 기초 훑어보고 Docusaurus
설치하기</a> <a href="https://winter-blanket.github.io/docusaurus-configuration-1">4. Docusaurus config 톺아보기
(1)</a></p><current-post><p><a href="https://winter-blanket.github.io/docusaurus-configuration-2">5. Docusaurus config 톺아보기 (2)</a></p></current-post><p><a href="https://winter-blanket.github.io/customize-style-of-docusaurus">6. Swizzle로 디자인 커스터마이징하기</a> <a href="https://winter-blanket.github.io/deploy-website-with-github-pages">7.
Github Pages로 Docusaurus 웹사이트
호스팅하기</a> <a href="https://winter-blanket.github.io/collect-user-insight">8. 구글 서치 콘솔 등록하고
사용자 인사이트 얻기</a></p></series-bookmark>]]></content:encoded>
            <category>Docusaurus로 개인 홈페이지 만들기 #5</category>
            <category>프로그래밍 공부 기록</category>
            <category>Figma</category>
            <category>Design System</category>
            <category>React</category>
            <category>Docusaurus</category>
            <category>Github Pages</category>
        </item>
        <item>
            <title><![CDATA[Docusaurus config 톺아보기 (1)]]></title>
            <link>https://winter-blanket.github.io/docusaurus-configuration-1</link>
            <guid>https://winter-blanket.github.io/docusaurus-configuration-1</guid>
            <pubDate>Sun, 09 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[docusaurus.config.js에서 설정할 수 있는 부가 기능을 전체적으로 살펴보기]]></description>
            <content:encoded><![CDATA[<series-bookmark><p><a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus">1. 웅덩이 파는 데 포크레인 써보기</a>
<a href="https://winter-blanket.github.io/understand-design-system-and-figma">2. Design System 흉내를 위해 Figma 힐끗
보기</a> <a href="https://winter-blanket.github.io/react-101-and-install-docusaurus">3. React 기초 훑어보고 Docusaurus
설치하기</a></p><current-post><p><a href="https://winter-blanket.github.io/docusaurus-configuration-1">4. Docusaurus config 톺아보기 (1)</a></p></current-post><p><a href="https://winter-blanket.github.io/docusaurus-configuration-2">5. Docusaurus config 톺아보기 (2)</a> <a href="https://winter-blanket.github.io/customize-style-of-docusaurus">6. Swizzle로
디자인 커스터마이징하기</a> <a href="https://winter-blanket.github.io/deploy-website-with-github-pages">7. Github Pages로
Docusaurus 웹사이트 호스팅하기</a> <a href="https://winter-blanket.github.io/collect-user-insight">8. 구글
서치 콘솔 등록하고 사용자 인사이트 얻기</a></p></series-bookmark>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="docusaurusconfigjs에-추가할-수-있는-설정들">docusaurus.config.js에 추가할 수 있는 설정들<a href="https://winter-blanket.github.io/docusaurus-configuration-1#docusaurusconfigjs%EC%97%90-%EC%B6%94%EA%B0%80%ED%95%A0-%EC%88%98-%EC%9E%88%EB%8A%94-%EC%84%A4%EC%A0%95%EB%93%A4" class="hash-link" aria-label="docusaurus.config.js에 추가할 수 있는 설정들에 대한 직접 링크" title="docusaurus.config.js에 추가할 수 있는 설정들에 대한 직접 링크">​</a></h2>
<p>자주 쓰이는 필수 설정들은 설치 직후에 config 파일을 열어보면 이미 설정되어 있는 것을 확인할 수 있다. 그 외에도 내가 원하는 설정을 커스터마이징하거나 Docusaurus에서 제공하는 플러그인 같은 부가 기능을 추가할 때 config 파일을 편집하게 된다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="사이트-메타데이터">사이트 메타데이터<a href="https://winter-blanket.github.io/docusaurus-configuration-1#%EC%82%AC%EC%9D%B4%ED%8A%B8-%EB%A9%94%ED%83%80%EB%8D%B0%EC%9D%B4%ED%84%B0" class="hash-link" aria-label="사이트 메타데이터에 대한 직접 링크" title="사이트 메타데이터에 대한 직접 링크">​</a></h3>
<p>SEO에 대해 알아본 적이 있다면 웹사이트 메타데이터를 정확히 설정해야 한다는 것을 들어봤을 것이다. 사이트 제목, 설명, 주요 키워드 등 검색 확률을 높이는 데 도움이 되는 정보를 config에 설정할 수 있다. 여기서 설정된 정보는 build할 때 Docusaurus가 알아서 적절한 포맷의 메타데이터로 변환해준다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="배포-설정">배포 설정<a href="https://winter-blanket.github.io/docusaurus-configuration-1#%EB%B0%B0%ED%8F%AC-%EC%84%A4%EC%A0%95" class="hash-link" aria-label="배포 설정에 대한 직접 링크" title="배포 설정에 대한 직접 링크">​</a></h3>
<p>배포 때 사용하는 설정값을 config에 추가할 수 있다. 특히 Github pages로 호스팅을 한다면 config 파일 편집이 필수적이다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="플러그인">플러그인<a href="https://winter-blanket.github.io/docusaurus-configuration-1#%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8" class="hash-link" aria-label="플러그인에 대한 직접 링크" title="플러그인에 대한 직접 링크">​</a></h3>
<p>Docusaurus에서는 몇 가지 고급 기능을 <a href="https://docusaurus.io/docs/api/plugins" target="_blank" rel="noopener noreferrer">플러그인</a> 형태로 제공하고 있다. Google Analytics 설정도 여기에 포함되는 데, 꼭 통계 데이터가 필요하지 않더라도 나중에 구글 검색 노출을 위한 사이트 등록을 진행할 때 Google Analytics 플러그인을 사용하면 더 편리해지는 측면이 있다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="디자인-설정">디자인 설정<a href="https://winter-blanket.github.io/docusaurus-configuration-1#%EB%94%94%EC%9E%90%EC%9D%B8-%EC%84%A4%EC%A0%95" class="hash-link" aria-label="디자인 설정에 대한 직접 링크" title="디자인 설정에 대한 직접 링크">​</a></h3>
<p>사이트에 어떤 내용을 담을지, 어떤 레이아웃으로 내용을 표시할지를 설정할 수 있다. 구체적인 디자인 커스터마이징은 CSS나 별도의 프론트 프로그래밍으로 진행해야 하지만, GNB에 표시될 메뉴 등 주요 골격에 대한 내용은 config에서 설정하게 된다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="사이트-메타데이터-설정하기">사이트 메타데이터 설정하기<a href="https://winter-blanket.github.io/docusaurus-configuration-1#%EC%82%AC%EC%9D%B4%ED%8A%B8-%EB%A9%94%ED%83%80%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0" class="hash-link" aria-label="사이트 메타데이터 설정하기에 대한 직접 링크" title="사이트 메타데이터 설정하기에 대한 직접 링크">​</a></h2>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockTitle_Ktv7">docusaurus.config.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token doc-comment comment" style="color:rgb(98, 114, 164)">/** </span><span class="token doc-comment comment keyword" style="color:rgb(189, 147, 249);font-style:italic">@type</span><span class="token doc-comment comment" style="color:rgb(98, 114, 164)"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token doc-comment comment class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token doc-comment comment class-name string" style="color:rgb(255, 121, 198)">'@docusaurus/types'</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token doc-comment comment class-name" style="color:rgb(98, 114, 164)">Config</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token doc-comment comment" style="color:rgb(98, 114, 164)"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> config </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'My Site'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">tagline</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Dinosaurs are cool'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">favicon</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'img/favicon.ico'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// Set the production url of your site here</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">url</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'https://your-docusaurus-test-site.com'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// Set the /&lt;baseUrl&gt;/ pathname under which your site is served</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// For GitHub pages deployment, it is often '/&lt;projectName&gt;/'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">baseUrl</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'/'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// GitHub pages deployment config.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// If you aren't using GitHub pages, you don't need these.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">organizationName</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'facebook'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// Usually your GitHub org/user name.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">projectName</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'docusaurus'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// Usually your repo name.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">onBrokenLinks</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'throw'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">onBrokenMarkdownLinks</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'warn'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// Even if you don't use internalization, you can use this field to set useful</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// metadata like html lang. For example, if your site is Chinese, you may want</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// to replace "en" with "zh-Hans".</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">i18n</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token literal-property property">defaultLocale</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'en'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token literal-property property">locales</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">'en'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token spread operator">...</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Docusaurus를 설치하고 나서 config 파일을 열어보면 위와 같은 기본값을 볼 수 있다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="favicon">favicon<a href="https://winter-blanket.github.io/docusaurus-configuration-1#favicon" class="hash-link" aria-label="favicon에 대한 직접 링크" title="favicon에 대한 직접 링크">​</a></h3>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> config </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">favicon</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'img/favicon.ico'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>파비콘은 브라우저 주소창에서 웹사이트 주소 옆에 볼 수 있는 작은 아이콘을 말한다. <code>static/img</code> 폴더 안에 Docusaurus 로고 모양의 파비콘 이미지가 기본값으로 들어가있다. 내가 만든 이미지를 같은 경로에 같은 파일명으로 만들어서 덮어씌우면 간편하게 파비콘을 바꿀 수 있다. 이 때 일반적인 이미지 포맷인 png, jpg 등을 ico 포맷으로 바꾸려면 인터넷에서 쉽게 찾아볼 수 있는 <a href="https://www.google.co.kr/search?q=png+to+ico" target="_blank" rel="noopener noreferrer">포맷 변환 사이트</a>를 활용하면 된다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="title-tagline">title, tagline<a href="https://winter-blanket.github.io/docusaurus-configuration-1#title-tagline" class="hash-link" aria-label="title, tagline에 대한 직접 링크" title="title, tagline에 대한 직접 링크">​</a></h3>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> config </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'My Site'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">tagline</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Dinosaurs are cool'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>사이트 제목과 설명 문구를 설정하는 곳이다. Docusaurus에서 기본값으로 제공하는 index 페이지를 편집없이 사용한다면 여기 설정한 title과 tagline이 화면 상단에 표시된다.</p>
<full-image><img loading="lazy" alt="Docusaurus 샘플 사이트 스크린샷" src="https://winter-blanket.github.io/assets/images/screenshot-sample-docusaurus-398a47bd18301ce762ccd6c1ed72f912.png" width="2958" height="2302" class="img_ev3q"></full-image>
<full-caption>GNB 바로 아래 영역에 title과 tagline이 표시되는 걸 볼 수 있다. </full-caption>
<p>검색 노출 알고리즘이 사이트의 내용을 파악하는 데 참고하는 정보이기도 하다. Notion 처럼 웹사이트 메타데이터를 불러와서 링크를 만들어주는 기능에서는 사이트 제목과 함께 노출되는 서브 타이틀의 역할을 한다.</p>
<p><img loading="lazy" alt="노션 북마크 기능을 사용해서 웹사이트를 링크했을 때" src="https://winter-blanket.github.io/assets/images/notion-bookmark-9ae22a01e27899b986004a481371ccd8.png" width="1676" height="316" class="img_ev3q">
<full-caption>배포 이후 사이트 링크를 노션에서 붙여넣기하면 title, tagline이 표시되는 걸 볼 수 있다.</full-caption></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="social-card">social card<a href="https://winter-blanket.github.io/docusaurus-configuration-1#social-card" class="hash-link" aria-label="social card에 대한 직접 링크" title="social card에 대한 직접 링크">​</a></h3>
<p>조금 위에 노션 북마크 기능처럼 웹사이트 주소를 링크걸 때 메타데이터를 읽어들여서 같이 보여주는 경우가 있다. 이 때 사이트를 대표하는 썸네일 이미지가 같이 보여질 때가 있는데 해당 이미지를 <code>social card</code>라 한다. <code>social card</code> 이미지는 config 파일 스크롤을 조금 내리다보면 있는 <code>themeConfig</code>에서 설정할 수 있다.</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token literal-property property">themeConfig</span><span class="token operator">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token doc-comment comment" style="color:rgb(98, 114, 164)">/** </span><span class="token doc-comment comment keyword" style="color:rgb(189, 147, 249);font-style:italic">@type</span><span class="token doc-comment comment" style="color:rgb(98, 114, 164)"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token doc-comment comment class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token doc-comment comment class-name string" style="color:rgb(255, 121, 198)">'@docusaurus/preset-classic'</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token doc-comment comment class-name" style="color:rgb(98, 114, 164)">ThemeConfig</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token doc-comment comment" style="color:rgb(98, 114, 164)"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token comment" style="color:rgb(98, 114, 164)">// Replace with your project's social card</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token literal-property property">image</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'img/docusaurus-social-card.jpg'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>마찬가지로 Docusaurus에서 만든 샘플 social card가 이미 포함되어 있기 때문에 같은 경로에 같은 파일명으로 덮어쓰면 쉽게 교체할 수 있다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="keywords">keywords<a href="https://winter-blanket.github.io/docusaurus-configuration-1#keywords" class="hash-link" aria-label="keywords에 대한 직접 링크" title="keywords에 대한 직접 링크">​</a></h3>
<p>내 사이트에서 다루는 주요 내용을 keywords로 지정해두면 검색 노출에 도움이 된다. 사이트 전체적으로 적용되는 global keyword를 설정할 수도 있고, 각 콘텐츠별로 keyword를 따로 설정하는 것도 가능하다. global keywords는 config 파일에 추가해서 지정할 수 있다. 설치 직후의 config 파일 기본 내용에는 포함되어 있지 않기 때문에, <a href="https://docusaurus.io/docs/seo" target="_blank" rel="noopener noreferrer">관련 가이드</a>를 참고해서 직접 작성해야 한다. 나는 다음과 같이 keywords를 설정했다.</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token literal-property property">themeConfig</span><span class="token operator">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token doc-comment comment" style="color:rgb(98, 114, 164)">/** </span><span class="token doc-comment comment keyword" style="color:rgb(189, 147, 249);font-style:italic">@type</span><span class="token doc-comment comment" style="color:rgb(98, 114, 164)"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token doc-comment comment class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token doc-comment comment class-name string" style="color:rgb(255, 121, 198)">'@docusaurus/preset-classic'</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token doc-comment comment class-name" style="color:rgb(98, 114, 164)">ThemeConfig</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token doc-comment comment" style="color:rgb(98, 114, 164)"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token literal-property property">metadata</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'keywords'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token literal-property property">content</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'노션, 생산성, 블로그, 코딩 공부, 여행'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="배포-환경-설정하기">배포 환경 설정하기<a href="https://winter-blanket.github.io/docusaurus-configuration-1#%EB%B0%B0%ED%8F%AC-%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0" class="hash-link" aria-label="배포 환경 설정하기에 대한 직접 링크" title="배포 환경 설정하기에 대한 직접 링크">​</a></h2>
<p>배포 환경 설정은 Github pages 기준으로 설정했다. 여기서는 어떻게 설정했는지만 간략히 포함하고, Github pages 사용법을 다룰 다른 포스트에서 더 자세히 설명할 예정이다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="url-baseurl">url, baseUrl<a href="https://winter-blanket.github.io/docusaurus-configuration-1#url-baseurl" class="hash-link" aria-label="url, baseUrl에 대한 직접 링크" title="url, baseUrl에 대한 직접 링크">​</a></h3>
<p>url은 사이트 도메인을 뜻한다. 호스팅사에서 제공하는 무료 도메인을 쓴다면 해당 주소, 혹은 내가 구입한 유료 도메인 주소를 적으면 된다. Github pages를 쓴다면 github.io로 끝나는 주소가 도메인이므로 해당 주소를 적어야 한다. baseUrl은 사이트의 기본 경로값에 해당하는 위치가 어디인지를 지정하는 곳이다. 도메인 url 구조를 특별히 다르게 지정하는 경우가 아니라면 기본값인 '/'를 그대로 두면 된다. 그래서 내 config는 아래와 같이 설정되어 있다.</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> config </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">url</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'https://winter-blanket.github.io/'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">baseUrl</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'/'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="organizationname-projectname">organizationName, projectName<a href="https://winter-blanket.github.io/docusaurus-configuration-1#organizationname-projectname" class="hash-link" aria-label="organizationName, projectName에 대한 직접 링크" title="organizationName, projectName에 대한 직접 링크">​</a></h3>
<p>Github pages를 쓰는 경우에만 설정하는 정보기 때문에 다른 호스팅사를 사용한다면 편집 없이 넘어가면 된다. <code>organizationName</code>은 Github에서 사용하는 organization 이름을 뜻하는데 개인이라면 자기 user name을 작성하면 된다. <code>projectName</code>은 repository 이름인데 Github pages는 repository 이름과 도메인이 같으므로 도메인 주소를 <code>https://</code> 없이 적어주면 된다.</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> config </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// GitHub pages deployment config.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)">// If you aren't using GitHub pages, you don't need these.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">organizationName</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'winter-blanket'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// Usually your GitHub org/user name.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">projectName</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'winter-blanket.github.io'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)">// Usually your repo name.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="플러그인-추가하기">플러그인 추가하기<a href="https://winter-blanket.github.io/docusaurus-configuration-1#%ED%94%8C%EB%9F%AC%EA%B7%B8%EC%9D%B8-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0" class="hash-link" aria-label="플러그인 추가하기에 대한 직접 링크" title="플러그인 추가하기에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="plugin-google-gtag">plugin-google-gtag<a href="https://winter-blanket.github.io/docusaurus-configuration-1#plugin-google-gtag" class="hash-link" aria-label="plugin-google-gtag에 대한 직접 링크" title="plugin-google-gtag에 대한 직접 링크">​</a></h3>
<p><a href="https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-google-gtag" target="_blank" rel="noopener noreferrer">gtag 플러그인</a>은 Google Analytics를 쉽게 붙일 수 있게 도와주는 플러그인이다. 플러그인 목록을 보면 plugin-google-analytics도 있는데, 이는 구버전 Google Analytics 연동을 위한 플러그인이므로 무시하고 gtag 플러그인만 설치하면 된다. 플러그인 설치 전에 아래 명령어를 프로젝트 폴더 경로에서 실행해서 플러그인을 내려받아야 한다.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token function" style="color:rgb(80, 250, 123)">npm</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">install</span><span class="token plain"> </span><span class="token parameter variable" style="color:rgb(189, 147, 249);font-style:italic">--save</span><span class="token plain"> @docusaurus/plugin-google-gtag</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>그리고 config를 아래와 같이 설정한다. themeConfig 하위 위치가 아니라 config 바로 아래 위치에 넣어야 한다. tracingID에는 Google Analytics에서 사이트를 등록하면서 생성한 아이디값을 적으면 된다.</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> config </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">plugins</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token string" style="color:rgb(255, 121, 198)">'@docusaurus/plugin-google-gtag'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">trackingID</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'G-XXXXXXXXXX'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">anonymizeIP</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>팁</div><div class="admonitionContent_BuS1"><p>Google Analytics 사이트에서 <code>trackingID</code>를 만드는 방법은 <a href="https://winter-blanket.github.io/collect-user-insight">이 포스트</a>에서 설명합니다.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="사이트-내용-설정하기">사이트 내용 설정하기<a href="https://winter-blanket.github.io/docusaurus-configuration-1#%EC%82%AC%EC%9D%B4%ED%8A%B8-%EB%82%B4%EC%9A%A9-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0" class="hash-link" aria-label="사이트 내용 설정하기에 대한 직접 링크" title="사이트 내용 설정하기에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="사이트-언어i18n">사이트 언어(i18n)<a href="https://winter-blanket.github.io/docusaurus-configuration-1#%EC%82%AC%EC%9D%B4%ED%8A%B8-%EC%96%B8%EC%96%B4i18n" class="hash-link" aria-label="사이트 언어(i18n)에 대한 직접 링크" title="사이트 언어(i18n)에 대한 직접 링크">​</a></h3>
<p>Docusaurus에서 제공하는 유용한 부가 기능 중 하나가 다국어 설정을 지원한다는 점이다. 특히 사용자 가이드 용도로 사용한다면 글로벌 서비스인 경우 가이드 문서를 여러 언어별로 제공해야 할 때가 있다. Docusaurus에서는 화면 상단의 토글 버튼으로 간편하게 언어별 버전을 오고갈 수 있다. 내 사이트에서는 여러 언어를 쓸 일이 없으므로 검색 노출 최적화 차원에서 사용 언어를 지정해주는 정도로만 설정했다. 다국어 설정에 대한 보다 자세한 내용은 <a href="https://docusaurus.io/docs/i18n/introduction" target="_blank" rel="noopener noreferrer">가이드 페이지</a>에서 확인할 수 있다.</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> config </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">i18n</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token literal-property property">defaultLocale</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ko'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token literal-property property">locales</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">'ko'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="블로그-메타데이터">블로그 메타데이터<a href="https://winter-blanket.github.io/docusaurus-configuration-1#%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A9%94%ED%83%80%EB%8D%B0%EC%9D%B4%ED%84%B0" class="hash-link" aria-label="블로그 메타데이터에 대한 직접 링크" title="블로그 메타데이터에 대한 직접 링크">​</a></h3>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">const</span><span class="token plain"> config </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token literal-property property">presets</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token string" style="color:rgb(255, 121, 198)">'classic'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token doc-comment comment" style="color:rgb(98, 114, 164)">/** </span><span class="token doc-comment comment keyword" style="color:rgb(189, 147, 249);font-style:italic">@type</span><span class="token doc-comment comment" style="color:rgb(98, 114, 164)"> </span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token doc-comment comment class-name keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token doc-comment comment class-name string" style="color:rgb(255, 121, 198)">'@docusaurus/preset-classic'</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token doc-comment comment class-name" style="color:rgb(98, 114, 164)">Options</span><span class="token doc-comment comment class-name punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token doc-comment comment" style="color:rgb(98, 114, 164)"> */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token literal-property property">blog</span><span class="token operator">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token literal-property property">blogTitle</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'겨울이불의 아카이브'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token literal-property property">blogDescription</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'개인적인 공부 기록과 기억해둘만한 모든 정보를 모아두는 곳입니다.'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token literal-property property">blogSidebarTitle</span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'최근 글 모음'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token literal-property property">blogSidebarCount</span><span class="token operator">:</span><span class="token plain"> </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token literal-property property">postsPerPage</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'ALL'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token literal-property property">showReadingTime</span><span class="token operator">:</span><span class="token plain"> </span><span class="token boolean">true</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token literal-property property">sortPosts</span><span class="token plain"> </span><span class="token operator">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'descending'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token comment" style="color:rgb(98, 114, 164)">// Please change this to your repo.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token comment" style="color:rgb(98, 114, 164)">// Remove this to remove the "edit this page" links.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">          </span><span class="token comment" style="color:rgb(98, 114, 164)">// editUrl:'https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/',</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token spread operator">...</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">중략</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">      </span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>blog 기능을 사용하는 경우, 블로그 관련 메타데이터와 부가 기능을 따로 설정해줄 수 있다. blog 관련 설정은 presets 필드 안에 추가할 수 있는데, 설정할 수 있는 모든 옵션의 종류는 <a href="https://docusaurus.io/docs/api/plugins/@docusaurus/plugin-content-blog#configuration" target="_blank" rel="noopener noreferrer">가이드 페이지</a>에서 확인할 수 있다.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="blogtitle-blogdescription">blogTitle, blogDescription<a href="https://winter-blanket.github.io/docusaurus-configuration-1#blogtitle-blogdescription" class="hash-link" aria-label="blogTitle, blogDescription에 대한 직접 링크" title="blogTitle, blogDescription에 대한 직접 링크">​</a></h4>
<p>사이트 title, tagline과 같이 블로그의 내용을 설명하는 메타 데이터를 따로 설정하고 싶은 경우에 사용하는 값이다.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="blogsidebartitle">blogSidebarTitle<a href="https://winter-blanket.github.io/docusaurus-configuration-1#blogsidebartitle" class="hash-link" aria-label="blogSidebarTitle에 대한 직접 링크" title="blogSidebarTitle에 대한 직접 링크">​</a></h4>
<p>Docusaurus의 blog 기본 레이아웃은 화면 왼편에 포스트 목록이 쭉 나열되는 식이다. 사이드바 제목을 직접 설정할 수 있다.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="blogsidebarcount">blogSidebarCount<a href="https://winter-blanket.github.io/docusaurus-configuration-1#blogsidebarcount" class="hash-link" aria-label="blogSidebarCount에 대한 직접 링크" title="blogSidebarCount에 대한 직접 링크">​</a></h4>
<p>사이드바에 최대 몇 개의 포스트 제목을 노출시킬지를 지정하는 곳이다. 아라비아 숫자를 적거나 <code>ALL</code> 이라고 적을 수 있다. 포스트 개수가 아주 많을 경우 ALL을 쓰면 스크롤이 지나치게 길어지므로 적당한 숫자로 최대 개수를 제한시켜주는 것이 좋을 것이다. 나는 이런저런 커스터마이징 끝에 사이드바 자체를 노출시키지 않기로 해서 개수를 0으로 지정했다.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="postsperpage">postsPerPage<a href="https://winter-blanket.github.io/docusaurus-configuration-1#postsperpage" class="hash-link" aria-label="postsPerPage에 대한 직접 링크" title="postsPerPage에 대한 직접 링크">​</a></h4>
<p>블로그 화면에 진입했을 때 최대 몇 개의 포스트를 보여줄지를 지정하는 곳이다. <code>pagination</code>을 적용하지 않을 거라면 ALL을 쓰면 되고, 특정 아라비아 숫자를 적으면 pagination이 적용된다.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="showreadingtime">showReadingTime<a href="https://winter-blanket.github.io/docusaurus-configuration-1#showreadingtime" class="hash-link" aria-label="showReadingTime에 대한 직접 링크" title="showReadingTime에 대한 직접 링크">​</a></h4>
<p>true로 켜두면 포스트 작성일 옆에 예상 완독 시간이 자동 계산되어 표시된다.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="sortposts">sortPosts<a href="https://winter-blanket.github.io/docusaurus-configuration-1#sortposts" class="hash-link" aria-label="sortPosts에 대한 직접 링크" title="sortPosts에 대한 직접 링크">​</a></h4>
<p><code>descending</code>으로 설정하면 최근 작성 포스트가 위에, 옛날 포스트가 아래에 배치된다. 반대로 배치하고 싶다면 <code>ascending</code>이라고 적으면 된다.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="editurl">editUrl<a href="https://winter-blanket.github.io/docusaurus-configuration-1#editurl" class="hash-link" aria-label="editUrl에 대한 직접 링크" title="editUrl에 대한 직접 링크">​</a></h4>
<p>블로그 포스트 편집을 서버에 띄워져 있는 Docusaurus 웹페이지에서 바로 시작한다면 이 곳에 포스트를 편집하는 url을 지정하면 된다. 예를 들어, Docusaurus 샘플 사이트를 localhost에 띄워보면 포스트 상세 페이지 하단에 <code>edit this page</code> 버튼이 활성화되어 있는 것을 볼 수 있다. 여길 누르면 해당 포스트의 마크다운 파일이 있는 Github 링크로 이동한다. repository 주인이라면 여기서 마크다운 파일을 바로 편집할 수 있을 테고, 곧 블로그 포스트가 수정된다.
나는 모든 내용을 항상 로컬에서 프로그래밍 에디터로 편집할 생각이었기 때문에 이 옵션은 주석처리해두었다. 실제로 자주 쓰일 설정은 아닌지, config 기본 파일에 이미 삭제하라는 안내 주석이 포함되어 있다.</p>
<p><img loading="lazy" alt="Edit this page 버튼 스크린샷" src="https://winter-blanket.github.io/assets/images/screenshot-post-edit-url-59d9b161d3d0bbc5d98827e1707e323f.png" width="1570" height="462" class="img_ev3q">
<full-caption>아무것도 커스터마이징하지 않은 기본 Docusaurus 페이지에서는 블로그 포스트 하단에서 Edit this page 버튼을 볼 수 있다.</full-caption></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="이어서">이어서<a href="https://winter-blanket.github.io/docusaurus-configuration-1#%EC%9D%B4%EC%96%B4%EC%84%9C" class="hash-link" aria-label="이어서에 대한 직접 링크" title="이어서에 대한 직접 링크">​</a></h2>
<p>여기까지 진행했다면 이제 사이트에 어떤 내용을 담을지를 채워나갈 차례다. 다음 포스트에서는 GNB에 어떤 메뉴를 배치할지 부터 시작해서 레이아웃에 영향을 미치는 설정을 config 파일에 채우는 법을 다룰 예정이다.</p>
<series-bookmark><p><a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus">1. 웅덩이 파는 데 포크레인 써보기</a>
<a href="https://winter-blanket.github.io/understand-design-system-and-figma">2. Design System 흉내를 위해 Figma 힐끗
보기</a> <a href="https://winter-blanket.github.io/react-101-and-install-docusaurus">3. React 기초 훑어보고 Docusaurus
설치하기</a></p><current-post><p><a href="https://winter-blanket.github.io/docusaurus-configuration-1">4. Docusaurus config 톺아보기 (1)</a></p></current-post><p><a href="https://winter-blanket.github.io/docusaurus-configuration-2">5. Docusaurus config 톺아보기 (2)</a> <a href="https://winter-blanket.github.io/customize-style-of-docusaurus">6. Swizzle로
디자인 커스터마이징하기</a> <a href="https://winter-blanket.github.io/deploy-website-with-github-pages">7. Github Pages로
Docusaurus 웹사이트 호스팅하기</a> <a href="https://winter-blanket.github.io/collect-user-insight">8. 구글
서치 콘솔 등록하고 사용자 인사이트 얻기</a></p></series-bookmark>]]></content:encoded>
            <category>Docusaurus로 개인 홈페이지 만들기 #4</category>
            <category>프로그래밍 공부 기록</category>
            <category>Figma</category>
            <category>Design System</category>
            <category>React</category>
            <category>Docusaurus</category>
            <category>Github Pages</category>
        </item>
        <item>
            <title><![CDATA[React 기초 훑어보고 Docusaurus 설치하기]]></title>
            <link>https://winter-blanket.github.io/react-101-and-install-docusaurus</link>
            <guid>https://winter-blanket.github.io/react-101-and-install-docusaurus</guid>
            <pubDate>Sat, 08 Jul 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[React 기초 개념을 공부한 과정과 Docusaurus 설치하는 방법]]></description>
            <content:encoded><![CDATA[<series-bookmark><p><a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus">1. 웅덩이 파는 데 포크레인 써보기</a>
<a href="https://winter-blanket.github.io/understand-design-system-and-figma">2. Design System 흉내를 위해 Figma 힐끗
보기</a></p><current-post><p><a href="https://winter-blanket.github.io/react-101-and-install-docusaurus">3. React 기초 훑어보고 Docusaurus
설치하기</a></p></current-post><p><a href="https://winter-blanket.github.io/docusaurus-configuration-1">4. Docusaurus config 톺아보기 (1)</a> <a href="https://winter-blanket.github.io/docusaurus-configuration-2">5.
Docusaurus config 톺아보기 (2)</a> <a href="https://winter-blanket.github.io/customize-style-of-docusaurus">6. Swizzle로
디자인 커스터마이징하기</a> <a href="https://winter-blanket.github.io/deploy-website-with-github-pages">7. Github Pages로
Docusaurus 웹사이트 호스팅하기</a> <a href="https://winter-blanket.github.io/collect-user-insight">8. 구글
서치 콘솔 등록하고 사용자 인사이트 얻기</a></p></series-bookmark>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="react-기초-훑어보기">React 기초 훑어보기<a href="https://winter-blanket.github.io/react-101-and-install-docusaurus#react-%EA%B8%B0%EC%B4%88-%ED%9B%91%EC%96%B4%EB%B3%B4%EA%B8%B0" class="hash-link" aria-label="React 기초 훑어보기에 대한 직접 링크" title="React 기초 훑어보기에 대한 직접 링크">​</a></h2>
<p>사실 React에 대한 이해가 전혀 없어도 Docusaurus를 쓰는 데 무조건 지장이 생기는 것은 아니다. Docusaurus가 제공하는 디자인을 거의 변경하지 않으면서 그대로 사용한다면 CSS로 커스터마이징하는 것으로 충분하다. 하지만 더 아는 상태에서 도구를 사용하는 건 그렇지 않은 상태와 분명한 차이가 있다. 결과적으로 React를 미리 공부하고 시작한 덕에 내 기대보다 더 많은 디자인 커스터마이징이 가능했다. 그래서 프로그래밍 기초 체력이 어느 정도 있는 사람이라면 Docusaurus를 써보기 전에 꼭 React 기초 개념을 공부하는 것이 좋다고 추천하고 싶다.</p>
<full-image><img loading="lazy" alt="노마드 코더 유튜브 페이지 스크린샷" src="https://winter-blanket.github.io/assets/images/nomad-coders-b0ba4ff178e1f1c3aa46c2b018580aa8.png" width="2432" height="1524" class="img_ev3q"></full-image>
<full-caption>노마드 코더의 유튜브 페이지. 비전공자가 독학으로 프로그래밍을 공부할 때 여러모로 도움이 되는 곳이다. </full-caption>
<p>React 공부는 노마드 코더의 <a href="https://nomadcoders.co/react-for-beginners" target="_blank" rel="noopener noreferrer">무료 강의</a>를 활용했다. 사실 강의 내용 전체를 다 듣진 못했지만 앞 부분에서 React의 컨셉을 알기 쉽게 설명해주기 때문에 앞부분만 들어도 나중에 설명할 인덱스 페이지 개발에 큰 도움이 된다. React의 기본적인 컨셉은 화면에 표시될 요소를 '모듈화'하는 데 있다. Design System에 이미 익숙한 사람이라면 금방 적응할 수 있다.</p>
<p>다음은 포트폴리오이자 현재 사이트의 인덱스 페이지의 코드 구조이다.</p>
<div class="language-js codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockTitle_Ktv7">./src/pages/index.js</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-js codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token imports"> </span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token imports">useState</span><span class="token imports punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'react'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports">useDocusaurusContext</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'@docusaurus/useDocusaurusContext'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">Layout</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'@theme/Layout'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:rgb(80, 250, 123)">SectionTitle</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token parameter punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token parameter">title_kr</span><span class="token parameter punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token parameter"> title_en</span><span class="token parameter punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword control-flow" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token operator">&lt;</span><span class="token plain">div className</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'SectionTitle'</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token operator">&lt;</span><span class="token plain">h2</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token operator">&lt;</span><span class="token plain">span className</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'title_kr color-primary'</span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">title_kr</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token plain">span</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token operator">&lt;</span><span class="token plain">span</span><span class="token operator">&gt;</span><span class="token operator">&amp;</span><span class="token plain">nbsp</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token plain">span</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token operator">&lt;</span><span class="token plain">span className</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'title_en'</span><span class="token plain"> </span><span class="token operator">&gt;</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain">title_en</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token plain">span</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token plain">h2</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token plain">div</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">export</span><span class="token plain"> </span><span class="token keyword module" style="color:rgb(189, 147, 249);font-style:italic">default</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:rgb(80, 250, 123)">Home</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword control-flow" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token operator">&lt;</span><span class="token maybe-class-name">Layout</span><span class="token plain"> title</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'겨울이불의 아카이브'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                description</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'블로그, 공부 기록 등 온갖 개인적인 관심사를 모아두는 곳입니다.'</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token operator">&lt;</span><span class="token plain">main className</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'container'</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token operator">&lt;</span><span class="token maybe-class-name">SectionTitle</span><span class="token plain"> title_kr</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'업무 경험'</span><span class="token plain"> title_en</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'Work Experience'</span><span class="token plain"> </span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                </span><span class="token spread operator">...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            </span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token plain">main</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token maybe-class-name">Layout</span><span class="token operator">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>실제로는 함수가 더 여러개 있지만 구조를 설명하는 데 필요한 만큼만 발췌했다. React를 배우면서 내가 직접 이름을 지은 HTML Tag를 넣을 수 있다는 사실을 처음 알게 되었다. 위의 코드를 보면 SectionTitle이라고 이름 지은 Component가 함수로 정의된 것을 볼 수 있다. 함수 내용 안에는 그 Component의 형식과 디자인을 일반적인 HTML을 작성하는 것과 큰 차이 없이 작성하면 된다. 다만 컴포넌트 안에 들어갈 유동적인 부분, 예를 들면 섹션 제목과 같은 내용은 변수로 작성한다는 점이 차이점이다. 이렇게 정의된 함수를 불러와서 마치 HTML Tag처럼 사용하는 부분이 &lt;SectionTitle title_kr='업무 경험' title_en='Work Experience' /&gt; 이다.</p>
<p>이런 구조를 취하면 같은 모양이면서 내용만 달라지는 경우, 즉 같은 Component가 반복적으로 쓰이는 경우 매번 전체 HTML을 작성할 필요가 없다는 장점이 있다. 물론 내가 만든 포트폴리오 페이지는 디자인이 매우 단순해서 심플하게 Component 하나당 함수 하나가 나오지만, 실제 서비스용 프로덕트라면 Component의 구조가 훨씬 복잡해질 것이다. Design System을 설계할 때 각 Component가 매우 독립적이어야 한다는 말을 들었었는데 직접 만들고 보니 바로 이해할 수 있었다. 이렇게 모듈화된 코드를 불러오는 구조인데 Component가 서로 중첩되어 설계되어있다면 코드상에서도 당연히 구현이 어려워질 것이다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="docusaurus에서-콘텐츠를-표시하는-방법">Docusaurus에서 콘텐츠를 표시하는 방법<a href="https://winter-blanket.github.io/react-101-and-install-docusaurus#docusaurus%EC%97%90%EC%84%9C-%EC%BD%98%ED%85%90%EC%B8%A0%EB%A5%BC-%ED%91%9C%EC%8B%9C%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95" class="hash-link" aria-label="Docusaurus에서 콘텐츠를 표시하는 방법에 대한 직접 링크" title="Docusaurus에서 콘텐츠를 표시하는 방법에 대한 직접 링크">​</a></h2>
<p>이제 Docusaurus 설치를 시작할 차례다. 그 전에 Docusaurus가 콘텐츠를 어떻게 다루는지를 알아볼 필요가 있다. 콘텐츠의 성질에 따라 어떤 기능을 써야 하는지가 정해지기 때문이다. Docusaurus는 문서 콘텐츠를 크게 docs, blog, page로 분류한다. 사실 (기본적으로는) 마크다운으로 내용을 작성한다는 점은 같기 때문에, 그냥 콘텐츠를 어떤 용도로 표시하느냐에 따라 기본 제공하는 UI가 달라진다고 보면 편하다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="docs">Docs<a href="https://winter-blanket.github.io/react-101-and-install-docusaurus#docs" class="hash-link" aria-label="Docs에 대한 직접 링크" title="Docs에 대한 직접 링크">​</a></h3>
<full-image><img loading="lazy" alt="Docusaurus Docs 페이지 스크린샷" src="https://winter-blanket.github.io/assets/images/screenshot-docusaurus-docs-84f263e55f6d74e9dd101448c1ced22f.png" width="2958" height="1596" class="img_ev3q"></full-image>
<p>docs는 웹페이지 형태의 사용자 가이드 제작용으로 나온 기능이다. 바로 Docusaurus 가이드 페이지가 이 기능으로 만들어져 있다. 왼편 사이드바에 큰 목차가 있고, 중앙에 내용, 오른편 사이드바에 내용 목차가 있는 구조이다. 일정한 목차를 가진 문서 콘텐츠를 상시 게시해놓기에 편리하다. Versioning도 지원하기 때문에 릴리즈 노트처럼 버전별로 콘텐츠를 게시하는 것도 가능하다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="blog">blog<a href="https://winter-blanket.github.io/react-101-and-install-docusaurus#blog" class="hash-link" aria-label="blog에 대한 직접 링크" title="blog에 대한 직접 링크">​</a></h3>
<full-image><img loading="lazy" alt="Docusaurus Blog 페이지 스크린샷" src="https://winter-blanket.github.io/assets/images/screenshot-docusaurus-blog-b0db453846ff7ea3294c8a626435549b.png" width="2958" height="1596" class="img_ev3q"></full-image>
<p>blog는 말 그대로 블로그 형태로 콘텐츠를 게시하고 싶을 때 쓰는 기능이다. 개인적인 용도로 Docusaurus를 쓴다면 docs보다는 이 쪽을 더 많이 쓸 것이다. 블로그 하나에 집중하는 라이브러리가 아니어서 그런지 레이아웃이 너무 간단하다는 게 단점이다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="page">page<a href="https://winter-blanket.github.io/react-101-and-install-docusaurus#page" class="hash-link" aria-label="page에 대한 직접 링크" title="page에 대한 직접 링크">​</a></h3>
<full-image><img loading="lazy" alt="Docusaurus 첫 화면 스크린샷" src="https://winter-blanket.github.io/assets/images/screenshot-docusaurus-index-3873a75e27378736797e3766e72f156d.png" width="2958" height="1596" class="img_ev3q"></full-image>
<p>Docusaurus는 docs와 blog가 가장 큰 뼈대이고, 그 외에 추가로 원하는 서브 페이지들을 추가할 수 있는 구조로 되어 있다. 예를 들면 첫 화면을 docs나 blog로 가지 않고 별도의 index 페이지로 만들 수 있다. Docusaurus 가이드도 첫 화면에 Docusaurus를 소개하는 내용을 담고 있다.</p>
<p>하나의 사이트에서 docs, blog, page를 여러개씩 가질 수도 있다. 즉, 계층화된 목차를 가진 많은 양의 문서를 게시한다면 docs를, 블로그 포스팅 용도라면 blog를, 완전히 커스터마이징한 페이지가 필요하다면 별도의 서브 페이지를 추가하는 식이다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="docusaurus-설치하기">Docusaurus 설치하기<a href="https://winter-blanket.github.io/react-101-and-install-docusaurus#docusaurus-%EC%84%A4%EC%B9%98%ED%95%98%EA%B8%B0" class="hash-link" aria-label="Docusaurus 설치하기에 대한 직접 링크" title="Docusaurus 설치하기에 대한 직접 링크">​</a></h2>
<p>Docusaurus 설치 방법은 간단하다. 앞으로 온갖 데이터를 쌓아두게 될 폴더 위치를 잘 선정한 후, 터미널에서 아래 명령어를 실행하면 된다. my-website 부분이 내 폴더명이 된다.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">npx create-docusaurus@latest my-website classic</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>위 명령어를 실헹하면 Docusaurus에서 기본 제공하는 테마와 샘플 문서가 들어있는 상태로 폴더 내용이 셋팅된다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="설치-후-보게-될-폴더-구조">설치 후 보게 될 폴더 구조<a href="https://winter-blanket.github.io/react-101-and-install-docusaurus#%EC%84%A4%EC%B9%98-%ED%9B%84-%EB%B3%B4%EA%B2%8C-%EB%90%A0-%ED%8F%B4%EB%8D%94-%EA%B5%AC%EC%A1%B0" class="hash-link" aria-label="설치 후 보게 될 폴더 구조에 대한 직접 링크" title="설치 후 보게 될 폴더 구조에 대한 직접 링크">​</a></h2>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockTitle_Ktv7">Docusaurus 공식 가이드에 있는 폴더 구조 예시</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">my-website</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── blog</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   ├── </span><span class="token number">2019</span><span class="token plain">-05-28-hola.md</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   ├── </span><span class="token number">2019</span><span class="token plain">-05-29-hello-world.md</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   └── </span><span class="token number">2020</span><span class="token plain">-05-30-welcome.md</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── docs</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   ├── doc1.md</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   ├── doc2.md</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   ├── doc3.md</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   └── mdx.md</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── src</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   ├── css</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   │   └── custom.css</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   └── pages</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│       ├── styles.module.css</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│       └── index.js</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── static</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   └── img</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── docusaurus.config.js</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── package.json</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── README.md</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── sidebars.js</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">└── yarn.lock</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Docusaurus는 (1) 사용자 가이드 같은 정적인 페이지, 혹은 (2) 블로그 운영에 최적화되어 있어서 폴더 구조도 이에 맞춰져 있다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="blog-1">blog<a href="https://winter-blanket.github.io/react-101-and-install-docusaurus#blog-1" class="hash-link" aria-label="blog에 대한 직접 링크" title="blog에 대한 직접 링크">​</a></h3>
<p>블로그 포스트 파일을 모아놓는 곳이다. 위 폴더 구조 예시에서는 마크다운 파일만 들어있지만, 실제로는 포스트별로 필요한 이미지를 모아 관리하기 위해 폴더들을 넣어놓게 된다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="docs-1">docs<a href="https://winter-blanket.github.io/react-101-and-install-docusaurus#docs-1" class="hash-link" aria-label="docs에 대한 직접 링크" title="docs에 대한 직접 링크">​</a></h3>
<p>정적인 페이지를 모아놓는 곳이다. 앞서 언급한 계층적인 목차를 가진 문서 콘텐츠를 게시한다면 이 곳에 파일을 모아두게 된다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="src">src<a href="https://winter-blanket.github.io/react-101-and-install-docusaurus#src" class="hash-link" aria-label="src에 대한 직접 링크" title="src에 대한 직접 링크">​</a></h3>
<p><code>docs, blog</code>는 콘텐츠 문서들, 즉 마크다운 파일을 용도에 따라 모아두는 곳이다. 반면 <code>src</code> 폴더는 내가 Docusaurus에서 기본적으로 제공하는 코드 외에, 내가 커스터마이징하거나 추가할 React 소스 코드를 모아두는 곳이라 이해하면 쉽다.</p>
<p>설치하자마자 기본값으로 들어있는 <code>custom.css</code> 파일에 내가 원하는 CSS를 작성하면 기존 Docusaurus 디자인에 CSS를 덮어씌울 수 있다.</p>
<p>앞서 언급한 서브 page는 pages 폴더 안에 넣어두면 된다. page는 마크다운으로 작성할 수도 있고, 좀 더 UI 디자인이 필요하다면 React js로 작성해서 만들 수도 있다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="static">static<a href="https://winter-blanket.github.io/react-101-and-install-docusaurus#static" class="hash-link" aria-label="static에 대한 직접 링크" title="static에 대한 직접 링크">​</a></h3>
<p>React는 개발이 끝나면 build라는 과정을 거쳐서 실제 서버에 올라갈 코드를 생성하는데, static 폴더 안에 있는 데이터는 build에 포함된다. 그래서 page에서 사용하는 이미지나 기타 서버에 올라갈 코드에 포함됐으면 하는 파일이 있다면 이 곳에 넣으면 된다.</p>
<p>검색 노출을 돕기 위해 구글, 네이버에 사이트 등록을 하려면 도메인 소유권을 인증을 요구한다. 인증 방법 중 하나가 특정 html 파일을 사이트에 올려서 구글, 네이버가 찾을 수 있도록 하는 건데 static 폴더 안에 해당 파일을 올리면 쉽게 해결할 수 있다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="docusaurusconfigjs">docusaurus.config.js<a href="https://winter-blanket.github.io/react-101-and-install-docusaurus#docusaurusconfigjs" class="hash-link" aria-label="docusaurus.config.js에 대한 직접 링크" title="docusaurus.config.js에 대한 직접 링크">​</a></h3>
<p>초반에 특히 자주 보게 되는 파일로, 온갖 Docusaurus의 설정을 편집하는 곳이다. Docusaurus에서 제공하는 다양한 기능이 첫 설치 상태에서 모두 켜져 있지는 않다. 필요한 기능을 config 파일에 추가하면 켜지는 식이다. 특히 검색 노출에 도움이 되는 사이트 메타데이터 정보도 여기에 작성한다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="sidebarsjs">sidebars.js<a href="https://winter-blanket.github.io/react-101-and-install-docusaurus#sidebarsjs" class="hash-link" aria-label="sidebars.js에 대한 직접 링크" title="sidebars.js에 대한 직접 링크">​</a></h3>
<p>docs의 왼편 사이드바에 목차를 어떻게 보여줄지를 설정하는 곳이다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="이제-본격적인-개발-준비는-끝">이제 본격적인 개발 준비는 끝<a href="https://winter-blanket.github.io/react-101-and-install-docusaurus#%EC%9D%B4%EC%A0%9C-%EB%B3%B8%EA%B2%A9%EC%A0%81%EC%9D%B8-%EA%B0%9C%EB%B0%9C-%EC%A4%80%EB%B9%84%EB%8A%94-%EB%81%9D" class="hash-link" aria-label="이제 본격적인 개발 준비는 끝에 대한 직접 링크" title="이제 본격적인 개발 준비는 끝에 대한 직접 링크">​</a></h2>
<full-image><img loading="lazy" alt="Docusaurus 샘플 사이트 스크린샷" src="https://winter-blanket.github.io/assets/images/screenshot-sample-docusaurus-398a47bd18301ce762ccd6c1ed72f912.png" width="2958" height="2302" class="img_ev3q"></full-image>
<full-caption>Docusaurus 샘플 사이트 스크린샷. 간략한 index 페이지와 docs, blog 샘플을 볼 수 있다.</full-caption>
<p>npm start를 터미널에 입력해서 localhost에 띄워보면 위와 같은 샘플 사이트를 볼 수 있다. 나는 인덱스 페이지에 개인 포트폴리오를 넣어두고, UI를 좀 더 예쁘게 다듬은 블로그를 만들 생각이었다. 뼈대를 올려야 하니 config 파일 가이드를 전체적으로 훑어보며 필요한 설정들을 넣기 시작했다.</p>
<series-bookmark><p><a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus">1. 웅덩이 파는 데 포크레인 써보기</a>
<a href="https://winter-blanket.github.io/understand-design-system-and-figma">2. Design System 흉내를 위해 Figma 힐끗
보기</a></p><current-post><p><a href="https://winter-blanket.github.io/react-101-and-install-docusaurus">3. React 기초 훑어보고 Docusaurus
설치하기</a></p></current-post><p><a href="https://winter-blanket.github.io/docusaurus-configuration-1">4. Docusaurus config 톺아보기 (1)</a> <a href="https://winter-blanket.github.io/docusaurus-configuration-2">5.
Docusaurus config 톺아보기 (2)</a> <a href="https://winter-blanket.github.io/customize-style-of-docusaurus">6. Swizzle로
디자인 커스터마이징하기</a> <a href="https://winter-blanket.github.io/deploy-website-with-github-pages">7. Github Pages로
Docusaurus 웹사이트 호스팅하기</a> <a href="https://winter-blanket.github.io/collect-user-insight">8. 구글
서치 콘솔 등록하고 사용자 인사이트 얻기</a></p></series-bookmark>]]></content:encoded>
            <category>Docusaurus로 개인 홈페이지 만들기 #3</category>
            <category>프로그래밍 공부 기록</category>
            <category>Figma</category>
            <category>Design System</category>
            <category>React</category>
            <category>Docusaurus</category>
            <category>Github Pages</category>
        </item>
        <item>
            <title><![CDATA[Design System 흉내를 위해 Figma 힐끗보기]]></title>
            <link>https://winter-blanket.github.io/understand-design-system-and-figma</link>
            <guid>https://winter-blanket.github.io/understand-design-system-and-figma</guid>
            <pubDate>Tue, 27 Jun 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Design System Component 디자인을 위해 Figma Auto Layout, Property 기능을 써본 과정]]></description>
            <content:encoded><![CDATA[<series-bookmark><p><a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus">1. 웅덩이 파는 데 포크레인 써보기</a></p><current-post><p><a href="https://winter-blanket.github.io/understand-design-system-and-figma">2. Design System 흉내를 위해 Figma 힐끗 보기</a></p></current-post><p><a href="https://winter-blanket.github.io/react-101-and-install-docusaurus">3. React 기초 훑어보고 Docusaurus 설치하기</a>
<a href="https://winter-blanket.github.io/docusaurus-configuration-1">4. Docusaurus config 톺아보기 (1)</a>
<a href="https://winter-blanket.github.io/docusaurus-configuration-2">5. Docusaurus config 톺아보기 (2)</a>
<a href="https://winter-blanket.github.io/customize-style-of-docusaurus">6. Swizzle로 디자인 커스터마이징하기</a>
<a href="https://winter-blanket.github.io/deploy-website-with-github-pages">7. Github Pages로 Docusaurus 웹사이트 호스팅하기</a>
<a href="https://winter-blanket.github.io/collect-user-insight">8. 구글 서치 콘솔 등록하고 사용자 인사이트 얻기</a></p></series-bookmark>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="design-system을-알아보고-싶었던-이유">Design System을 알아보고 싶었던 이유<a href="https://winter-blanket.github.io/understand-design-system-and-figma#design-system%EC%9D%84-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B3%A0-%EC%8B%B6%EC%97%88%EB%8D%98-%EC%9D%B4%EC%9C%A0" class="hash-link" aria-label="Design System을 알아보고 싶었던 이유에 대한 직접 링크" title="Design System을 알아보고 싶었던 이유에 대한 직접 링크">​</a></h2>
<p>Design System을 처음 알게 된 계기는 첫 회사에서 새로운 제품을 런칭 준비하면서 Design System 적용을 시작했을 때였다. 프로덕트 디자인에 대한 막연한 관심이야 많았지만, 업무에 도움 될만한 배경 지식을 어떻게 쌓아야 할지에 대해선 전혀 감이 없었다. 그러던 와중에 알게 된 Design System은 첫 인상부터 굉장히 흥미로웠다. 당시 알아보았던 바로는 Design System은 <a href="https://atomicdesign.bradfrost.com/chapter-2/" target="_blank" rel="noopener noreferrer">Atomic Design Methodology</a>에 기반하고 있다. 가장 작은 디자인 요소에서 시작해서 그 요소들을 합치고 조합해나가는 과정에서 새로운 Component가 만들어진다. 디자인과 관련된 영역은 미적 감수성이 있어야만 들여다볼 수 있다고 생각했던 멋모르는 나에게 이해하기 명확하다는 점만으로도 더 자세히 들여다보고 싶다는 생각이 들었다.</p>
<full-image><img loading="lazy" src="https://atomicdesign.bradfrost.com/images/content/atomic-design-process.png" alt="Atomic Design Methodology" class="img_ev3q"></full-image>
<full-caption>Atomic Design Methodology의 디자인 전개 과정</full-caption>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="일단-한-번-써보기">일단 한 번 써보기<a href="https://winter-blanket.github.io/understand-design-system-and-figma#%EC%9D%BC%EB%8B%A8-%ED%95%9C-%EB%B2%88-%EC%8D%A8%EB%B3%B4%EA%B8%B0" class="hash-link" aria-label="일단 한 번 써보기에 대한 직접 링크" title="일단 한 번 써보기에 대한 직접 링크">​</a></h2>
<p>모름지기 무언가 새로운 지식을 배울려면 그 지식을 활용한 프로젝트를 실제로 만들어 보는 게 가장 빠르다는 지론을 가지고 있다. 마침 포트폴리오용 웹페이지를 하나 만들어야겠다, 나만의 디자인 시스템을 아주 기초적이고 가볍게라도 만들어보면 어떨까? 라는 생각을 했다. 다 만들고나서 보니 static한 포트폴리오 페이지 하나를 위해서 Design System에서 쓰이는 기능을 쓴다는건 분명 오버 스펙이었지만, 가볍게 쓰던 툴의 고급 기능을 써봤다는 것 만으로도 재밌는 경험을 할 수 있다. 결과적으로 Design System 흉내를 살짝 내보려고 Figma의 고급 기능을 힐끗 가져와본 셈이다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="figma의-auto-layout과-property">Figma의 Auto Layout과 Property<a href="https://winter-blanket.github.io/understand-design-system-and-figma#figma%EC%9D%98-auto-layout%EA%B3%BC-property" class="hash-link" aria-label="Figma의 Auto Layout과 Property에 대한 직접 링크" title="Figma의 Auto Layout과 Property에 대한 직접 링크">​</a></h2>
<p>살짝 다른 얘기지만 Figma는 UI Design이 아니여도 활용할 여지가 굉장히 다양한 툴이다. <etc>(개인에게는 모든 기능이 무료라는 점이 가장 중요하다.)</etc> 발표자료나 문서 디자인에 쓰기에도 괜찮아서 유료 프로그램인 파워포인트를 대체하기에도 괜찮다. 벡터 기반이 아니어서 편집 디자인에 쓰기엔 제약이 있다고 들었지만 그래도 왠만한 시각 디자인에는 두루 활용할 수 있다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="auto-layout">Auto Layout<a href="https://winter-blanket.github.io/understand-design-system-and-figma#auto-layout" class="hash-link" aria-label="Auto Layout에 대한 직접 링크" title="Auto Layout에 대한 직접 링크">​</a></h3>
<iframe src="https://www.youtube.com/embed/TyaGpGDFczw" title="YouTube video player" frameborder="0" allow="accelerometer; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe>
<p>Auto Layout은 오브젝트의 배치와 정렬을 알아서 맞춰주는 기능이라, 앞서 말한 발표자료 제작 같은 상황에서 활용하곤 했다. <etc>한국인이 늘 그렇듯이</etc> 특별히 사용법을 찾아보지 않고 일단 써보면서 익혔었는데 평소 이런 디자인 툴에 익숙하거나 약간의 센스만 있다면 그럭저럭 익힐 수 있다. 하지만 이번에는 피그마 기초도 조금 익혀보자는 목표가 있었으므로 유튜브에 정리된 영상을 보며 기능을 익혀갔다. 유튜브 가이드 영상이 워낙 잘 만들어져있어서 기초적인 디자인을 하는 데는 전혀 지장이 없을 만큼 주요 기능을 쉽게 이해할 수 있었다.</p>
<p><img loading="lazy" alt="오토 레이아웃 기능으로 만든 디자인" src="https://winter-blanket.github.io/assets/images/screenshot-design-with-auto-layout-86deb80487afc7abccc18d6b17dbc0d9.png" width="2830" height="282" class="img_ev3q"></p>
<p>덕분에 전에는 할 줄 모르던 오브젝트 배치가 가능해졌다. 예를 들면 위와 같은 모양에서 회사 이름은 왼편에, 재직 기간과 직무 이름은 오른편에 고정되어 있고, 그 사이에 남는 공간에 회사를 설명하는 주요 키워드가 알아서 중간에 배치되길 바랬다. 이전이라면 각각을 그룹화한 다음에 간격 정렬 버튼을 눌러서 배치했겠지만, 이 경우 배치한 오브젝트의 길이가 조금이라도 바뀌면 문제가 생긴다. 간격 정렬 버튼은 눌렀을 때 그 상태 기준으로 정렬해주기 때문에 그 이후에 오브젝트의 상태가 바뀌었다면 다시 버튼을 눌러가며 조정해야 하기 때문이다. 반면 이번에 Auto Spacing 기능도 같이 익히면서 사이 간격이 자동으로 조절되도록 Auto layout을 걸 수 있게 되었다.</p>
<left-image><img loading="lazy" alt="Auto Spacing 없이 정렬했을 때" src="https://winter-blanket.github.io/assets/images/screenshot-not-auto-spacing-77ad1d6fa14db167cefb1845c009a5f4.png" width="476" height="316" class="img_ev3q"></left-image>
<right-image><img loading="lazy" alt="Auto Spacing을 걸었을 때" src="https://winter-blanket.github.io/assets/images/screenshot-auto-spacing-33a4dbdfdde7bde78e96baf3d5d1be24.png" width="476" height="316" class="img_ev3q"></right-image>
<left-caption>Auto Spacing 없이 좌측 정렬했을 때 : 자식 오브젝트들이 왼편에 쏠려서 정렬된다.</left-caption>
<right-caption>Auto Spacing을 걸었을 때 : 자식 오브젝트들이 사이 공간을 알아서 채우면서 양끝을 꽉 채우며 정렬된다.</right-caption>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="display--flex-사용법-익히기">display : flex 사용법 익히기<a href="https://winter-blanket.github.io/understand-design-system-and-figma#display--flex-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%9D%B5%ED%9E%88%EA%B8%B0" class="hash-link" aria-label="display : flex 사용법 익히기에 대한 직접 링크" title="display : flex 사용법 익히기에 대한 직접 링크">​</a></h4>
<p>디자인할 때는 신나서 했지만 막상 개발할 때가 오니, 간격 조정을 어떻게 해야 하나 고민이었다. Figma에서 간단한 CSS는 바로 만들어주기는 하는데, 막상 개발할 때는 안 쓰게 되더라 정도로 알고 있었다. 하지만 난 복잡한 구조도 아니고 자동 생성된 내용을 보고 참고는 될 거 같아서 살펴봤는데 덕분에 <code>display : flex</code>를 다루는 법을 알 수 있었다.</p>
<center-image><img loading="lazy" alt="피그마에서 자동 생성되는 CSS의 예시 스크린샷" src="https://winter-blanket.github.io/assets/images/screenshot-css-in-figma-480aa839799a8b50359491f870c6382c.png" width="692" height="1578" class="img_ev3q"></center-image>
<full-caption>피그마에서 볼 수 있는 자동 생성 CSS. 마침 이번 개발을 진행할 때 피그마의 이 기능이 업데이트되면서 사용법이 조금 바뀌었다. 평소에는 이런 개발자용 정보가 보이지 않다가, 화면 상단의 토글 버튼을 눌러서 개발자 모드로 바꾸면 개발자를 위한 상세 정보가 나오는 방식이다.</full-caption>
<p>CSS를 배운지도 너무 오래돼서 기억하는거라곤 <code>display : block, display : inline-block</code> 정도였다. <code>flex</code>는 배우긴 했지만 막상 쓸 일이 없어서 어떤 용도였는지도 까먹고 있었다. 위의 화면은 Auto spacing을 걸어놓은 오브젝트를 클릭한 상태에서 개발자 모드를 켰을 때의 상태다. 간단히 보자면 대충 아래와 같은 방식으로 Figma의 Auto Layout 설정을 그대로 화면에 옮길 수 있다.</p>
<ol>
<li>Auto Layout을 건 오브젝트라면 <code>display : flex</code>를 추가한다.</li>
<li>Layout 방향에 따라 <code>flex-direction</code>을 추가한다.</li>
<li>자식 오브젝트의 정렬을 어떻게 썼는지에 따라 <code>align-items, justify-content</code>를 적절히 사용한다.</li>
</ol>
<p>예를 들면, 아래와 같은 케이스들이 있다.</p>
<full-image><img loading="lazy" alt="Auto Layout의 종류와 해당 CSS" src="https://winter-blanket.github.io/assets/images/type-of-auto-layout-c81a74c67730eb9987f1904f60298dc7.png" width="920" height="1168" class="img_ev3q"></full-image>
<p>자동 정렬되는 방향이 수평이면 <code>flex-direction : row</code>, 사이 공간을 넣어줘야 한다면 <code>justify-content : space-between</code>, 그리고 쏠려야 하는 위치가 어딘지에 따라서 <code>align-items</code>를 넣어주면 된다.</p>
<p>일단 한 번 규칙을 익히고 나니 그 다음은 쉬웠다. 결국 이렇게 정렬된 오브젝트의 나열과 조합이기 때문에 계속 반복해서 적용하면 되기 때문이다. 다만 가끔씩 위치를 강제 지정할 때마다 쓰는 <code>position : relative, absolute</code>랑 같이 쓰다보면 원하는대로 화면이 그려지지 않는 경우가 있었다. 이 경우 적당히 wrapper 역할을 할 div를 하나 더 씌워서 <code>position</code> 속성을 적용하곤 했다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="property">Property<a href="https://winter-blanket.github.io/understand-design-system-and-figma#property" class="hash-link" aria-label="Property에 대한 직접 링크" title="Property에 대한 직접 링크">​</a></h3>
<iframe src="https://www.youtube.com/embed/iIq8FLt1hUY" title="YouTube video player" frameborder="0" allow="accelerometer; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe>
<p>디자이너분들이 작업할 떄 옆에서 구경하면서 버튼 하나로 아이콘이 사라졌다, 모양이 바뀌었다 하는 걸 봤을 때 편리해보여서 어떤 기능인지 찾아봤었다. 사용자의 상호작용에 따라서, 혹은 상황에 따라서 하나의 Component가 다양한 형태를 가질 수 있다. 이러한 가짓수를 속성화해서 각 속성 사이를 간편하게 오고갈 수 있도록하는 기능이 Property이다. 결과적으론 간단한 포트폴리오 페이지 안에서 다양한 Component 변수가 필요하진 않기 때문에 기능 사용법을 익히면서 가볍게만 사용해보았다.</p>
<center-image><img loading="lazy" alt="프로퍼티 적용 예시" src="https://winter-blanket.github.io/assets/images/property-example-eb9eb1229f449ace7f0a0a3e7c1f88e1.png" width="918" height="1076" class="img_ev3q"></center-image>
<p>예를 들면 내가 만든 디자인은 위와 같은 종류의 배경색과 내부 글자색을 활용한다. 배경색이 하얗거나, 메인 컬러거나, 투명한 경우를 각각 프로퍼티로 설정해두면 디자인을 하다가 문득 배경색을 바꿔보고 싶을 때 버튼 클릭 한 번으로 간편하게 바꿀 수 있다. 디자인 단계에서는 이 기능을 크게 활용할 일이 없었지만, CSS를 더 효율적으로 설정하는 방법을 익힐 수 있었다. 예를 들면 Property에 해당하는 내용을 아래와 같이 설정한다.</p>
<div class="language-css codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockTitle_Ktv7">/src/css/custom.css</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-css codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token selector class" style="color:rgb(255, 121, 198)">.bg-color-white</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">background-color</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">var</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--grayscale-color-white</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">color</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">var</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-color-dark</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token selector class" style="color:rgb(255, 121, 198)">.bg-color-white</span><span class="token selector" style="color:rgb(255, 121, 198)"> *</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">color</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">var</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-color-dark</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token selector class" style="color:rgb(255, 121, 198)">.bg-color-primary</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">background-color</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">var</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--primary-color</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">color</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">var</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-color-light</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token selector class" style="color:rgb(255, 121, 198)">.bg-color-primary</span><span class="token selector" style="color:rgb(255, 121, 198)"> *</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">color</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">var</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-color-light</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token selector class" style="color:rgb(255, 121, 198)">.bg-color-empty</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">background-color</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token color">transparent</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">border</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> solid </span><span class="token function" style="color:rgb(80, 250, 123)">var</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--border-sm</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">var</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--grayscale-color-200</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">color</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">var</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-color-light</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token selector class" style="color:rgb(255, 121, 198)">.bg-color-empty</span><span class="token selector" style="color:rgb(255, 121, 198)"> *</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  </span><span class="token property">color</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">var</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token variable" style="color:rgb(189, 147, 249);font-style:italic">--font-color-light</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="클립보드에 코드 복사" title="복사" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>예전이라면 각 element에 class로 고유한 이름을 짓고, CSS로 꾸며주는 방식을 사용했다. 이번에는 미리 어떻게 꾸밀지 설정해둔 class 이름을 필요한 element class에 추가해주는 방식으로 구현했다. 모양과 용도가 전혀 다른 element여도 배경색이 메인 컬러라면 <code>.bg-color-primary</code>를 추가해주는 식이다. 이렇게 하면 꾸밈 설정은 CSS에서 한 번만 설정하고, HTML이 그려지는 곳에서 적재적소에 class 이름을 추가해주면 되기 때문에 CSS에 중복 내용이 발생하는 걸 줄일 수 있었다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="마치며">마치며<a href="https://winter-blanket.github.io/understand-design-system-and-figma#%EB%A7%88%EC%B9%98%EB%A9%B0" class="hash-link" aria-label="마치며에 대한 직접 링크" title="마치며에 대한 직접 링크">​</a></h2>
<p>처음 디자인을 시작할 땐 나름 특이한 디자인을 해보고 싶어서 Pinterest나 여러 자료를 찾아봤지만, 아니나 다를까 쉽지 않았다. 목표를 너무 어렵게 잡아서 완료를 못하곤 했으니 일단 완성하자는 데 의의를 두었다. 모든 디자인 요소를 배치하는 데 Auto Layout을 쓰니 일일이 위치를 잡아줄 필요가 없어서 편리했다.
설명하다보니 개발 단계에서 배웠던 내용을 위에 미리 다뤘지만, 실제로는 디자인을 끝내고 나서 좀 더 사전 공부를 하는 시간이 있었다. 단순한 HTML + CSS 구조 밖에 다뤄보지 않았기 때문에 React의 기초 개념을 살펴봤다. 그리고 오랜만에 들어가는 Docusaurus 사용자 가이드 페이지를 전체적으로 훑어보고 개발 환경 준비를 시작했다.</p>
<series-bookmark><p><a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus">1. 웅덩이 파는 데 포크레인 써보기</a></p><current-post><p><a href="https://winter-blanket.github.io/understand-design-system-and-figma">2. Design System 흉내를 위해 Figma 힐끗 보기</a></p></current-post><p><a href="https://winter-blanket.github.io/react-101-and-install-docusaurus">3. React 기초 훑어보고 Docusaurus 설치하기</a>
<a href="https://winter-blanket.github.io/docusaurus-configuration-1">4. Docusaurus config 톺아보기 (1)</a>
<a href="https://winter-blanket.github.io/docusaurus-configuration-2">5. Docusaurus config 톺아보기 (2)</a>
<a href="https://winter-blanket.github.io/customize-style-of-docusaurus">6. Swizzle로 디자인 커스터마이징하기</a>
<a href="https://winter-blanket.github.io/deploy-website-with-github-pages">7. Github Pages로 Docusaurus 웹사이트 호스팅하기</a>
<a href="https://winter-blanket.github.io/collect-user-insight">8. 구글 서치 콘솔 등록하고 사용자 인사이트 얻기</a></p></series-bookmark>]]></content:encoded>
            <category>Docusaurus로 개인 홈페이지 만들기 #2</category>
            <category>프로그래밍 공부 기록</category>
            <category>Figma</category>
            <category>Design System</category>
            <category>React</category>
            <category>Docusaurus</category>
            <category>Github Pages</category>
        </item>
        <item>
            <title><![CDATA[웅덩이 파는 데 포크레인 써보기]]></title>
            <link>https://winter-blanket.github.io/create-personal-website-with-docusaurus</link>
            <guid>https://winter-blanket.github.io/create-personal-website-with-docusaurus</guid>
            <pubDate>Mon, 26 Jun 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Docusaurus로 개인 홈페이지 만들기의 A to Z]]></description>
            <content:encoded><![CDATA[<series-bookmark><p><current-post><a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus">1. 웅덩이 파는 데 포크레인 써보기</a></current-post>
<a href="https://winter-blanket.github.io/understand-design-system-and-figma">2. Design System 흉내를 위해 Figma 힐끗 보기</a>
<a href="https://winter-blanket.github.io/react-101-and-install-docusaurus">3. React 기초 훑어보고 Docusaurus 설치하기</a>
<a href="https://winter-blanket.github.io/docusaurus-configuration-1">4. Docusaurus config 톺아보기 (1)</a>
<a href="https://winter-blanket.github.io/docusaurus-configuration-2">5. Docusaurus config 톺아보기 (2)</a>
<a href="https://winter-blanket.github.io/customize-style-of-docusaurus">6. Swizzle로 디자인 커스터마이징하기</a>
<a href="https://winter-blanket.github.io/deploy-website-with-github-pages">7. Github Pages로 Docusaurus 웹사이트 호스팅하기</a>
<a href="https://winter-blanket.github.io/collect-user-insight">8. 구글 서치 콘솔 등록하고 사용자 인사이트 얻기</a></p></series-bookmark>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="docusaurus로-개인-홈페이지-만들기">Docusaurus로 개인 홈페이지 만들기<a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus#docusaurus%EB%A1%9C-%EA%B0%9C%EC%9D%B8-%ED%99%88%ED%8E%98%EC%9D%B4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B8%B0" class="hash-link" aria-label="Docusaurus로 개인 홈페이지 만들기에 대한 직접 링크" title="Docusaurus로 개인 홈페이지 만들기에 대한 직접 링크">​</a></h2>
<p>블로그를 겸하는 개인 홈페이지를 만들고 싶다는 생각을 꽤 오래전부터 해왔다. 시도했던 적도 많고 다양한 툴을 사용했다. 만드는 게 어려워서 포기한 적도 있고, 블로그라고 할 만큼 꾸준히 글 쓰는 걸 실패해서 포기한 적도 많았다. 워드프레스, 노션, Docusaurus 등 다양한 도구를 써봤는데 Docusaurus는 그 중 단연 난이도가 높았던 방식이다. React에 대한 이해가 필요하고 당연히 기초적인 프로그래밍이 가능해야 한다. 다만 프로그래밍 난이도가 높다는 건 당연히 그만큼 자유도가 높다는 뜻이기 때문에 가장 끌렸던 방식이기도 했다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="개인-홈페이지를-만드는-다양한-도구들">개인 홈페이지를 만드는 다양한 도구들<a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus#%EA%B0%9C%EC%9D%B8-%ED%99%88%ED%8E%98%EC%9D%B4%EC%A7%80%EB%A5%BC-%EB%A7%8C%EB%93%9C%EB%8A%94-%EB%8B%A4%EC%96%91%ED%95%9C-%EB%8F%84%EA%B5%AC%EB%93%A4" class="hash-link" aria-label="개인 홈페이지를 만드는 다양한 도구들에 대한 직접 링크" title="개인 홈페이지를 만드는 다양한 도구들에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="docusaurus">Docusaurus<a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus#docusaurus" class="hash-link" aria-label="Docusaurus에 대한 직접 링크" title="Docusaurus에 대한 직접 링크">​</a></h3>
<full-image><img loading="lazy" alt="Docusaurus 홈페이지 메인 화면" src="https://winter-blanket.github.io/assets/images/homepage_docusaurus-8ad731746b52ef10e44bb531c463458e.png" width="3358" height="1526" class="img_ev3q"></full-image>
<full-caption>Docusaurus 홈페이지</full-caption>
<p><a href="https://docusaurus.io/" target="_blank" rel="noopener noreferrer">Docusaurus</a>를 처음 알게 된 건 회사 업무 때문에 사용자 가이드 웹페이지를 만들어야 했을 때였다. 사용자 가이드 제작에 개발 리소스를 투입할 수 없는 상황이었기 때문에 기본적인 프로그래밍이 가능한 내 능력만으로 웹페이지 개발이 손쉽게 가능해야 했다. 동시에 가이드 내용 자체는 일반적인 문서 작업 처럼 진행할 수 있다는 점이 장점이었다. 사용자 가이드 제작용 서비스로는 <a href="https://www.gitbook.com/" target="_blank" rel="noopener noreferrer">Gitbook</a>도 있고, 요즘은 노션을 주로 사용하는 것 같다. 당시에는 노션을 잘 몰랐고 Gitbook은 유료 결제가 월별 구독으로 들어가야 하는 점이 번거로웠다. 큰 금액은 아니었지만 Docusaurus는 라이브러리라 무료이고, 프로그래밍이 전혀 불가능한 사람이 관리할 상황을 고려해야 하진 않았기 때문에 결과적으로 Docusaurus로 제작했었다.</p>
<p>Docusaurus는 기본적으로 사용자 가이드와 같은 Docs 관리용 라이브러리지만 개인/사업체용 웹페이지 제작용으로 쓰기에도 적절하다. 블로그와 Static page 제작을 지원하기 때문이다. 다만 Markdown, React에 대한 이해가 반드시 필요하다. 또한 Docusaurus 순정 상태를 거의 그대로 유지하지 않는 이상 소스 코드 충돌이나 기타 버그가 발생할 수 있는데 프로그래밍이 가능하지 않은 사람이라면 대처가 어렵다는 단점이 있다. 애초에 &lt;서비스&gt;가 아니라 &lt;라이브러리&gt;기 때문에 개발자가 타깃이고, 다만 모든 페이지를 직접 다 개발하는 것이 번거로운 사람을 위해 템플릿과 같은 역할을 한다고 보는 것이 맞다. 이런 특징 때문에 나처럼 개발자로 먹고 살 순 없지만, 프로그래밍을 툴처럼 사용하는 기초적인 능력이 있는 사람에게는 면허 없이 포크레인을 써서 땅을 파는 것과 같은(?) 효과를 발휘할 수 있다.</p>
<ul>
<li>
<p>장점</p>
<ul>
<li>직접 개발하는 만큼 커스터마이징할 수 있는 자유도가 가장 높음</li>
<li>마크다운 방식으로 포스트를 작성할 수 있음</li>
</ul>
</li>
<li>
<p>단점</p>
<ul>
<li>웹페이지 개발에 대한 기초 이해 + React에 대한 기초 이해가 필요함</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="워드프레스">워드프레스<a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus#%EC%9B%8C%EB%93%9C%ED%94%84%EB%A0%88%EC%8A%A4" class="hash-link" aria-label="워드프레스에 대한 직접 링�크" title="워드프레스에 대한 직접 링크">​</a></h3>
<full-image><img loading="lazy" alt="워드프레스 홈페이지 메인 화면" src="https://winter-blanket.github.io/assets/images/homepage_wordpress-a08b2c43582af114cbf200149918c835.png" width="3358" height="1592" class="img_ev3q"></full-image>
<full-caption>워드프레스 홈페이지</full-caption>
<p>한 10년 전에는 노코드 홈페이지 제작은 곧 <a href="https://wordpress.com/ko/" target="_blank" rel="noopener noreferrer">워드프레스</a>였지만, 요즘은 Wix 등 더 사용자 친화적인 도구들이 많이 나와서 워드프레스를 쓰는 경우는 잘 보지 못하는 것 같다. 학생 시절에 홈페이지 제작 외주를 하면서 꽤 깊게 다뤄봤는데 관리용 페이지가 잘되어 있어서 홈페이지 외주용으로는 제격이었다. 다만 디자인을 깔끔하게 만들기에는 CSS가 묘하게 깨지는 감이 있었고, PHP 기반이어서 HTML, CSS 정도만 아는 상태에서 커스터마이징에 여러 한계가 있었다. 그러한 한계를 방대한 커뮤니티에서 찾을 수 있는 플러그인으로 해결하곤 하지만, 당연히 플러그인마다 디자인 스타일이 다르다. 워드프레스는 사용했던 도구 중 디자인 측면에서 퀄리티를 높이기가 가장 어려운 편이었다. 다만 내가 겪었던 워드프레스는 거의 10년 전 기준이니 현재는 당시 겪었던 문제가 많이 개선됐을 거라 생각한다.</p>
<ul>
<li>
<p>장점</p>
<ul>
<li>설치와 함께 알아서 생성되는 관리용 페이지</li>
<li>방대한 써드파티 커뮤니티</li>
</ul>
</li>
<li>
<p>단점</p>
<ul>
<li>디자인 완성도를 끌어올리기 어려움</li>
<li>관련 자료나 커뮤니티가 대부분 영어 기반</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="노션">노션<a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus#%EB%85%B8%EC%85%98" class="hash-link" aria-label="노션에 대한 직접 링크" title="노션에 대한 직접 링크">​</a></h3>
<full-image><img loading="lazy" alt="노션 ��홈페이지 메인 화면" src="https://winter-blanket.github.io/assets/images/homepage_notion-36edbf8062744dd498af12056df44063.png" width="3358" height="1592" class="img_ev3q"></full-image>
<full-caption>노션 홈페이지</full-caption>
<p>전천후 만능 도구로 쓰이는 <a href="https://notion.so/" target="_blank" rel="noopener noreferrer">노션</a>이다보니 개인 블로그로 꾸민 사례도 쉽게 찾아볼 수 있다. 디자인적 완성도는 말할 것도 없고 페이지 하나하나를 꾸미는 재미는 가장 쉽고 자유롭다. 노션으로 글을 써서 SNS에 올린 적도 있었고 꽤 많은 내용을 셋팅했지만 웹 유입이 불리하다는 점 때문에 오래 쓰긴 어려웠다. 우피 같은 도구를 쓰면 구글 애널리틱스를 붙일 수 있지만 어디까지나 방문한 사람에 대한 정보를 알 수 있을 뿐, 노션 페이지 자체가 알아서 구글 검색에 노출되게 할 순 없었다. 나 스스로도 구글에 자료를 찾을 때 노션 페이지가 검색된 기억은 거의 없었다. 가끔씩 노션 페이지를 보게 되는 경우는 검색된 웹페이지에서 노션 페이지 링크를 걸어놓아서 클릭해서 넘어갔을 때 뿐이었다. 반드시 수익화를 하고 싶었던 것은 아니지만 그래도 아무도 보지 않을 글을 꾸준히 쓰는 건 어려울 게 뻔했다. 노션은 그런 점에서 자연스런 유입 증가가 애초에 불가능할 것처럼 보였기 때문에 장기적인 수단으로 쓰기엔 맞지 않다고 생각했다.</p>
<ul>
<li>
<p>장점</p>
<ul>
<li>가장 간편한 사용성만으로 가장 예쁜 디자인을 만들 수 있음</li>
<li>다양한 노션 템플릿을 참고할 수 있음</li>
</ul>
</li>
<li>
<p>단점</p>
<ul>
<li>웹 유입이 매우 불리함</li>
<li>방문자 분석 등, 본격적으로 웹페이지처럼 쓰려면 <a href="https://www.oopy.io/" target="_blank" rel="noopener noreferrer">oopy</a>같은 써드파티 도구가 반드시 필요함</li>
</ul>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="웅덩이-파는-데-포크레인-써보기">웅덩이 파는 데 포크레인 써보기<a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus#%EC%9B%85%EB%8D%A9%EC%9D%B4-%ED%8C%8C%EB%8A%94-%EB%8D%B0-%ED%8F%AC%ED%81%AC%EB%A0%88%EC%9D%B8-%EC%8D%A8%EB%B3%B4%EA%B8%B0" class="hash-link" aria-label="웅덩이 파는 데 포크레인 써보기에 대한 직접 링크" title="웅덩이 파는 데 포크레인 써보기에 대한 직접 링크">​</a></h2>
<p>처음 개인 홈페이지를 만들고 싶다고 생각했을 때 사실 어떤 내용을 보여주고 싶은지에 대한 계획은 구체적으로 없었다. 그저 개인적인, 그리고 홍보용 공간을 갖고 싶었고, 더 단순하게는 코딩 개인 프로젝트를 해보고 싶었다. <etc>(원래 무언가를 야매로 배운 사람이 욕심은 더 많은 법이다.)</etc> 퇴사 후 자기계발 시간을 가지게 되면서 진지하게 홈페이지 계획을 짜보니, 결과적으로 Docusaurus를 쓰겠다는 선택은 다소 웅덩이 파겠다고 포크레인을 동원한게 아닐까 하는 생각도 들었다. 그러나 장기적인 관점에서는 어떻게 이 곳이 확장될지 알 수 없고, 더 많은 자유도를 가질 수 있다는 점에서, 그리고 무엇보다 개발 과정에서 많은 것을 배웠고 재밌다는 점에서 좋은 선택이었다고 생각한다.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="무엇을-배웠을까">무엇을 배웠을까<a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus#%EB%AC%B4%EC%97%87%EC%9D%84-%EB%B0%B0%EC%9B%A0%EC%9D%84%EA%B9%8C" class="hash-link" aria-label="무엇을 배웠을까에 대한 직접 링크" title="무엇을 배웠을까에 대한 직접 링크">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="1-디자인--design-system-구현을-위한-figma의-auto-layout-property-기능-써보기">1. 디자인 : Design System 구현을 위한 Figma의 Auto Layout, Property 기능 써보기<a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus#1-%EB%94%94%EC%9E%90%EC%9D%B8--design-system-%EA%B5%AC%ED%98%84%EC%9D%84-%EC%9C%84%ED%95%9C-figma%EC%9D%98-auto-layout-property-%EA%B8%B0%EB%8A%A5-%EC%8D%A8%EB%B3%B4%EA%B8%B0" class="hash-link" aria-label="1. 디자인 : Design System 구현을 위한 Figma의 Auto Layout, Property 기능 써보기에 대한 직접 링크" title="1. 디자인 : Design System 구현을 위한 Figma의 Auto Layout, Property 기능 써보기에 대한 직접 링크">​</a></h3>
<p>일단 만들고 보자는 생각으로 덤벼들었더니 예상하지 못한 어려움이 곳곳에 있었고, 결과적으로 더 많은 걸 배울 수 있었다. 위에 적었듯이 하나의 소프트웨어 제품을 만들 때 진행하는 단계를 간략하게 진행한 셈이었다. PM으로 일하면서 옆에서 구경만 했었던 Design System(이라고 하기엔 몹시 부끄럽지만) 기반의 Component 요소를 만들기 위해 Figma의 Auto Layout, Property 기능을 써보았다. Auto Layout 정도는 가끔씩 Figma로 간단한 디자인을 할 때 써보긴 했지만 이번에는 자동 생성되는 CSS를 같이 보면서 덩달아 CSS 다루는 법도 익힐 수 있었다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="2-개발-준비--react의-컨셉-이해-docusaurus-파악하기">2. 개발 준비 : React의 컨셉 이해, Docusaurus 파악하기<a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus#2-%EA%B0%9C%EB%B0%9C-%EC%A4%80%EB%B9%84--react%EC%9D%98-%EC%BB%A8%EC%85%89-%EC%9D%B4%ED%95%B4-docusaurus-%ED%8C%8C%EC%95%85%ED%95%98%EA%B8%B0" class="hash-link" aria-label="2. 개발 준비 : React의 컨셉 이해, Docusaurus 파악하기에 대한 직접 링크" title="2. 개발 준비 : React의 컨셉 이해, Docusaurus 파악하기에 대한 직접 링크">​</a></h3>
<p>예전 회사에서 처음 Docusaurus를 쓸 때는 React를 전혀 모르는 상태였고, 그래도 사용은 가능했지만 가이드에 적힌 명령어를 전혀 이해하지 못하고 기계적으로 따라하다보니 커스터마이징이나 문제 상황에서 대처할 수 있는 여지가 굉장히 적었다. 그래서 이번에는 기초 개념이라도 React를 공부하고 써보자는 생각을 했고 노마드 코더의 무료 강의가 큰 도움이 되었다.
Docusaurus를 처음 써 본 지도 시간이 꽤 흘러서 현재는 Docusaurus2가 나온 상태이다. 아주 가볍게 사용하는 용도라면 크게 달라진 점이 없지만 내부 API 구조가 꽤 바뀐 모양이었다. 이번에는 레이아웃도 꽤 많이 건드릴 생각이었기 때문에 <a href="https://docusaurus.io/" target="_blank" rel="noopener noreferrer">사용자 가이드 페이지</a>를 좀 더 자세히 살펴보며 파악했다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="3-개발--디자인-커스터마이징과-docusaurus-swizzle-이해하기">3. 개발 : 디자인 커스터마이징과 Docusaurus Swizzle 이해하기<a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus#3-%EA%B0%9C%EB%B0%9C--%EB%94%94%EC%9E%90%EC%9D%B8-%EC%BB%A4%EC%8A%A4%ED%84%B0%EB%A7%88%EC%9D%B4%EC%A7%95%EA%B3%BC-docusaurus-swizzle-%EC%9D%B4%ED%95%B4%ED%95%98%EA%B8%B0" class="hash-link" aria-label="3. 개발 : 디자인 커스터마이징과 Docusaurus Swizzle 이해하기에 대한 직접 링크" title="3. 개발 : 디자인 커스터마이징과 Docusaurus Swizzle 이해하기에 대한 직접 링크">​</a></h3>
<p>Docusaurus 설치 직후 보게 되는 기본적인 디자인 레이아웃은 요즘 가장 흔히 볼 수 있는 깔끔한, 반응형 디자인으로 구성되어 있다. 그럼에도 당연히 커스터마이징은 필요하다. 인덱스 페이지의 내용을 전부 바꿔야 하고, 색상, 폰트, 간격 등을 조정해야 한다. 이 정도 셋팅은 예상했는지 설치 직후에 이미 style.css 파일이 생성되어 있다. 그래서 CSS 만으로 가능한 변화는 React에 대한 이해가 전혀 없어도 가능하다. 다만 동적인 변수값을 활용해야 하는 등, 정적인 디자인 변경 이상의 커스터마이징을 하려면 Docusaurus 라이브러리 코드를 직접 건드리는 작업이 필요하다. 이번 홈페이지 제작에서 가장 많은 삽질을 하고 시간을 보낸 단계가 바로 이 때였다. 내가 원했던 걸 100% 구현할 수 없었지만 그래도 대부분은 구현하고, 나중에 응용할 수 있겠다는 자신감을 얻었다.</p>
<p>Docusaurus는 Theme 커스터마이징을 지원하는 데 이를 <a href="https://docusaurus.io/docs/swizzling" target="_blank" rel="noopener noreferrer">Swizzle</a>이라고 소개하고 있다. 간단히 말하면 Docusaurus에 이미 구현되어 있는 React Component 파일을 사용자가 수정할 수 있는 장치이다. 물론 이런 별도의 장치가 없더라도 라이브러리인 이상 어떻게든 수정은 가능하지만 이후 라이브러리 패치에 따른 호환성을 장담하기 어렵고, 나와 같은 초보 개발자에게는 불가능한 방법이다. 호환성을 완전히 보장할 순 없지만 나의 커스터마이징이 미칠 영향력을 판단하면서 손쉽게 내가 수정해야 하는 파일에 접근할 수 있도록 도움을 주는 것이 Swizzle의 역할이다.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="4-배포--github-pages-사용법-익히기">4. 배포 : Github Pages 사용법 익히기<a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus#4-%EB%B0%B0%ED%8F%AC--github-pages-%EC%82%AC%EC%9A%A9%EB%B2%95-%EC%9D%B5%ED%9E%88%EA%B8%B0" class="hash-link" aria-label="4. 배포 : Github Pages 사용법 익히기에 대한 직접 링크" title="4. 배포 : Github Pages 사용법 익히기에 대한 직접 링크">​</a></h3>
<full-image><img loading="lazy" alt="Github Pages 홈페이지 메인 화면" src="https://winter-blanket.github.io/assets/images/homepage_githubpages-1af2f2b81c029bf98c690671a08575cb.png" width="3358" height="1526" class="img_ev3q"></full-image>
<full-caption>Github Pages 홈페이지</full-caption>
<p>개발이 끝났으면 이제 배포해야 할 때다. 몇 년 전에 웹사이트 개발을 배우던 초기에 배포와 도메인 연결 개념을 이해하고 사용법을 익히기까지 꽤 어려움을 겪었었다. 그 때는 아주 단순하게 HTML + CSS + Jquery로 연습하던 시절이라 웹호스팅 사이트에 호스팅과 도메인을 결제하고 FTP로 소스 코드를 올린다는게 내가 알고 있는 배포 방식이었다. 이 방식은 현재도 유효하지만 월별 유지 비용이 든다는 단점이 있다. 그래서 개인 홈페이지 제작에 여러 무료 호스팅 방법이 활용되곤 하는 데 <a href="https://pages.github.com/" target="_blank" rel="noopener noreferrer">Github Pages</a>는 그 수단 중 하나이다.</p>
<p>Github에서 계정당 1개의 username.github.io 도메인을 지원하는데 Github repository와 연결되어 호스팅 서버와 도메인을 한 번에 해결할 수 있다. 처음 써봤을 때는 배포 후에 제대로 도메인에 웹사이트가 표시되지 않아서 애를 먹었는데, 이번 프로젝트에서는 원활하게 배포를 진행할 수 있었다.</p>
<p>이제부터 이어지는 포스팅에서 그동안 배웠던 것과 문제를 해결한 과정을 순서대로 기록해둘 생각이다.</p>
<series-bookmark><current-post><p><a href="https://winter-blanket.github.io/create-personal-website-with-docusaurus">1. 웅덩이 파는 데 포크레인 써보기</a></p></current-post><p><a href="https://winter-blanket.github.io/understand-design-system-and-figma">2. Design System 흉내를 위해 Figma 힐끗 보기</a>
<a href="https://winter-blanket.github.io/react-101-and-install-docusaurus">3. React 기초 훑어보고 Docusaurus 설치하기</a>
<a href="https://winter-blanket.github.io/docusaurus-configuration-1">4. Docusaurus config 톺아보기 (1)</a>
<a href="https://winter-blanket.github.io/docusaurus-configuration-2">5. Docusaurus config 톺아보기 (2)</a>
<a href="https://winter-blanket.github.io/customize-style-of-docusaurus">6. Swizzle로 디자인 커스터마이징하기</a>
<a href="https://winter-blanket.github.io/deploy-website-with-github-pages">7. Github Pages로 Docusaurus 웹사이트 호스팅하기</a>
<a href="https://winter-blanket.github.io/collect-user-insight">8. 구글 서치 콘솔 등록하고 사용자 인사이트 얻기</a></p></series-bookmark>]]></content:encoded>
            <category>Docusaurus로 개인 홈페이지 만들기 #1</category>
            <category>프로그래밍 공부 기록</category>
            <category>Figma</category>
            <category>Design System</category>
            <category>React</category>
            <category>Docusaurus</category>
            <category>Github Pages</category>
        </item>
    </channel>
</rss>